{"ast":null,"code":"import invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from \"../../modules/requestIdleCallback\";\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle = void 0;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;","map":{"version":3,"names":["invariant","requestIdleCallback","cancelIdleCallback","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","addListener"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\n\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle = void 0;\n\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n\n\n  addListener: function addListener() {}\n};\n\nexport default InteractionManager;"],"mappings":"AAUA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,mBAAP,IAA8BC,kBAA9B;AAEA,IAAIC,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACNC,gBAAgB,EAAE,kBADZ;IAENC,mBAAmB,EAAE;EAFf,CADe;EASvBC,oBAAoB,EAAE,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;IACxD,IAAIC,MAAM,GAAG,KAAK,CAAlB;IAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;MAC3CH,MAAM,GAAGR,mBAAmB,CAAC,YAAY;QACvC,IAAIO,IAAJ,EAAU;UACRI,OAAO,CAACJ,IAAI,EAAL,CAAP;QACD;MACF,CAJ2B,CAA5B;IAKD,CANa,CAAd;IAOA,OAAO;MACLK,IAAI,EAAEH,OAAO,CAACG,IAAR,CAAaC,IAAb,CAAkBJ,OAAlB,CADD;MAELK,IAAI,EAAEL,OAAO,CAACG,IAAR,CAAaC,IAAb,CAAkBJ,OAAlB,CAFD;MAGLM,MAAM,EAAE,SAASA,MAAT,GAAkB;QACxBd,kBAAkB,CAACO,MAAD,CAAlB;MACD;IALI,CAAP;EAOD,CA1BsB;EAgCvBQ,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;IAC1D,OAAO,CAAP;EACD,CAlCsB;EAwCvBC,sBAAsB,EAAE,SAASA,sBAAT,CAAgCT,MAAhC,EAAwC;IAC9DT,SAAS,CAAC,CAAC,CAACS,MAAH,EAAW,iCAAX,CAAT;EACD,CA1CsB;EA6CvBU,WAAW,EAAE,SAASA,WAAT,GAAuB,CAAE;AA7Cf,CAAzB;AAgDA,eAAehB,kBAAf"},"metadata":{},"sourceType":"module"}