{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nimport * as React from 'react';\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport TouchableWithoutFeedback from \"../../Components/Touchable/TouchableWithoutFeedback\";\nimport View from \"../../Components/View/View\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction LogBoxButton(props) {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pressed = _React$useState2[0],\n    setPressed = _React$useState2[1];\n  var backgroundColor = props.backgroundColor;\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6)\n    };\n  }\n  var content = _jsx(View, {\n    style: StyleSheet.compose({\n      backgroundColor: pressed ? backgroundColor.pressed : backgroundColor.default\n    }, props.style),\n    children: props.children\n  });\n  return props.onPress == null ? content : _jsx(TouchableWithoutFeedback, {\n    hitSlop: props.hitSlop,\n    onPress: props.onPress,\n    onPressIn: function onPressIn() {\n      return setPressed(true);\n    },\n    onPressOut: function onPressOut() {\n      return setPressed(false);\n    },\n    children: content\n  });\n}\nexport default LogBoxButton;","map":{"version":3,"names":["React","StyleSheet","TouchableWithoutFeedback","View","LogBoxStyle","LogBoxButton","props","useState","pressed","setPressed","backgroundColor","default","getBackgroundColor","content","compose","style","children","onPress","hitSlop"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/LogBox/UI/LogBoxButton.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport TouchableWithoutFeedback from '../../Components/Touchable/TouchableWithoutFeedback';\nimport View from '../../Components/View/View';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\ntype Props = $ReadOnly<{|\n  backgroundColor: $ReadOnly<{|\n    default: string,\n    pressed: string,\n  |}>,\n  children?: React.Node,\n  hitSlop?: ?EdgeInsetsProp,\n  onPress?: ?(event: PressEvent) => void,\n  style?: ViewStyleProp,\n|}>;\n\nfunction LogBoxButton(props: Props): React.Node {\n  const [pressed, setPressed] = React.useState(false);\n\n  let backgroundColor = props.backgroundColor;\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6),\n    };\n  }\n\n  const content = (\n    <View\n      style={StyleSheet.compose(\n        {\n          backgroundColor: pressed\n            ? backgroundColor.pressed\n            : backgroundColor.default,\n        },\n        props.style,\n      )}>\n      {props.children}\n    </View>\n  );\n\n  return props.onPress == null ? (\n    content\n  ) : (\n    <TouchableWithoutFeedback\n      hitSlop={props.hitSlop}\n      onPress={props.onPress}\n      onPressIn={() => setPressed(true)}\n      onPressOut={() => setPressed(false)}>\n      {content}\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport default LogBoxButton;\n"],"mappings":";;AAUA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU;AACjB,OAAOC,wBAAwB;AAC/B,OAAOC,IAAI;AACX,OAAO,KAAKC,WAAW;AAAsB;AAgB7C,SAASC,YAAY,CAACC,KAAY,EAAc;EAC9C,sBAA8BN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CC,OAAO;IAAEC,UAAU;EAE1B,IAAIC,eAAe,GAAGJ,KAAK,CAACI,eAAe;EAC3C,IAAI,CAACA,eAAe,EAAE;IACpBA,eAAe,GAAG;MAChBC,OAAO,EAAEP,WAAW,CAACQ,kBAAkB,CAAC,IAAI,CAAC;MAC7CJ,OAAO,EAAEJ,WAAW,CAACQ,kBAAkB,CAAC,GAAG;IAC7C,CAAC;EACH;EAEA,IAAMC,OAAO,GACX,KAAC,IAAI;IACH,KAAK,EAAEZ,UAAU,CAACa,OAAO,CACvB;MACEJ,eAAe,EAAEF,OAAO,GACpBE,eAAe,CAACF,OAAO,GACvBE,eAAe,CAACC;IACtB,CAAC,EACDL,KAAK,CAACS,KAAK,CACX;IAAA,UACDT,KAAK,CAACU;EAAQ,EAElB;EAED,OAAOV,KAAK,CAACW,OAAO,IAAI,IAAI,GAC1BJ,OAAO,GAEP,KAAC,wBAAwB;IACvB,OAAO,EAAEP,KAAK,CAACY,OAAQ;IACvB,OAAO,EAAEZ,KAAK,CAACW,OAAQ;IACvB,SAAS,EAAE;MAAA,OAAMR,UAAU,CAAC,IAAI,CAAC;IAAA,CAAC;IAClC,UAAU,EAAE;MAAA,OAAMA,UAAU,CAAC,KAAK,CAAC;IAAA,CAAC;IAAA,UACnCI;EAAO,EAEX;AACH;AAEA,eAAeR,YAAY"},"metadata":{},"sourceType":"module"}