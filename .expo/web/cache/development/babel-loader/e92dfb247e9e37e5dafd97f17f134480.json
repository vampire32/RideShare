{"ast":null,"code":"\n\n'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar Dimensions = require(\"../Utilities/Dimensions\");\nvar InspectorOverlay = require(\"./InspectorOverlay\");\nvar InspectorPanel = require(\"./InspectorPanel\");\nvar Platform = require(\"../Utilities/Platform\");\nvar PressabilityDebug = require(\"../Pressability/PressabilityDebug\");\nvar React = require('react');\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\nvar View = require(\"../Components/View/View\");\nvar invariant = require('invariant');\nvar hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nvar renderers = findRenderers();\n\nhook.resolveRNStyle = require(\"../StyleSheet/flattenStyle\");\nvar viewConfig = require(\"../Components/View/ReactNativeViewViewConfig\");\nhook.nativeStyleEditorValidAttributes = Object.keys(viewConfig.validAttributes.style);\nfunction findRenderers() {\n  var allRenderers = Array.from(hook.renderers.values());\n  invariant(allRenderers.length >= 1, 'Expected to find at least one React Native renderer on DevTools hook.');\n  return allRenderers;\n}\nfunction getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, callback) {\n  for (var i = 0; i < renderers.length; i++) {\n    var _renderer$rendererCon;\n    var renderer = renderers[i];\n    if ((renderer == null ? void 0 : (_renderer$rendererCon = renderer.rendererConfig) == null ? void 0 : _renderer$rendererCon.getInspectorDataForViewAtPoint) != null) {\n      renderer.rendererConfig.getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, function (viewData) {\n        if (viewData && viewData.hierarchy.length > 0) {\n          callback(viewData);\n        }\n      });\n    }\n  }\n}\nvar Inspector = function (_React$Component) {\n  _inherits(Inspector, _React$Component);\n  var _super = _createSuper(Inspector);\n  function Inspector(props) {\n    var _this;\n    _classCallCheck(this, Inspector);\n    _this = _super.call(this, props);\n    _this._hideTimeoutID = null;\n    _this._attachToDevtools = function (agent) {\n      agent.addListener('hideNativeHighlight', _this._onAgentHideNativeHighlight);\n      agent.addListener('showNativeHighlight', _this._onAgentShowNativeHighlight);\n      agent.addListener('shutdown', _this._onAgentShutdown);\n      _this.setState({\n        devtoolsAgent: agent\n      });\n    };\n    _this._onAgentHideNativeHighlight = function () {\n      if (_this.state.inspected === null) {\n        return;\n      }\n      _this._hideTimeoutID = setTimeout(function () {\n        _this.setState({\n          inspected: null\n        });\n      }, 100);\n    };\n    _this._onAgentShowNativeHighlight = function (node) {\n      var _node$canonical;\n      clearTimeout(_this._hideTimeoutID);\n\n      var component = (_node$canonical = node.canonical) != null ? _node$canonical : node;\n      component.measure(function (x, y, width, height, left, top) {\n        _this.setState({\n          hierarchy: [],\n          inspected: {\n            frame: {\n              left: left,\n              top: top,\n              width: width,\n              height: height\n            }\n          }\n        });\n      });\n    };\n    _this._onAgentShutdown = function () {\n      var agent = _this.state.devtoolsAgent;\n      if (agent != null) {\n        agent.removeListener('hideNativeHighlight', _this._onAgentHideNativeHighlight);\n        agent.removeListener('showNativeHighlight', _this._onAgentShowNativeHighlight);\n        agent.removeListener('shutdown', _this._onAgentShutdown);\n        _this.setState({\n          devtoolsAgent: null\n        });\n      }\n    };\n    _this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedView: _this.props.inspectedView,\n      networking: false\n    };\n    return _this;\n  }\n  _createClass(Inspector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      hook.on('react-devtools', this._attachToDevtools);\n      if (hook.reactDevtoolsAgent) {\n        this._attachToDevtools(hook.reactDevtoolsAgent);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._subs) {\n        this._subs.map(function (fn) {\n          return fn();\n        });\n      }\n      hook.off('react-devtools', this._attachToDevtools);\n      this._setTouchedViewData = null;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      this.setState({\n        inspectedView: newProps.inspectedView\n      });\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(i) {\n      var _this2 = this;\n      var hierarchyItem = this.state.hierarchy[i];\n      var _hierarchyItem$getIns = hierarchyItem.getInspectorData(ReactNative.findNodeHandle),\n        measure = _hierarchyItem$getIns.measure,\n        props = _hierarchyItem$getIns.props,\n        source = _hierarchyItem$getIns.source;\n      measure(function (x, y, width, height, left, top) {\n        _this2.setState({\n          inspected: {\n            frame: {\n              left: left,\n              top: top,\n              width: width,\n              height: height\n            },\n            style: props.style,\n            source: source\n          },\n          selection: i\n        });\n      });\n    }\n  }, {\n    key: \"onTouchPoint\",\n    value: function onTouchPoint(locationX, locationY) {\n      var _this3 = this;\n      this._setTouchedViewData = function (viewData) {\n        var hierarchy = viewData.hierarchy,\n          props = viewData.props,\n          selectedIndex = viewData.selectedIndex,\n          source = viewData.source,\n          frame = viewData.frame,\n          pointerY = viewData.pointerY,\n          touchedViewTag = viewData.touchedViewTag;\n\n        if (_this3.state.devtoolsAgent && touchedViewTag) {\n          _this3.state.devtoolsAgent.selectNode(ReactNative.findNodeHandle(touchedViewTag));\n        }\n        _this3.setState({\n          panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n          selection: selectedIndex,\n          hierarchy: hierarchy,\n          inspected: {\n            style: props.style,\n            frame: frame,\n            source: source\n          }\n        });\n      };\n      getInspectorDataForViewAtPoint(this.state.inspectedView, locationX, locationY, function (viewData) {\n        if (_this3._setTouchedViewData != null) {\n          _this3._setTouchedViewData(viewData);\n          _this3._setTouchedViewData = null;\n        }\n      });\n    }\n  }, {\n    key: \"setPerfing\",\n    value: function setPerfing(val) {\n      this.setState({\n        perfing: val,\n        inspecting: false,\n        inspected: null,\n        networking: false\n      });\n    }\n  }, {\n    key: \"setInspecting\",\n    value: function setInspecting(val) {\n      this.setState({\n        inspecting: val,\n        inspected: null\n      });\n    }\n  }, {\n    key: \"setTouchTargeting\",\n    value: function setTouchTargeting(val) {\n      var _this4 = this;\n      PressabilityDebug.setEnabled(val);\n      this.props.onRequestRerenderApp(function (inspectedView) {\n        _this4.setState({\n          inspectedView: inspectedView\n        });\n      });\n    }\n  }, {\n    key: \"setNetworking\",\n    value: function setNetworking(val) {\n      this.setState({\n        networking: val,\n        perfing: false,\n        inspecting: false,\n        inspected: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var panelContainerStyle = this.state.panelPos === 'bottom' ? {\n        bottom: 0\n      } : {\n        top: Platform.OS === 'ios' ? 20 : 0\n      };\n      return _reactJsxRuntime.jsxs(View, {\n        style: styles.container,\n        pointerEvents: \"box-none\",\n        children: [this.state.inspecting && _reactJsxRuntime.jsx(InspectorOverlay, {\n          inspected: this.state.inspected\n          ,\n          onTouchPoint: this.onTouchPoint.bind(this)\n        }), _reactJsxRuntime.jsx(View, {\n          style: [styles.panelContainer, panelContainerStyle],\n          children: _reactJsxRuntime.jsx(InspectorPanel, {\n            devtoolsIsOpen: !!this.state.devtoolsAgent,\n            inspecting: this.state.inspecting,\n            perfing: this.state.perfing\n            ,\n            setPerfing: this.setPerfing.bind(this)\n            ,\n            setInspecting: this.setInspecting.bind(this),\n            inspected: this.state.inspected,\n            hierarchy: this.state.hierarchy,\n            selection: this.state.selection\n            ,\n            setSelection: this.setSelection.bind(this),\n            touchTargeting: PressabilityDebug.isEnabled()\n            ,\n            setTouchTargeting: this.setTouchTargeting.bind(this),\n            networking: this.state.networking\n            ,\n            setNetworking: this.setNetworking.bind(this)\n          })\n        })]\n      });\n    }\n  }]);\n  return Inspector;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  }\n});\nmodule.exports = Inspector;","map":{"version":3,"names":["Dimensions","require","InspectorOverlay","InspectorPanel","Platform","PressabilityDebug","React","ReactNative","StyleSheet","View","invariant","hook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","renderers","findRenderers","resolveRNStyle","viewConfig","nativeStyleEditorValidAttributes","Object","keys","validAttributes","style","allRenderers","Array","from","values","length","getInspectorDataForViewAtPoint","inspectedView","locationX","locationY","callback","i","renderer","rendererConfig","viewData","hierarchy","Inspector","props","_hideTimeoutID","_attachToDevtools","agent","addListener","_onAgentHideNativeHighlight","_onAgentShowNativeHighlight","_onAgentShutdown","setState","devtoolsAgent","state","inspected","setTimeout","node","clearTimeout","component","canonical","measure","x","y","width","height","left","top","frame","removeListener","panelPos","inspecting","perfing","selection","networking","on","reactDevtoolsAgent","_subs","map","fn","off","_setTouchedViewData","newProps","hierarchyItem","getInspectorData","findNodeHandle","source","selectedIndex","pointerY","touchedViewTag","selectNode","get","val","setEnabled","onRequestRerenderApp","panelContainerStyle","bottom","OS","styles","container","onTouchPoint","bind","panelContainer","setPerfing","setInspecting","setSelection","isEnabled","setTouchTargeting","setNetworking","Component","create","position","backgroundColor","right","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Inspector/Inspector.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Dimensions = require('../Utilities/Dimensions');\nconst InspectorOverlay = require('./InspectorOverlay');\nconst InspectorPanel = require('./InspectorPanel');\nconst Platform = require('../Utilities/Platform');\nconst PressabilityDebug = require('../Pressability/PressabilityDebug');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\n\nconst invariant = require('invariant');\n\nimport type {\n  HostComponent,\n  TouchedViewDataAtPoint,\n} from '../Renderer/shims/ReactNativeTypes';\n\ntype HostRef = React.ElementRef<HostComponent<mixed>>;\n\nexport type ReactRenderer = {\n  rendererConfig: {\n    getInspectorDataForViewAtPoint: (\n      inspectedView: ?HostRef,\n      locationX: number,\n      locationY: number,\n      callback: Function,\n    ) => void,\n    ...\n  },\n};\n\nconst hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nconst renderers = findRenderers();\n\n// Required for React DevTools to view/edit React Native styles in Flipper.\n// Flipper doesn't inject these values when initializing DevTools.\nhook.resolveRNStyle = require('../StyleSheet/flattenStyle');\nconst viewConfig = require('../Components/View/ReactNativeViewViewConfig');\nhook.nativeStyleEditorValidAttributes = Object.keys(\n  viewConfig.validAttributes.style,\n);\n\nfunction findRenderers(): $ReadOnlyArray<ReactRenderer> {\n  const allRenderers = Array.from(hook.renderers.values());\n  invariant(\n    allRenderers.length >= 1,\n    'Expected to find at least one React Native renderer on DevTools hook.',\n  );\n  return allRenderers;\n}\n\nfunction getInspectorDataForViewAtPoint(\n  inspectedView: ?HostRef,\n  locationX: number,\n  locationY: number,\n  callback: (viewData: TouchedViewDataAtPoint) => void,\n) {\n  // Check all renderers for inspector data.\n  for (let i = 0; i < renderers.length; i++) {\n    const renderer = renderers[i];\n    if (renderer?.rendererConfig?.getInspectorDataForViewAtPoint != null) {\n      renderer.rendererConfig.getInspectorDataForViewAtPoint(\n        inspectedView,\n        locationX,\n        locationY,\n        viewData => {\n          // Only return with non-empty view data since only one renderer will have this view.\n          if (viewData && viewData.hierarchy.length > 0) {\n            callback(viewData);\n          }\n        },\n      );\n    }\n  }\n}\n\nclass Inspector extends React.Component<\n  {\n    inspectedView: ?HostRef,\n    onRequestRerenderApp: (callback: (instance: ?HostRef) => void) => void,\n    ...\n  },\n  {\n    devtoolsAgent: ?Object,\n    hierarchy: any,\n    panelPos: string,\n    inspecting: boolean,\n    selection: ?number,\n    perfing: boolean,\n    inspected: any,\n    inspectedView: ?HostRef,\n    networking: boolean,\n    ...\n  },\n> {\n  _hideTimeoutID: TimeoutID | null = null;\n  _subs: ?Array<() => void>;\n  _setTouchedViewData: ?(TouchedViewDataAtPoint) => void;\n\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedView: this.props.inspectedView,\n      networking: false,\n    };\n  }\n\n  componentDidMount() {\n    hook.on('react-devtools', this._attachToDevtools);\n    // if devtools is already started\n    if (hook.reactDevtoolsAgent) {\n      this._attachToDevtools(hook.reactDevtoolsAgent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._subs) {\n      this._subs.map(fn => fn());\n    }\n    hook.off('react-devtools', this._attachToDevtools);\n    this._setTouchedViewData = null;\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps: Object) {\n    this.setState({inspectedView: newProps.inspectedView});\n  }\n\n  _attachToDevtools = (agent: Object) => {\n    agent.addListener('hideNativeHighlight', this._onAgentHideNativeHighlight);\n    agent.addListener('showNativeHighlight', this._onAgentShowNativeHighlight);\n    agent.addListener('shutdown', this._onAgentShutdown);\n\n    this.setState({\n      devtoolsAgent: agent,\n    });\n  };\n\n  _onAgentHideNativeHighlight = () => {\n    if (this.state.inspected === null) {\n      return;\n    }\n    // we wait to actually hide in order to avoid flicker\n    this._hideTimeoutID = setTimeout(() => {\n      this.setState({\n        inspected: null,\n      });\n    }, 100);\n  };\n\n  _onAgentShowNativeHighlight = (node: any) => {\n    clearTimeout(this._hideTimeoutID);\n\n    // Shape of `node` is different in Fabric.\n    const component = node.canonical ?? node;\n\n    component.measure((x, y, width, height, left, top) => {\n      this.setState({\n        hierarchy: [],\n        inspected: {\n          frame: {left, top, width, height},\n        },\n      });\n    });\n  };\n\n  _onAgentShutdown = () => {\n    const agent = this.state.devtoolsAgent;\n    if (agent != null) {\n      agent.removeListener(\n        'hideNativeHighlight',\n        this._onAgentHideNativeHighlight,\n      );\n      agent.removeListener(\n        'showNativeHighlight',\n        this._onAgentShowNativeHighlight,\n      );\n      agent.removeListener('shutdown', this._onAgentShutdown);\n\n      this.setState({devtoolsAgent: null});\n    }\n  };\n\n  setSelection(i: number) {\n    const hierarchyItem = this.state.hierarchy[i];\n    // we pass in ReactNative.findNodeHandle as the method is injected\n    const {measure, props, source} = hierarchyItem.getInspectorData(\n      ReactNative.findNodeHandle,\n    );\n\n    measure((x, y, width, height, left, top) => {\n      this.setState({\n        inspected: {\n          frame: {left, top, width, height},\n          style: props.style,\n          source,\n        },\n        selection: i,\n      });\n    });\n  }\n\n  onTouchPoint(locationX: number, locationY: number) {\n    this._setTouchedViewData = viewData => {\n      const {\n        hierarchy,\n        props,\n        selectedIndex,\n        source,\n        frame,\n        pointerY,\n        touchedViewTag,\n      } = viewData;\n\n      // Sync the touched view with React DevTools.\n      // Note: This is Paper only. To support Fabric,\n      // DevTools needs to be updated to not rely on view tags.\n      if (this.state.devtoolsAgent && touchedViewTag) {\n        this.state.devtoolsAgent.selectNode(\n          ReactNative.findNodeHandle(touchedViewTag),\n        );\n      }\n\n      this.setState({\n        panelPos:\n          pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n        selection: selectedIndex,\n        hierarchy,\n        inspected: {\n          style: props.style,\n          frame,\n          source,\n        },\n      });\n    };\n    getInspectorDataForViewAtPoint(\n      this.state.inspectedView,\n      locationX,\n      locationY,\n      viewData => {\n        if (this._setTouchedViewData != null) {\n          this._setTouchedViewData(viewData);\n          this._setTouchedViewData = null;\n        }\n      },\n    );\n  }\n\n  setPerfing(val: boolean) {\n    this.setState({\n      perfing: val,\n      inspecting: false,\n      inspected: null,\n      networking: false,\n    });\n  }\n\n  setInspecting(val: boolean) {\n    this.setState({\n      inspecting: val,\n      inspected: null,\n    });\n  }\n\n  setTouchTargeting(val: boolean) {\n    PressabilityDebug.setEnabled(val);\n    this.props.onRequestRerenderApp(inspectedView => {\n      this.setState({inspectedView});\n    });\n  }\n\n  setNetworking(val: boolean) {\n    this.setState({\n      networking: val,\n      perfing: false,\n      inspecting: false,\n      inspected: null,\n    });\n  }\n\n  render(): React.Node {\n    const panelContainerStyle =\n      this.state.panelPos === 'bottom'\n        ? {bottom: 0}\n        : {top: Platform.OS === 'ios' ? 20 : 0};\n    return (\n      <View style={styles.container} pointerEvents=\"box-none\">\n        {this.state.inspecting && (\n          <InspectorOverlay\n            inspected={this.state.inspected}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            onTouchPoint={this.onTouchPoint.bind(this)}\n          />\n        )}\n        <View style={[styles.panelContainer, panelContainerStyle]}>\n          <InspectorPanel\n            devtoolsIsOpen={!!this.state.devtoolsAgent}\n            inspecting={this.state.inspecting}\n            perfing={this.state.perfing}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setPerfing={this.setPerfing.bind(this)}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setInspecting={this.setInspecting.bind(this)}\n            inspected={this.state.inspected}\n            hierarchy={this.state.hierarchy}\n            selection={this.state.selection}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setSelection={this.setSelection.bind(this)}\n            touchTargeting={PressabilityDebug.isEnabled()}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setTouchTargeting={this.setTouchTargeting.bind(this)}\n            networking={this.state.networking}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setNetworking={this.setNetworking.bind(this)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = Inspector;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}