{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigation = this.props.navigation;\n      return _jsxs(SafeAreaView, {\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          barStyle: \"light-content\"\n        }), _jsx(KeyboardAvoidingView, {\n          behavior: \"padding\",\n          style: styles.container,\n          children: _jsx(TouchableWithoutFeedback, {\n            style: styles.container,\n            onPress: Keyboard.dismiss,\n            children: _jsxs(View, {\n              style: styles.logoContainer,\n              children: [_jsx(View, {\n                style: styles.logoContainer,\n                children: _jsx(Text, {\n                  style: styles.title,\n                  children: \"Account Information\"\n                })\n              }), _jsxs(View, {\n                style: styles.infoContainer,\n                children: [_jsx(TextInput, {\n                  style: styles.input,\n                  placeholder: \"Enter User name/Email\",\n                  placeholderTextColor: \"rgba(255,255,255,0.8)\",\n                  keyboardType: \"email-address\",\n                  returnKeyType: \"next\",\n                  autoCorrect: false,\n                  onSubmitEditing: function onSubmitEditing() {\n                    return _this.refs.txtPassword.focus();\n                  }\n                }), _jsx(TextInput, {\n                  style: styles.input,\n                  placeholder: \"Enter Password\",\n                  placeholderTextColor: \"rgba(255,255,255,0.8)\",\n                  returnKeyType: \"go\",\n                  autoCorrect: false,\n                  ref: \"textPassword\"\n                }), _jsx(TouchableOpacity, {\n                  style: styles.buttonContainer,\n                  onPress: function onPress() {\n                    return navigation.navigate(\"SplashScreen\");\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"SIGN IN\"\n                  })\n                })]\n              })]\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);","map":{"version":3,"names":["React","Component","Login","navigation","props","styles","container","Keyboard","dismiss","logoContainer","title","infoContainer","input","refs","txtPassword","focus","buttonContainer","navigate","buttonText"],"sources":["D:/React/TaxiApp/cabApp/components/LoginScreen.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n  TextInput,\r\n  SafeAreaView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView\r\n} from \"react-native\";\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    const { navigation } = this.props;\r\n\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <StatusBar barStyle=\"light-content\" />\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n          <TouchableWithoutFeedback\r\n            style={styles.container}\r\n            onPress={Keyboard.dismiss}\r\n          >\r\n            <View style={styles.logoContainer}>\r\n              <View style={styles.logoContainer}>\r\n                <Text style={styles.title}>Account Information</Text>\r\n              </View>\r\n\r\n              <View style={styles.infoContainer}>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  placeholder=\"Enter User name/Email\"\r\n                  placeholderTextColor=\"rgba(255,255,255,0.8)\"\r\n                  keyboardType=\"email-address\"\r\n                  returnKeyType=\"next\"\r\n                  autoCorrect={false}\r\n                  onSubmitEditing={() => this.refs.txtPassword.focus()}\r\n                />\r\n\r\n                <TextInput\r\n                  style={styles.input}\r\n                  placeholder=\"Enter Password\"\r\n                  placeholderTextColor=\"rgba(255,255,255,0.8)\"\r\n                  returnKeyType=\"go\"\r\n                  autoCorrect={false}\r\n                  ref={\"textPassword\"}\r\n                />\r\n\r\n                <TouchableOpacity style={styles.buttonContainer} onPress={() => navigation.navigate(\"SplashScreen\")}>\r\n                  <Text style={styles.buttonText}>SIGN IN</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;;;;;IAeMC,K;;;;;;;;;;;;;WACJ,kBAAS;MAAA;;MACP,IAAQC,UAAR,GAAuB,KAAKC,KAA5B,CAAQD,UAAR;MAEA,OACE,MAAC,YAAD;QAAc,KAAK,EAAEE,MAAM,CAACC,SAA5B;QAAA,WACE,KAAC,SAAD;UAAW,QAAQ,EAAC;QAApB,EADF,EAEE,KAAC,oBAAD;UAAsB,QAAQ,EAAC,SAA/B;UAAyC,KAAK,EAAED,MAAM,CAACC,SAAvD;UAAA,UACE,KAAC,wBAAD;YACE,KAAK,EAAED,MAAM,CAACC,SADhB;YAEE,OAAO,EAAEC,QAAQ,CAACC,OAFpB;YAAA,UAIE,MAAC,IAAD;cAAM,KAAK,EAAEH,MAAM,CAACI,aAApB;cAAA,WACE,KAAC,IAAD;gBAAM,KAAK,EAAEJ,MAAM,CAACI,aAApB;gBAAA,UACE,KAAC,IAAD;kBAAM,KAAK,EAAEJ,MAAM,CAACK,KAApB;kBAAA;gBAAA;cADF,EADF,EAKE,MAAC,IAAD;gBAAM,KAAK,EAAEL,MAAM,CAACM,aAApB;gBAAA,WACE,KAAC,SAAD;kBACE,KAAK,EAAEN,MAAM,CAACO,KADhB;kBAEE,WAAW,EAAC,uBAFd;kBAGE,oBAAoB,EAAC,uBAHvB;kBAIE,YAAY,EAAC,eAJf;kBAKE,aAAa,EAAC,MALhB;kBAME,WAAW,EAAE,KANf;kBAOE,eAAe,EAAE;oBAAA,OAAM,KAAI,CAACC,IAAL,CAAUC,WAAV,CAAsBC,KAAtB,EAAN;kBAAA;gBAPnB,EADF,EAWE,KAAC,SAAD;kBACE,KAAK,EAAEV,MAAM,CAACO,KADhB;kBAEE,WAAW,EAAC,gBAFd;kBAGE,oBAAoB,EAAC,uBAHvB;kBAIE,aAAa,EAAC,IAJhB;kBAKE,WAAW,EAAE,KALf;kBAME,GAAG,EAAE;gBANP,EAXF,EAoBE,KAAC,gBAAD;kBAAkB,KAAK,EAAEP,MAAM,CAACW,eAAhC;kBAAiD,OAAO,EAAE;oBAAA,OAAMb,UAAU,CAACc,QAAX,CAAoB,cAApB,CAAN;kBAAA,CAA1D;kBAAA,UACE,KAAC,IAAD;oBAAM,KAAK,EAAEZ,MAAM,CAACa,UAApB;oBAAA;kBAAA;gBADF,EApBF;cAAA,EALF;YAAA;UAJF;QADF,EAFF;MAAA,EADF;IA0CD;;;;EA9CiBjB,S"},"metadata":{},"sourceType":"module"}