{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport * as React from 'react';\nvar FirebaseRecaptchaVerifierModal = function (_React$Component) {\n  _inherits(FirebaseRecaptchaVerifierModal, _React$Component);\n  var _super = _createSuper(FirebaseRecaptchaVerifierModal);\n  function FirebaseRecaptchaVerifierModal() {\n    var _this;\n    _classCallCheck(this, FirebaseRecaptchaVerifierModal);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.verifier = null;\n    _this.setRef = function (ref) {\n      if (ref) {\n        if (_this.props.appVerificationDisabledForTesting !== undefined) {\n          firebase.auth().settings.appVerificationDisabledForTesting = !!_this.props.appVerificationDisabledForTesting;\n        }\n        if (_this.props.languageCode) {\n          firebase.auth().languageCode = _this.props.languageCode;\n        }\n        _this.verifier = new firebase.auth.RecaptchaVerifier(ref, {\n          size: _this.props.attemptInvisibleVerification ? 'invisible' : 'normal'\n        });\n      } else {\n        _this.verifier = null;\n      }\n      if (_this.props.innerRef) {\n        _this.props.innerRef.current = _this.verifier;\n      }\n    };\n    return _this;\n  }\n  _createClass(FirebaseRecaptchaVerifierModal, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.appVerificationDisabledForTesting !== nextProps.appVerificationDisabledForTesting || this.props.attemptInvisibleVerification !== nextProps.attemptInvisibleVerification || this.props.languageCode !== nextProps.languageCode;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.innerRef !== prevProps.innerRef) {\n        if (this.props.innerRef) {\n          this.props.innerRef.current = this.verifier;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        attemptInvisibleVerification = _this$props.attemptInvisibleVerification,\n        appVerificationDisabledForTesting = _this$props.appVerificationDisabledForTesting,\n        languageCode = _this$props.languageCode;\n      return React.createElement(\"div\", {\n        style: styles.container,\n        key: (attemptInvisibleVerification ? 'invisible' : 'visible') + \"-\" + (appVerificationDisabledForTesting ? 'testing' : 'regular') + \"-\" + (languageCode != null ? languageCode : ''),\n        id: \"recaptcha-container\",\n        ref: this.setRef,\n        dangerouslySetInnerHTML: {\n          __html: ''\n        }\n      });\n    }\n  }]);\n  return FirebaseRecaptchaVerifierModal;\n}(React.Component);\nexport default React.forwardRef(function (props, ref) {\n  return React.createElement(FirebaseRecaptchaVerifierModal, _objectSpread(_objectSpread({}, props), {}, {\n    innerRef: ref\n  }));\n});\nvar styles = {\n  container: {\n    zIndex: 1000\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,IAWzBC,8BAA+B;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAC3BC,QAAQ,GAA2C,IAAI;IAAA,MAEvDC,MAAM,GAAG,UAACC,GAAQ,EAAI;MAC5B,IAAIA,GAAG,EAAE;QACP,IAAI,MAAKC,KAAK,CAACC,iCAAiC,KAAKC,SAAS,EAAE;UAC9DR,QAAQ,CAACS,IAAI,EAAE,CAACC,QAAQ,CAACH,iCAAiC,GACxD,CAAC,CAAC,MAAKD,KAAK,CAACC,iCAAiC;;QAElD,IAAI,MAAKD,KAAK,CAACK,YAAY,EAAE;UAC3BX,QAAQ,CAACS,IAAI,EAAE,CAACE,YAAY,GAAG,MAAKL,KAAK,CAACK,YAAY;;QAExD,MAAKR,QAAQ,GAAG,IAAIH,QAAQ,CAACS,IAAI,CAACG,iBAAiB,CAACP,GAAG,EAAE;UACvDQ,IAAI,EAAE,MAAKP,KAAK,CAACQ,4BAA4B,GAAG,WAAW,GAAG;SAC/D,CAAC;OACH,MAAM;QACL,MAAKX,QAAQ,GAAG,IAAI;;MAEtB,IAAI,MAAKG,KAAK,CAACS,QAAQ,EAAE;QACvB,MAAKT,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,MAAKb,QAAQ;;IAE/C,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,+BAAsBc,SAAgB;MACpC,OACE,IAAI,CAACX,KAAK,CAACC,iCAAiC,KAC1CU,SAAS,CAACV,iCAAiC,IAC7C,IAAI,CAACD,KAAK,CAACQ,4BAA4B,KAAKG,SAAS,CAACH,4BAA4B,IAClF,IAAI,CAACR,KAAK,CAACK,YAAY,KAAKM,SAAS,CAACN,YAAY;IAEtD;EAAC;IAAA;IAAA,OAED,4BAAmBO,SAAgB;MACjC,IAAI,IAAI,CAACZ,KAAK,CAACS,QAAQ,KAAKG,SAAS,CAACH,QAAQ,EAAE;QAC9C,IAAI,IAAI,CAACT,KAAK,CAACS,QAAQ,EAAE;UACvB,IAAI,CAACT,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,IAAI,CAACb,QAAQ;;;IAGjD;EAAC;IAAA;IAAA,OAED,kBAAM;MACJ,kBACE,IAAI,CAACG,KAAK;QADJQ,4BAA4B,eAA5BA,4BAA4B;QAAEP,iCAAiC,eAAjCA,iCAAiC;QAAEI,YAAY,eAAZA,YAAY;MAErF,OACEV;QACEkB,KAAK,EAAEC,MAAM,CAACC,SAAS;QACvBC,GAAG,GAAKR,4BAA4B,GAAG,WAAW,GAAG,SAAS,WAC5DP,iCAAiC,GAAG,SAAS,GAAG,SAClD,WAAII,YAAY,WAAZA,YAAY,GAAI,EAAE,CAAE;QACxBY,EAAE,EAAC,qBAAqB;QACxBlB,GAAG,EAAE,IAAI,CAACD,MAAM;QAChBoB,uBAAuB,EAAE;UAAEC,MAAM,EAAE;QAAE;MAAE,EACvC;IAEN;EAAC;EAAA;AAAA,EAtD0CxB,KAAK,CAACyB,SAAgB;AAyDnE,eAAezB,KAAK,CAAC0B,UAAU,CAAC,UAACrB,KAA8B,EAAED,GAAQ;EAAA,OACvEJ,oBAACC,8BAA8B,kCAAKI,KAAK;IAAES,QAAQ,EAAEV;EAAG,GAAI;AAAA,CAC7D,CAAC;AAEF,IAAMe,MAAM,GAAG;EAEbC,SAAS,EAAE;IAAEO,MAAM,EAAE;EAAI;CAC1B","names":["firebase","React","FirebaseRecaptchaVerifierModal","verifier","setRef","ref","props","appVerificationDisabledForTesting","undefined","auth","settings","languageCode","RecaptchaVerifier","size","attemptInvisibleVerification","innerRef","current","nextProps","prevProps","style","styles","container","key","id","dangerouslySetInnerHTML","__html","Component","forwardRef","zIndex"],"sourceRoot":"","sources":["../src/FirebaseRecaptchaVerifierModal.web.tsx"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport * as React from 'react';\n\nimport { FirebaseAuthApplicationVerifier } from './FirebaseRecaptcha.types';\n\ninterface Props {\n  attemptInvisibleVerification?: boolean;\n  appVerificationDisabledForTesting?: boolean;\n  languageCode?: string;\n  innerRef: React.MutableRefObject<FirebaseAuthApplicationVerifier | null>;\n}\n\nclass FirebaseRecaptchaVerifierModal extends React.Component<Props> {\n  private verifier: FirebaseAuthApplicationVerifier | null = null;\n\n  private setRef = (ref: any) => {\n    if (ref) {\n      if (this.props.appVerificationDisabledForTesting !== undefined) {\n        firebase.auth().settings.appVerificationDisabledForTesting =\n          !!this.props.appVerificationDisabledForTesting;\n      }\n      if (this.props.languageCode) {\n        firebase.auth().languageCode = this.props.languageCode;\n      }\n      this.verifier = new firebase.auth.RecaptchaVerifier(ref, {\n        size: this.props.attemptInvisibleVerification ? 'invisible' : 'normal',\n      });\n    } else {\n      this.verifier = null;\n    }\n    if (this.props.innerRef) {\n      this.props.innerRef.current = this.verifier;\n    }\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      this.props.appVerificationDisabledForTesting !==\n        nextProps.appVerificationDisabledForTesting ||\n      this.props.attemptInvisibleVerification !== nextProps.attemptInvisibleVerification ||\n      this.props.languageCode !== nextProps.languageCode\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.innerRef !== prevProps.innerRef) {\n      if (this.props.innerRef) {\n        this.props.innerRef.current = this.verifier;\n      }\n    }\n  }\n\n  render() {\n    const { attemptInvisibleVerification, appVerificationDisabledForTesting, languageCode } =\n      this.props;\n    return (\n      <div\n        style={styles.container}\n        key={`${attemptInvisibleVerification ? 'invisible' : 'visible'}-${\n          appVerificationDisabledForTesting ? 'testing' : 'regular'\n        }-${languageCode ?? ''}`}\n        id=\"recaptcha-container\"\n        ref={this.setRef}\n        dangerouslySetInnerHTML={{ __html: '' }}\n      />\n    );\n  }\n}\n\nexport default React.forwardRef((props: Omit<Props, 'innerRef'>, ref: any) => (\n  <FirebaseRecaptchaVerifierModal {...props} innerRef={ref} />\n));\n\nconst styles = {\n  // Ensure the reCAPTCHA badge is in front or other elements\n  container: { zIndex: 1000 },\n};\n"]},"metadata":{},"sourceType":"module"}