{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessible\", \"allowFontScaling\", \"ellipsizeMode\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onResponderGrant\", \"onResponderMove\", \"onResponderRelease\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onStartShouldSetResponder\", \"pressRetentionOffset\", \"suppressHighlighting\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as PressabilityDebug from \"../Pressability/PressabilityDebug\";\nimport usePressability from \"../Pressability/usePressability\";\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport processColor from \"../StyleSheet/processColor\";\nimport TextAncestor from \"./TextAncestor\";\nimport { NativeText, NativeVirtualText } from \"./TextNativeComponent\";\nimport * as React from 'react';\nimport { useContext, useMemo, useState } from 'react';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  var accessible = props.accessible,\n    allowFontScaling = props.allowFontScaling,\n    ellipsizeMode = props.ellipsizeMode,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    _onPressIn = props.onPressIn,\n    _onPressOut = props.onPressOut,\n    _onResponderGrant = props.onResponderGrant,\n    _onResponderMove = props.onResponderMove,\n    _onResponderRelease = props.onResponderRelease,\n    _onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    pressRetentionOffset = props.pressRetentionOffset,\n    suppressHighlighting = props.suppressHighlighting,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHighlighted = _useState2[0],\n    setHighlighted = _useState2[1];\n  var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && restProps.disabled !== true;\n  var initialized = useLazyInitialization(isPressable);\n  var config = useMemo(function () {\n    return initialized ? {\n      disabled: !isPressable,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        setHighlighted(!suppressHighlighting);\n        _onPressIn == null ? void 0 : _onPressIn(event);\n      },\n      onPressOut: function onPressOut(event) {\n        setHighlighted(false);\n        _onPressOut == null ? void 0 : _onPressOut(event);\n      },\n      onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,\n      onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder\n    } : null;\n  }, [initialized, isPressable, pressRetentionOffset, onLongPress, onPress, _onPressIn, _onPressOut, onResponderTerminationRequest, onStartShouldSetResponder, suppressHighlighting]);\n  var eventHandlers = usePressability(config);\n  var eventHandlersForText = useMemo(function () {\n    return eventHandlers == null ? null : {\n      onResponderGrant: function onResponderGrant(event) {\n        eventHandlers.onResponderGrant(event);\n        if (_onResponderGrant != null) {\n          _onResponderGrant(event);\n        }\n      },\n      onResponderMove: function onResponderMove(event) {\n        eventHandlers.onResponderMove(event);\n        if (_onResponderMove != null) {\n          _onResponderMove(event);\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        eventHandlers.onResponderRelease(event);\n        if (_onResponderRelease != null) {\n          _onResponderRelease(event);\n        }\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        eventHandlers.onResponderTerminate(event);\n        if (_onResponderTerminate != null) {\n          _onResponderTerminate(event);\n        }\n      },\n      onResponderTerminationRequest: eventHandlers.onResponderTerminationRequest,\n      onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder\n    };\n  }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate]);\n\n  var selectionColor = restProps.selectionColor == null ? null : processColor(restProps.selectionColor);\n  var style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta'\n      });\n    }\n  }\n  var numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\"'numberOfLines' in <Text> must be a non-negative number, received: \" + numberOfLines + \". The value will be set to 0.\");\n    numberOfLines = 0;\n  }\n  var hasTextAncestor = useContext(TextAncestor);\n  return hasTextAncestor ? _jsx(NativeVirtualText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n    isHighlighted: isHighlighted,\n    isPressable: isPressable,\n    numberOfLines: numberOfLines,\n    selectionColor: selectionColor,\n    style: style,\n    ref: forwardedRef\n  })) : _jsx(TextAncestor.Provider, {\n    value: true,\n    children: _jsx(NativeText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n      accessible: accessible !== false,\n      allowFontScaling: allowFontScaling !== false,\n      ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',\n      isHighlighted: isHighlighted,\n      numberOfLines: numberOfLines,\n      selectionColor: selectionColor,\n      style: style,\n      ref: forwardedRef\n    }))\n  });\n});\nText.displayName = 'Text';\n\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\nfunction useLazyInitialization(newValue) {\n  var _useState3 = useState(newValue),\n    _useState4 = _slicedToArray(_useState3, 2),\n    oldValue = _useState4[0],\n    setValue = _useState4[1];\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\nmodule.exports = Text;","map":{"version":3,"names":["PressabilityDebug","usePressability","StyleSheet","processColor","TextAncestor","NativeText","NativeVirtualText","React","useContext","useMemo","useState","Text","forwardRef","props","forwardedRef","accessible","allowFontScaling","ellipsizeMode","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","suppressHighlighting","restProps","isHighlighted","setHighlighted","isPressable","disabled","initialized","useLazyInitialization","config","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","eventHandlersForText","selectionColor","style","__DEV__","isEnabled","compose","color","numberOfLines","console","error","hasTextAncestor","displayName","propTypes","require","TextPropTypes","newValue","oldValue","setValue","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Text/Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport processColor from '../StyleSheet/processColor';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    allowFontScaling,\n    ellipsizeMode,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    restProps.disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={style}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        accessible={accessible !== false}\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={style}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nmodule.exports = Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}