{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport AnimatedValue from \"../nodes/AnimatedValue\";\nimport AnimatedValueXY from \"../nodes/AnimatedValueXY\";\nimport Animation from \"./Animation\";\nimport SpringConfig from \"../SpringConfig\";\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from \"../NativeAnimatedHelper\";\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n\n  return value;\n}\n\nvar SpringAnimation = function (_Animation) {\n  _inherits(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    _classCallCheck(this, SpringAnimation);\n\n    var _this = _possibleConstructorReturn(this, _Animation.call(this));\n\n    _this._overshootClamping = withDefault(config.overshootClamping, false);\n    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    _this._initialVelocity = withDefault(config.velocity, 0);\n    _this._lastVelocity = withDefault(config.velocity, 0);\n    _this._toValue = config.toValue;\n    _this._delay = withDefault(config.delay, 0);\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = withDefault(config.stiffness, 100);\n      _this._damping = withDefault(config.damping, 10);\n      _this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  SpringAnimation.prototype.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  SpringAnimation.prototype.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  SpringAnimation.prototype.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n\n  SpringAnimation.prototype.onUpdate = function onUpdate() {\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m));\n    var omega0 = Math.sqrt(k / m);\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n    var x0 = this._toValue - this._startPosition;\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      return;\n    }\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  SpringAnimation.prototype.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","AnimatedValue","AnimatedValueXY","Animation","SpringConfig","invariant","shouldUseNativeDriver","withDefault","defaultValue","undefined","SpringAnimation","_Animation","config","_this","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","damping","mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","springConfig","fromBouncinessAndSpeed","_springConfig","fromOrigamiTensionAndFriction","__getNativeAnimationConfig","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\n\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n  return value;\n}\n\nvar SpringAnimation = function (_Animation) {\n  _inherits(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    _classCallCheck(this, SpringAnimation);\n\n    var _this = _possibleConstructorReturn(this, _Animation.call(this));\n\n    _this._overshootClamping = withDefault(config.overshootClamping, false);\n    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    _this._initialVelocity = withDefault(config.velocity, 0);\n    _this._lastVelocity = withDefault(config.velocity, 0);\n    _this._toValue = config.toValue;\n    _this._delay = withDefault(config.delay, 0);\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = withDefault(config.stiffness, 100);\n      _this._damping = withDefault(config.damping, 10);\n      _this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  SpringAnimation.prototype.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  SpringAnimation.prototype.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  SpringAnimation.prototype.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n\n\n  SpringAnimation.prototype.onUpdate = function onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    var isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    var isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({ finished: true });\n      return;\n    }\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  SpringAnimation.prototype.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({ finished: false });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}