{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n\nvar linear = function linear(t) {\n  return t;\n};\n\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n\n    return outputMax;\n  }\n\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  result = easing(result);\n\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var int32Color = normalizeColor(input);\n\n  if (int32Color === null) {\n    return input;\n  }\n\n  int32Color = int32Color || 0;\n  var r = (int32Color & 0xff000000) >>> 24;\n  var g = (int32Color & 0x00ff0000) >>> 16;\n  var b = (int32Color & 0x0000ff00) >>> 8;\n  var a = (int32Color & 0x000000ff) / 255;\n  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';\n}\n\nvar stringShapeRegex = /[0-9\\.-]+/g;\n\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(_extends({}, config, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      return String(rounded);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i = void 0;\n\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  _inherits(AnimatedInterpolation, _AnimatedWithChildren);\n\n  function AnimatedInterpolation(parent, config) {\n    _classCallCheck(this, AnimatedInterpolation);\n\n    var _this = _possibleConstructorReturn(this, _AnimatedWithChildren.call(this));\n\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n\n  AnimatedInterpolation.prototype.__makeNative = function __makeNative() {\n    this._parent.__makeNative();\n\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n  };\n\n  AnimatedInterpolation.prototype.__getValue = function __getValue() {\n    var parentValue = this._parent.__getValue();\n\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  };\n\n  AnimatedInterpolation.prototype.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  AnimatedInterpolation.prototype.__attach = function __attach() {\n    this._parent.__addChild(this);\n  };\n\n  AnimatedInterpolation.prototype.__detach = function __detach() {\n    this._parent.__removeChild(this);\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  AnimatedInterpolation.prototype.__transformDataType = function __transformDataType(range) {\n    return range.map(function (value) {\n      if (typeof value !== 'string') {\n        return value;\n      }\n\n      if (/deg$/.test(value)) {\n        var degrees = parseFloat(value) || 0;\n        var radians = degrees * Math.PI / 180.0;\n        return radians;\n      } else {\n        return parseFloat(value) || 0;\n      }\n    });\n  };\n\n  AnimatedInterpolation.prototype.__getNativeConfig = function __getNativeConfig() {\n    if (process.env.NODE_ENV !== 'production') {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\n\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","invariant","normalizeColor","linear","t","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","length","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","int32Color","r","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","forEach","number","i","push","interpolations","shouldRound","isRgbOrRgba","replace","val","rounded","Math","round","String","startsWith","arr","pattern","name","AnimatedInterpolation","_AnimatedWithChildren","parent","_this","_parent","_config","_interpolation","__makeNative","__getValue","parentValue","__attach","__addChild","__detach","__removeChild","__transformDataType","test","degrees","parseFloat","radians","PI","__getNativeConfig","process","env","NODE_ENV","validateInterpolation","type","__createInterpolation"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedInterpolation.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n/* eslint no-bitwise: 0 */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n\nvar linear = function linear(t) {\n  return t;\n};\n\n/**\n * Very handy helper to map input ranges to output ranges with an easing\n * function and custom behavior outside of the ranges.\n */\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n\n  var easing = config.easing || linear;\n\n  var extrapolateLeft = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n\n  // Extrapolate\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {\n      // noop\n    }\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {\n      // noop\n    }\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n\n  // Input Range\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  // Easing\n  result = easing(result);\n\n  // Output Range\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var int32Color = normalizeColor(input);\n  if (int32Color === null) {\n    return input;\n  }\n\n  int32Color = int32Color || 0;\n\n  var r = (int32Color & 0xff000000) >>> 24;\n  var g = (int32Color & 0x00ff0000) >>> 16;\n  var b = (int32Color & 0x0000ff00) >>> 8;\n  var a = (int32Color & 0x000000ff) / 255;\n\n  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';\n}\n\nvar stringShapeRegex = /[0-9\\.-]+/g;\n\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36) // colors\n *   -45deg                  // values with units\n */\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n\n  // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\n  // ->\n  // [\n  //   [0, 50],\n  //   [100, 150],\n  //   [200, 250],\n  //   [0, 0.5],\n  // ]\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\n   * guard against this possibility.\n   */\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    /* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard\n     * against this possibility.\n     */\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\n   * guard against this possibility.\n   */\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(Object.assign({}, config, {\n      outputRange: outputRanges[i]\n    }));\n  });\n\n  // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n  // round the opacity (4th column).\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n\n  return function (input) {\n    var i = 0;\n    // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      return String(rounded);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i = void 0;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1],\n    /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n     * one or both of the operands may be something that doesn't cleanly\n     * convert to a string, like undefined, null, and object, etc. If you really\n     * mean this implicit string conversion, you can do something like\n     * String(myThing)\n     */\n    'inputRange must be monotonically increasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\n  /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n   * one or both of the operands may be something that doesn't cleanly convert\n   * to a string, like undefined, null, and object, etc. If you really mean\n   * this implicit string conversion, you can do something like\n   * String(myThing)\n   */\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  _inherits(AnimatedInterpolation, _AnimatedWithChildren);\n\n  // Export for testing.\n  function AnimatedInterpolation(parent, config) {\n    _classCallCheck(this, AnimatedInterpolation);\n\n    var _this = _possibleConstructorReturn(this, _AnimatedWithChildren.call(this));\n\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n\n  AnimatedInterpolation.prototype.__makeNative = function __makeNative() {\n    this._parent.__makeNative();\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n  };\n\n  AnimatedInterpolation.prototype.__getValue = function __getValue() {\n    var parentValue = this._parent.__getValue();\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  };\n\n  AnimatedInterpolation.prototype.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  AnimatedInterpolation.prototype.__attach = function __attach() {\n    this._parent.__addChild(this);\n  };\n\n  AnimatedInterpolation.prototype.__detach = function __detach() {\n    this._parent.__removeChild(this);\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  AnimatedInterpolation.prototype.__transformDataType = function __transformDataType(range) {\n    // Change the string array type to number array\n    // So we can reuse the same logic in iOS and Android platform\n    return range.map(function (value) {\n      if (typeof value !== 'string') {\n        return value;\n      }\n      if (/deg$/.test(value)) {\n        var degrees = parseFloat(value) || 0;\n        var radians = degrees * Math.PI / 180.0;\n        return radians;\n      } else {\n        // Assume radians\n        return parseFloat(value) || 0;\n      }\n    });\n  };\n\n  AnimatedInterpolation.prototype.__getNativeConfig = function __getNativeConfig() {\n    if (process.env.NODE_ENV !== 'production') {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\n\nAnimatedInterpolation.__createInterpolation = createInterpolation;\n\n\nexport default AnimatedInterpolation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}