{"ast":null,"code":"\n\nvar RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture'\n      }\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture'\n      }\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture'\n      }\n    },\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput'\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange'\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync'\n    }\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    textShadowOffset: {\n      diff: require(\"../../Utilities/differ/sizesDiffer\")\n    },\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    color: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true\n  }\n};\nmodule.exports = RCTTextInputViewConfig;","map":{"version":3,"names":["RCTTextInputViewConfig","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topChange","topContentSizeChange","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTouchCancel","topTouchEnd","topTouchMove","directEventTypes","topTextInput","registrationName","topKeyPressSync","topScroll","topSelectionChange","topChangeSync","validAttributes","fontSize","fontWeight","fontVariant","textShadowOffset","diff","require","allowFontScaling","fontStyle","textTransform","textAlign","fontFamily","lineHeight","isHighlighted","writingDirection","textDecorationLine","textShadowRadius","letterSpacing","textDecorationStyle","textDecorationColor","process","color","maxFontSizeMultiplier","textShadowColor","editable","inputAccessoryViewID","caretHidden","enablesReturnKeyAutomatically","placeholderTextColor","clearButtonMode","keyboardType","selection","returnKeyType","blurOnSubmit","mostRecentEventCount","scrollEnabled","selectionColor","contextMenuHidden","secureTextEntry","placeholder","autoCorrect","multiline","textContentType","maxLength","autoCapitalize","keyboardAppearance","passwordRules","spellCheck","selectTextOnFocus","text","clearTextOnFocus","showSoftInputOnFocus","autoFocus","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {process: require('../../StyleSheet/processColor')},\n    color: {process: require('../../StyleSheet/processColor')},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {process: require('../../StyleSheet/processColor')},\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {process: require('../../StyleSheet/processColor')},\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor')},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}