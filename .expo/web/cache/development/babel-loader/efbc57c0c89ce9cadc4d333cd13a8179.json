{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"textStyle\", \"linkStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nexport default function FirebaseRecaptchaBanner(props) {\n  var textStyle = props.textStyle,\n      linkStyle = props.linkStyle,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  return React.createElement(View, _objectSpread({}, otherProps), React.createElement(Text, {\n    style: [styles.text, textStyle]\n  }, \"This app is protected by reCAPTCHA and the Google\", React.createElement(Text, {\n    style: [styles.link, linkStyle],\n    onPress: function onPress() {\n      return Linking.openURL('https://policies.google.com/privacy');\n    }\n  }, \"\\xA0Privacy Policy\\xA0\"), \"and\", React.createElement(Text, {\n    style: [styles.link, linkStyle],\n    onPress: function onPress() {\n      return Linking.openURL('https://policies.google.com/terms');\n    }\n  }, \"\\xA0Terms of Service\\xA0\"), \"apply.\"));\n}\nvar styles = StyleSheet.create({\n  content: _objectSpread({}, StyleSheet.absoluteFillObject),\n  text: {\n    fontSize: 13,\n    opacity: 0.5\n  },\n  link: {\n    color: 'blue'\n  }\n});","map":{"version":3,"sources":["../src/FirebaseRecaptchaBanner.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;;;AAQA,eAAc,SAAU,uBAAV,CAAkC,KAAlC,EAA8C;EAC1D,IAAQ,SAAR,GAAgD,KAAhD,CAAQ,SAAR;EAAA,IAAmB,SAAnB,GAAgD,KAAhD,CAAmB,SAAnB;EAAA,IAAiC,UAAjC,4BAAgD,KAAhD;;EACA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,oBAAU,UAAV,GACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd;EAAR,CAAL,E,mDAAA,EAEE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IACH,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CADJ;IAEH,OAAO,EAAE;MAAA,OAAM,OAAO,CAAC,OAAR,CAAgB,qCAAhB,CAAN;IAAA;EAFN,CAAL,EAEuE,wBAFvE,CAFF,E,KAAA,EAQE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IACH,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CADJ;IAEH,OAAO,EAAE;MAAA,OAAM,OAAO,CAAC,OAAR,CAAgB,mCAAhB,CAAN;IAAA;EAFN,CAAL,EAEqE,0BAFrE,CARF,EAcO,QAdP,CADF,CADF;AAmBD;AAED,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;EAC/B,OAAO,oBACF,UAAU,CAAC,kBADT,CADwB;EAI/B,IAAI,EAAE;IACJ,QAAQ,EAAE,EADN;IAEJ,OAAO,EAAE;EAFL,CAJyB;EAQ/B,IAAI,EAAE;IACJ,KAAK,EAAE;EADH;AARyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text, Linking, TextStyle, StyleProp, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  linkStyle?: StyleProp<TextStyle>;\n}\n\nexport default function FirebaseRecaptchaBanner(props: Props) {\n  const { textStyle, linkStyle, ...otherProps } = props;\n  return (\n    <View {...otherProps}>\n      <Text style={[styles.text, textStyle]}>\n        This app is protected by reCAPTCHA and the Google\n        <Text\n          style={[styles.link, linkStyle]}\n          onPress={() => Linking.openURL('https://policies.google.com/privacy')}>\n          &nbsp;Privacy Policy&nbsp;\n        </Text>\n        and\n        <Text\n          style={[styles.link, linkStyle]}\n          onPress={() => Linking.openURL('https://policies.google.com/terms')}>\n          &nbsp;Terms of Service&nbsp;\n        </Text>\n        apply.\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  text: {\n    fontSize: 13,\n    opacity: 0.5,\n  },\n  link: {\n    color: 'blue',\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}