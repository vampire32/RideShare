{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MapView from 'react-native-maps';\nimport { point } from '@turf/helpers';\nimport destination from '@turf/destination';\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MapVieww = function (_React$Component) {\n  _inherits(MapVieww, _React$Component);\n\n  var _super = _createSuper(MapVieww);\n\n  function MapVieww(props) {\n    var _this;\n\n    _classCallCheck(this, MapVieww);\n\n    _this = _super.call(this, props);\n\n    _this.onRegionChangeComplete = function (region) {\n      var center = point([region.longitude, region.latitude]);\n      var verticalMeter = 111 * region.latitudeDelta / 2;\n      var horizontalMeter = 111 * region.longitudeDelta / 2;\n      var options = {\n        units: 'kilometers'\n      };\n      var south = destination(center, verticalMeter, 180, options);\n      var west = destination(center, horizontalMeter, -90, options);\n      var north = destination(center, verticalMeter, 0, options);\n      var east = destination(center, horizontalMeter, 90, options);\n\n      _this.setState({\n        south: south.geometry.coordinates[1],\n        west: west.geometry.coordinates[0],\n        north: north.geometry.coordinates[1],\n        east: east.geometry.coordinates[0]\n      });\n    };\n\n    _this.fetchToilet = function _callee() {\n      var south, west, north, east, body, options, response, json;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              south = _this.state.south;\n              west = _this.state.west;\n              north = _this.state.north;\n              east = _this.state.east;\n              body = \"\\n            [out:json];\\n            (\\n                node\\n                [amenity=kindergarten]\\n                (\" + south + \",\" + west + \",\" + north + \",\" + east + \");\\n\\n            );\\n            out;\\n            \";\n              options = {\n                method: 'POST',\n                body: body\n              };\n              _context.prev = 6;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(fetch('https://overpass-api.de/api/interpreter', options));\n\n            case 9:\n              response = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 12:\n              json = _context.sent;\n\n              _this.setState({\n                elements: json.elements\n              });\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[6, 16]], Promise);\n    };\n\n    _this.state = {\n      elements: [],\n      south: null,\n      west: null,\n      north: null,\n      east: null,\n      latitude: null,\n      longitude: null\n    };\n    return _this;\n  }\n\n  _createClass(MapVieww, [{\n    key: \"updateState\",\n    value: function updateState(location) {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 3:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context2.sent;\n              this.updateState(location);\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 13]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(MapView, {\n          onRegionChangeComplete: this.onRegionChangeComplete,\n          style: styles.mapView,\n          showsUserLocation: true,\n          initialRegion: {\n            latitude: this.state.latitude,\n            longitude: this.state.longitude,\n            latitudeDelta: 0.02,\n            longitudeDelta: 0.02\n          },\n          children: this.state.elements.map(function (element) {\n            var title = '保育園';\n\n            if (element.tags['name'] !== undefined) {\n              title = element.tags['name'];\n            }\n\n            return _jsx(MapView.Marker, {\n              coordinate: {\n                latitude: element.lat,\n                longitude: element.lon\n              },\n              title: title\n            }, 'id_' + element.id);\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.fetchToilet();\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.buttonItem,\n              children: \"\\u4FDD\\u80B2\\u5712\\u53D6\\u5F97\"\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return MapVieww;\n}(React.Component);\n\nexport { MapVieww as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  mapView: _objectSpread({}, StyleSheet.absoluteFillObject),\n  buttonContainer: {\n    flexDirection: 'row',\n    marginVertical: 20,\n    backgroundColor: 'transparent',\n    alignItems: 'center'\n  },\n  button: {\n    width: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255,235,255,0.7)',\n    paddingHorizontal: 18,\n    paddingVertical: 12,\n    borderRadius: 20\n  },\n  buttonItem: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","MapView","point","destination","Location","MapVieww","props","onRegionChangeComplete","region","center","longitude","latitude","verticalMeter","latitudeDelta","horizontalMeter","longitudeDelta","options","units","south","west","north","east","setState","geometry","coordinates","fetchToilet","state","body","method","fetch","response","json","elements","console","log","location","coords","requestPermissionsAsync","status","getCurrentPositionAsync","updateState","styles","container","mapView","map","element","title","tags","undefined","lat","lon","id","buttonContainer","button","buttonItem","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","absoluteFillObject","flexDirection","marginVertical","width","paddingHorizontal","paddingVertical","borderRadius","textAlign"],"sources":["D:/React/TaxiApp/cabApp/components/CurrentLocation.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport MapView from 'react-native-maps';\r\nimport { point } from '@turf/helpers';\r\nimport destination from '@turf/destination';\r\nimport * as Location from 'expo-location';\r\n\r\nexport default class MapVieww extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elements: [],\r\n      south: null,\r\n      west: null,\r\n      north: null,\r\n      east: null,\r\n      latitude: null,\r\n      longitude: null,\r\n    };\r\n  }\r\n\r\n  updateState(location) {\r\n    this.setState({\r\n      ...this.state,\r\n      latitude: location.coords.latitude,\r\n      longitude: location.coords.longitude,\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        return;\r\n      }\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      this.updateState(location);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  onRegionChangeComplete = (region) => {\r\n    const center = point([region.longitude, region.latitude]);\r\n    const verticalMeter = (111 * region.latitudeDelta) / 2;\r\n    const horizontalMeter = (111 * region.longitudeDelta) / 2;\r\n    const options = { units: 'kilometers' };\r\n    const south = destination(center, verticalMeter, 180, options);\r\n    const west = destination(center, horizontalMeter, -90, options);\r\n    const north = destination(center, verticalMeter, 0, options);\r\n    const east = destination(center, horizontalMeter, 90, options);\r\n    this.setState({\r\n      south: south.geometry.coordinates[1],\r\n      west: west.geometry.coordinates[0],\r\n      north: north.geometry.coordinates[1],\r\n      east: east.geometry.coordinates[0],\r\n    });\r\n  };\r\n\r\n  fetchToilet = async () => {\r\n    const south = this.state.south;\r\n    const west = this.state.west;\r\n    const north = this.state.north;\r\n    const east = this.state.east;\r\n    const body = `\r\n            [out:json];\r\n            (\r\n                node\r\n                [amenity=kindergarten]\r\n                (${south},${west},${north},${east});\r\n\r\n            );\r\n            out;\r\n            `;\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      body: body,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://overpass-api.de/api/interpreter',\r\n        options\r\n      );\r\n      const json = await response.json();\r\n      this.setState({ elements: json.elements });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <MapView\r\n          onRegionChangeComplete={this.onRegionChangeComplete}\r\n          style={styles.mapView}\r\n          showsUserLocation\r\n          initialRegion={{\r\n            latitude: this.state.latitude,\r\n            longitude: this.state.longitude,\r\n            latitudeDelta: 0.02, \r\n            longitudeDelta: 0.02,\r\n          }}>\r\n          {this.state.elements.map((element) => {\r\n            let title = '保育園';\r\n            if (element.tags['name'] !== undefined) {\r\n              title = element.tags['name'];\r\n            }\r\n            return (\r\n              <MapView.Marker\r\n                coordinate={{\r\n                  latitude: element.lat,\r\n                  longitude: element.lon,\r\n                }}\r\n                title={title}\r\n                key={'id_' + element.id}\r\n              />\r\n            );\r\n          })}\r\n        </MapView>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            onPress={() => this.fetchToilet()}\r\n            style={styles.button}>\r\n            <Text style={styles.buttonItem}>保育園取得</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n  },\r\n\r\n  mapView: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 20,\r\n    backgroundColor: 'transparent',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  button: {\r\n    width: 150,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'rgba(255,235,255,0.7)',\r\n    paddingHorizontal: 18,\r\n    paddingVertical: 12,\r\n    borderRadius: 20,\r\n  },\r\n\r\n  buttonItem: {\r\n    textAlign: 'center',\r\n  },\r\n});"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;;IAEqBC,Q;;;;;EACnB,kBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;;IADiB,MAkCnBC,sBAlCmB,GAkCM,UAACC,MAAD,EAAY;MACnC,IAAMC,MAAM,GAAGP,KAAK,CAAC,CAACM,MAAM,CAACE,SAAR,EAAmBF,MAAM,CAACG,QAA1B,CAAD,CAApB;MACA,IAAMC,aAAa,GAAI,MAAMJ,MAAM,CAACK,aAAd,GAA+B,CAArD;MACA,IAAMC,eAAe,GAAI,MAAMN,MAAM,CAACO,cAAd,GAAgC,CAAxD;MACA,IAAMC,OAAO,GAAG;QAAEC,KAAK,EAAE;MAAT,CAAhB;MACA,IAAMC,KAAK,GAAGf,WAAW,CAACM,MAAD,EAASG,aAAT,EAAwB,GAAxB,EAA6BI,OAA7B,CAAzB;MACA,IAAMG,IAAI,GAAGhB,WAAW,CAACM,MAAD,EAASK,eAAT,EAA0B,CAAC,EAA3B,EAA+BE,OAA/B,CAAxB;MACA,IAAMI,KAAK,GAAGjB,WAAW,CAACM,MAAD,EAASG,aAAT,EAAwB,CAAxB,EAA2BI,OAA3B,CAAzB;MACA,IAAMK,IAAI,GAAGlB,WAAW,CAACM,MAAD,EAASK,eAAT,EAA0B,EAA1B,EAA8BE,OAA9B,CAAxB;;MACA,MAAKM,QAAL,CAAc;QACZJ,KAAK,EAAEA,KAAK,CAACK,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CADK;QAEZL,IAAI,EAAEA,IAAI,CAACI,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAFM;QAGZJ,KAAK,EAAEA,KAAK,CAACG,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CAHK;QAIZH,IAAI,EAAEA,IAAI,CAACE,QAAL,CAAcC,WAAd,CAA0B,CAA1B;MAJM,CAAd;IAMD,CAjDkB;;IAAA,MAmDnBC,WAnDmB,GAmDL;MAAA;MAAA;QAAA;UAAA;YAAA;cACNP,KADM,GACE,MAAKQ,KAAL,CAAWR,KADb;cAENC,IAFM,GAEC,MAAKO,KAAL,CAAWP,IAFZ;cAGNC,KAHM,GAGE,MAAKM,KAAL,CAAWN,KAHb;cAINC,IAJM,GAIC,MAAKK,KAAL,CAAWL,IAJZ;cAKNM,IALM,iIAUGT,KAVH,SAUYC,IAVZ,SAUoBC,KAVpB,SAU6BC,IAV7B;cAgBNL,OAhBM,GAgBI;gBACdY,MAAM,EAAE,MADM;gBAEdD,IAAI,EAAEA;cAFQ,CAhBJ;cAAA;cAAA;cAAA,iCAsBaE,KAAK,CAC1B,yCAD0B,EAE1Bb,OAF0B,CAtBlB;;YAAA;cAsBJc,QAtBI;cAAA;cAAA,iCA0BSA,QAAQ,CAACC,IAAT,EA1BT;;YAAA;cA0BJA,IA1BI;;cA2BV,MAAKT,QAAL,CAAc;gBAAEU,QAAQ,EAAED,IAAI,CAACC;cAAjB,CAAd;;cA3BU;cAAA;;YAAA;cAAA;cAAA;cA6BVC,OAAO,CAACC,GAAR;;YA7BU;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAnDK;;IAEjB,MAAKR,KAAL,GAAa;MACXM,QAAQ,EAAE,EADC;MAEXd,KAAK,EAAE,IAFI;MAGXC,IAAI,EAAE,IAHK;MAIXC,KAAK,EAAE,IAJI;MAKXC,IAAI,EAAE,IALK;MAMXV,QAAQ,EAAE,IANC;MAOXD,SAAS,EAAE;IAPA,CAAb;IAFiB;EAWlB;;;;WAED,qBAAYyB,QAAZ,EAAsB;MACpB,KAAKb,QAAL,iCACK,KAAKI,KADV;QAEEf,QAAQ,EAAEwB,QAAQ,CAACC,MAAT,CAAgBzB,QAF5B;QAGED,SAAS,EAAEyB,QAAQ,CAACC,MAAT,CAAgB1B;MAH7B;IAKD;;;WAED;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAE2BN,QAAQ,CAACiC,uBAAT,EAF3B;;YAAA;cAAA;cAEUC,MAFV,yBAEUA,MAFV;;cAAA,MAGQA,MAAM,KAAK,SAHnB;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;cAAA,iCAMyBlC,QAAQ,CAACmC,uBAAT,CAAiC,EAAjC,CANzB;;YAAA;cAMQJ,QANR;cAOI,KAAKK,WAAL,CAAiBL,QAAjB;cAPJ;cAAA;;YAAA;cAAA;cAAA;cASIF,OAAO,CAACC,GAAR;;YATJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WA8DA,kBAAS;MAAA;;MACP,OACE,MAAC,IAAD;QAAM,KAAK,EAAEO,MAAM,CAACC,SAApB;QAAA,WACE,KAAC,OAAD;UACE,sBAAsB,EAAE,KAAKnC,sBAD/B;UAEE,KAAK,EAAEkC,MAAM,CAACE,OAFhB;UAGE,iBAAiB,MAHnB;UAIE,aAAa,EAAE;YACbhC,QAAQ,EAAE,KAAKe,KAAL,CAAWf,QADR;YAEbD,SAAS,EAAE,KAAKgB,KAAL,CAAWhB,SAFT;YAGbG,aAAa,EAAE,IAHF;YAIbE,cAAc,EAAE;UAJH,CAJjB;UAAA,UAUG,KAAKW,KAAL,CAAWM,QAAX,CAAoBY,GAApB,CAAwB,UAACC,OAAD,EAAa;YACpC,IAAIC,KAAK,GAAG,KAAZ;;YACA,IAAID,OAAO,CAACE,IAAR,CAAa,MAAb,MAAyBC,SAA7B,EAAwC;cACtCF,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAa,MAAb,CAAR;YACD;;YACD,OACE,KAAC,OAAD,CAAS,MAAT;cACE,UAAU,EAAE;gBACVpC,QAAQ,EAAEkC,OAAO,CAACI,GADR;gBAEVvC,SAAS,EAAEmC,OAAO,CAACK;cAFT,CADd;cAKE,KAAK,EAAEJ;YALT,GAMO,QAAQD,OAAO,CAACM,EANvB,CADF;UAUD,CAfA;QAVH,EADF,EA6BE,KAAC,IAAD;UAAM,KAAK,EAAEV,MAAM,CAACW,eAApB;UAAA,UACE,KAAC,gBAAD;YACE,OAAO,EAAE;cAAA,OAAM,MAAI,CAAC3B,WAAL,EAAN;YAAA,CADX;YAEE,KAAK,EAAEgB,MAAM,CAACY,MAFhB;YAAA,UAGE,KAAC,IAAD;cAAM,KAAK,EAAEZ,MAAM,CAACa,UAApB;cAAA;YAAA;UAHF;QADF,EA7BF;MAAA,EADF;IAuCD;;;;EA5HmCtD,KAAK,CAACuD,S;;SAAvBlD,Q;AA+HrB,IAAMoC,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAQ/BlB,OAAO,oBACFa,UAAU,CAACM,kBADT,CARwB;EAY/BV,eAAe,EAAE;IACfW,aAAa,EAAE,KADA;IAEfC,cAAc,EAAE,EAFD;IAGfL,eAAe,EAAE,aAHF;IAIfC,UAAU,EAAE;EAJG,CAZc;EAmB/BP,MAAM,EAAE;IACNY,KAAK,EAAE,GADD;IAENL,UAAU,EAAE,QAFN;IAGNC,cAAc,EAAE,QAHV;IAINF,eAAe,EAAE,uBAJX;IAKNO,iBAAiB,EAAE,EALb;IAMNC,eAAe,EAAE,EANX;IAONC,YAAY,EAAE;EAPR,CAnBuB;EA6B/Bd,UAAU,EAAE;IACVe,SAAS,EAAE;EADD;AA7BmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}