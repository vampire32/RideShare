{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { TextInput } from \"react-native-paper\";\nimport BG2 from \"../assets/images/loginbg-removebg-preview.png\";\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from \"expo-firebase-recaptcha\";\nimport { initializeApp, getApp } from \"firebase/app\";\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBlyd5zF3D9D5MV9Pkn0tqkvG5hCmJ3R6c\",\n  authDomain: \"lift-lae-ly.firebaseapp.com\",\n  projectId: \"lift-lae-ly\",\n  storageBucket: \"lift-lae-ly.appspot.com\",\n  messagingSenderId: \"739366618024\",\n  appId: \"1:739366618024:web:c0aa0588e8c3921722139d\",\n  measurementId: \"G-T5C7S28NJ9\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth();\n\nif (!(app != null && app.options) || Platform.OS === \"web\") {\n  throw new Error(\"This example only works on Android or iOS, and requires a valid Firebase config.\");\n}\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      onChangeNumber = _useState2[1];\n\n  var recaptchaVerifier = React.useRef(null);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phoneNumber = _React$useState2[0],\n      setPhoneNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      verificationId = _React$useState4[0],\n      setVerificationId = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      verificationCode = _React$useState6[0],\n      setVerificationCode = _React$useState6[1];\n\n  var firebaseConfig = app ? app.options : undefined;\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      message = _React$useState8[0],\n      showMessage = _React$useState8[1];\n\n  var attemptInvisibleVerification = false;\n  var navigation = props.navigation;\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\"\n    }), _jsx(KeyboardAvoidingView, {\n      behavior: \"padding\",\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        children: _jsxs(View, {\n          children: [_jsxs(View, {\n            style: styles.topText,\n            children: [_jsx(Text, {\n              style: {\n                color: \"white\"\n              },\n              children: \"Logo Here\"\n            }), _jsx(Text, {\n              style: {\n                fontSize: 32,\n                marginStart: 50,\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Welcome To\"\n            })]\n          }), _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              color: \"white\",\n              fontSize: 32,\n              fontWeight: \"bold\"\n            },\n            children: \"Lift Lae Ly\"\n          }), _jsx(Image, {\n            source: BG2,\n            style: {\n              marginTop: 40\n            }\n          }), _jsxs(View, {\n            children: [_jsxs(View, {\n              children: [_jsx(Text, {\n                style: {\n                  color: \"white\",\n                  fontSize: 18,\n                  fontWeight: \"bold\"\n                },\n                children: \"Phone Number\"\n              }), _jsx(TextInput, {\n                label: \" Enter Your Phone Number\",\n                keyboardType: \"numeric\",\n                style: styles.input,\n                onChangeText: onChangeNumber,\n                value: number\n              })]\n            }), _jsx(TouchableHighlight, {\n              onPress: function _callee() {\n                var phoneProvider, _verificationId;\n\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        phoneProvider = new PhoneAuthProvider(auth);\n                        _context.next = 4;\n                        return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n                      case 4:\n                        _verificationId = _context.sent;\n                        setVerificationId(_verificationId);\n                        showMessage({\n                          text: \"Verification code has been sent to your phone.\"\n                        });\n                        _context.next = 12;\n                        break;\n\n                      case 9:\n                        _context.prev = 9;\n                        _context.t0 = _context[\"catch\"](0);\n                        showMessage({\n                          text: \"Error: \" + _context.t0.message,\n                          color: \"red\"\n                        });\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, [[0, 9]], Promise);\n              },\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: \"Get OTP\"\n                })\n              })\n            }), message ? _jsx(TouchableOpacity, {\n              style: [StyleSheet.absoluteFill, {\n                backgroundColor: 0xffffffee,\n                justifyContent: \"center\"\n              }],\n              onPress: function onPress() {\n                return showMessage(undefined);\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: message.color || \"blue\",\n                  fontSize: 17,\n                  textAlign: \"center\",\n                  margin: 20\n                },\n                children: message.text\n              })\n            }) : undefined, attemptInvisibleVerification && _jsx(FirebaseRecaptchaBanner, {})]\n          })]\n        })\n      })\n    })]\n  });\n};\n\nvar android = Dimensions.get(\"window\");\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: android.width,\n    height: android.height,\n    backgroundColor: \"#1F4690\"\n  },\n  topText: {\n    flexDirection: \"row\",\n    marginTop: 30\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#FFD24C\",\n    color: \"white\",\n    padding: 15,\n    borderTopLeftRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    borderTopRightRadius: 20,\n    width: android.width,\n    marginTop: 40\n  },\n  input: {\n    marginTop: 15,\n    borderTopLeftRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    width: android.width,\n    borderTopRightRadius: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useRef","TextInput","BG2","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","initializeApp","getApp","getAuth","PhoneAuthProvider","signInWithCredential","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","options","Platform","OS","Error","LoginScreen","props","number","onChangeNumber","recaptchaVerifier","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verificationCode","setVerificationCode","undefined","message","showMessage","attemptInvisibleVerification","navigation","styles","container","Keyboard","dismiss","topText","color","fontSize","marginStart","fontWeight","textAlign","marginTop","input","phoneProvider","verifyPhoneNumber","current","text","button","StyleSheet","absoluteFill","backgroundColor","justifyContent","margin","android","Dimensions","get","create","flex","width","height","flexDirection","alignItems","padding","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius"],"sources":["D:/React/TaxiApp/cabApp/components/LoginScreen.js"],"sourcesContent":["import React, { useState,useRef } from \"react\";\r\nimport {\r\n\tStyleSheet,\r\n\tText,\r\n\tView,\r\n\tImage,\r\n\tTouchableWithoutFeedback,\r\n\tStatusBar,\r\n\tSafeAreaView,\r\n\tKeyboard,\r\n\tTouchableOpacity,\r\n\tKeyboardAvoidingView,\r\n\tAppRegistry,\r\n\tDimensions,\r\n\tButton,\r\n\tTouchableHighlight,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport BG2 from \"../assets/images/loginbg-removebg-preview.png\"; \r\n\r\nimport {\r\n\tFirebaseRecaptchaVerifierModal,\r\n\tFirebaseRecaptchaBanner,\r\n} from \"expo-firebase-recaptcha\";\r\nimport { initializeApp, getApp } from \"firebase/app\";\r\nimport {\r\n\tgetAuth,\r\n\tPhoneAuthProvider,\r\n\tsignInWithCredential,\r\n} from \"firebase/auth\";\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyBlyd5zF3D9D5MV9Pkn0tqkvG5hCmJ3R6c\",\r\n\tauthDomain: \"lift-lae-ly.firebaseapp.com\",\r\n\tprojectId: \"lift-lae-ly\",\r\n\tstorageBucket: \"lift-lae-ly.appspot.com\",\r\n\tmessagingSenderId: \"739366618024\",\r\n\tappId: \"1:739366618024:web:c0aa0588e8c3921722139d\",\r\n\tmeasurementId: \"G-T5C7S28NJ9\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const app = getApp();\r\nconst auth = getAuth();\r\n\r\n// Double-check that we can run the example\r\nif (!app?.options || Platform.OS === \"web\") {\r\n\tthrow new Error(\r\n\t\t\"This example only works on Android or iOS, and requires a valid Firebase config.\"\r\n\t);\r\n}\r\n\r\nconst LoginScreen =(props)=> {\r\n\tconst [number, onChangeNumber] = useState(null);\r\n\t  const recaptchaVerifier = React.useRef(null);\r\n\t\tconst [phoneNumber, setPhoneNumber] = React.useState();\r\n\t\tconst [verificationId, setVerificationId] = React.useState();\r\n\t\tconst [verificationCode, setVerificationCode] = React.useState();\r\n\r\n\t\tconst firebaseConfig = app ? app.options : undefined;\r\n\t\tconst [message, showMessage] = React.useState(null);\r\n\t\tconst attemptInvisibleVerification = false;\r\n\r\n\t\r\n\t\tconst { navigation } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<SafeAreaView style={styles.container}>\r\n\t\t\t\t<StatusBar barStyle=\"light-content\" />\r\n\t\t\t\t<KeyboardAvoidingView behavior=\"padding\">\r\n\t\t\t\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<View style={styles.topText}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"white\" }}>Logo Here</Text>\r\n\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 32,\r\n\t\t\t\t\t\t\t\t\t\tmarginStart: 50,\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tWelcome To\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\tfontSize: 32,\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLift Lae Ly\r\n\t\t\t\t\t\t\t</Text>\r\n\r\n\t\t\t\t\t\t\t<Image source={BG2} style={{ marginTop: 40 }} />\r\n\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPhone Number\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tlabel=\" Enter Your Phone Number\"\r\n\t\t\t\t\t\t\t\t\t\tkeyboardType=\"numeric\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={onChangeNumber}\r\n\t\t\t\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<TouchableHighlight\r\n\t\t\t\t\t\t\t\t\tonPress={async () => {\r\n\t\t\t\t\t\t\t\t\t\t// The FirebaseRecaptchaVerifierModal ref implements the\r\n\t\t\t\t\t\t\t\t\t\t// FirebaseAuthApplicationVerifier interface and can be\r\n\t\t\t\t\t\t\t\t\t\t// passed directly to `verifyPhoneNumber`.\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\tconst phoneProvider = new PhoneAuthProvider(auth);\r\n\t\t\t\t\t\t\t\t\t\t\tconst verificationId =\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait phoneProvider.verifyPhoneNumber(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphoneNumber,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trecaptchaVerifier.current\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\tsetVerificationId(verificationId);\r\n\t\t\t\t\t\t\t\t\t\t\tshowMessage({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext: \"Verification code has been sent to your phone.\",\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\tshowMessage({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext: `Error: ${err.message}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<View style={styles.button}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={{ color: \"white\" }}>Get OTP</Text>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t</TouchableHighlight>\r\n\t\t\t\t\t\t\t\t{message ? (\r\n\t\t\t\t\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\t\tStyleSheet.absoluteFill,\r\n\t\t\t\t\t\t\t\t\t\t\t{ backgroundColor: 0xffffffee, justifyContent: \"center\" },\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tonPress={() => showMessage(undefined)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: message.color || \"blue\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 17,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t\t) : undefined}\r\n\t\t\t\t\t\t\t\t{attemptInvisibleVerification && <FirebaseRecaptchaBanner />}\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t\t</KeyboardAvoidingView>\r\n\t\t\t</SafeAreaView>\r\n\t\t);\r\n\t}\r\n\r\nconst android = Dimensions.get(\"window\");\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\twidth: android.width ,\r\n\t\theight: android.height ,\r\n\t\tbackgroundColor: \"#1F4690\",\r\n\t},\r\n\r\n\ttopText: {\r\n\t\tflexDirection: \"row\",\r\n\t\t// alignItems:'center'\r\n\t\t// justifyContent: \"space-around\",\r\n\t\tmarginTop: 30,\r\n\t},\r\n\tbutton: {\r\n\t\talignItems: \"center\",\r\n\t\tbackgroundColor: \"#FFD24C\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: 15,\r\n\t\tborderTopLeftRadius: 20,\r\n\t\tborderBottomLeftRadius: 20,\r\n\t\tborderBottomRightRadius: 20,\r\n\t\tborderTopRightRadius: 20,\r\n\r\n\t\twidth: android.width,\r\n\t\tmarginTop: 40,\r\n\t},\r\n\tinput: {\r\n\t\tmarginTop: 15,\r\n\t\tborderTopLeftRadius: 20,\r\n\t\tborderBottomLeftRadius: 20,\r\n\t\tborderBottomRightRadius: 20,\r\n\t\twidth: android.width,\r\n\t\tborderTopRightRadius: 20,\r\n\t},\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}