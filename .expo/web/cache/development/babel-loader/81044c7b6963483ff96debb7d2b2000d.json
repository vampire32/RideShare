{"ast":null,"code":"var accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    return accessibilityRole;\n  }\n\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;","map":{"version":3,"names":["accessibilityComponentTypeToRole","button","none","accessibilityTraitsToRole","adjustable","header","image","link","search","summary","propsToAriaRole","_ref","accessibilityComponentType","accessibilityRole","accessibilityTraits","trait","Array","isArray"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"sourcesContent":["/**\n * Copyright (c) 2017-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\n\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\n\n/**\n * Provides compatibility with React Native's \"accessibilityTraits\" (iOS) and\n * \"accessibilityComponentType\" (Android), converting them to equivalent ARIA\n * roles.\n */\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    return accessibilityRole;\n  }\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;"],"mappings":"AASA,IAAIA,gCAAgC,GAAG;EACrCC,MAAM,EAAE,QAD6B;EAErCC,IAAI,EAAE;AAF+B,CAAvC;AAKA,IAAIC,yBAAyB,GAAG;EAC9BC,UAAU,EAAE,QADkB;EAE9BH,MAAM,EAAE,QAFsB;EAG9BI,MAAM,EAAE,SAHsB;EAI9BC,KAAK,EAAE,KAJuB;EAK9BC,IAAI,EAAE,MALwB;EAM9BL,IAAI,EAAE,cANwB;EAO9BM,MAAM,EAAE,QAPsB;EAQ9BC,OAAO,EAAE;AARqB,CAAhC;;AAgBA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;EACnD,IAAIC,0BAA0B,GAAGD,IAAI,CAACC,0BAAtC;EAAA,IACIC,iBAAiB,GAAGF,IAAI,CAACE,iBAD7B;EAAA,IAEIC,mBAAmB,GAAGH,IAAI,CAACG,mBAF/B;;EAIA,IAAID,iBAAJ,EAAuB;IACrB,OAAOA,iBAAP;EACD;;EACD,IAAIC,mBAAJ,EAAyB;IACvB,IAAIC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,mBAAd,IAAqCA,mBAAmB,CAAC,CAAD,CAAxD,GAA8DA,mBAA1E;IACA,OAAOX,yBAAyB,CAACY,KAAD,CAAhC;EACD;;EACD,IAAIH,0BAAJ,EAAgC;IAC9B,OAAOZ,gCAAgC,CAACY,0BAAD,CAAvC;EACD;AACF,CAfD;;AAiBA,eAAeF,eAAf"},"metadata":{},"sourceType":"module"}