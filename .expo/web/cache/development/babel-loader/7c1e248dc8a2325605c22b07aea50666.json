{"ast":null,"code":"\n\nimport requireNativeComponent from \"../../Libraries/ReactNative/requireNativeComponent\";\nimport UIManager from \"../ReactNative/UIManager\";\n\nfunction codegenNativeComponent(componentName, options) {\n  var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.getViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (options.paperComponentNameDeprecated != null && UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      var _options$paperCompone;\n      throw new Error(\"Failed to find native component for either \" + componentName + \" or \" + ((_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'));\n    }\n  }\n\n  return requireNativeComponent(componentNameInUse);\n}\nexport default codegenNativeComponent;","map":{"version":3,"names":["requireNativeComponent","UIManager","codegenNativeComponent","componentName","options","componentNameInUse","paperComponentName","paperComponentNameDeprecated","getViewManagerConfig","Error"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// TODO: move this file to shims/ReactNative (requires React update and sync)\n\nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport type {HostComponent} from '../../Libraries/Renderer/shims/ReactNativeTypes';\nimport UIManager from '../ReactNative/UIManager';\n\n// TODO: import from CodegenSchema once workspaces are enabled\ntype Options = $ReadOnly<{|\n  interfaceOnly?: boolean,\n  paperComponentName?: string,\n  paperComponentNameDeprecated?: string,\n  excludedPlatforms?: $ReadOnlyArray<'iOS' | 'android'>,\n|}>;\n\nexport type NativeComponentType<T> = HostComponent<T>;\n\nfunction codegenNativeComponent<Props>(\n  componentName: string,\n  options?: Options,\n): NativeComponentType<Props> {\n  let componentNameInUse =\n    options && options.paperComponentName != null\n      ? options.paperComponentName\n      : componentName;\n\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.getViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (\n      options.paperComponentNameDeprecated != null &&\n      UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)\n    ) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(\n        `Failed to find native component for either ${componentName} or ${\n          options.paperComponentNameDeprecated ?? '(unknown)'\n        }`,\n      );\n    }\n  }\n\n  // If this function is run at runtime then that means the view configs were not\n  // generated with the view config babel plugin, so we need to require the native component.\n  //\n  // This will be useful during migration, but eventually this will error.\n  return (requireNativeComponent<Props>(\n    componentNameInUse,\n  ): HostComponent<Props>);\n}\n\nexport default codegenNativeComponent;\n"],"mappings":";;AAYA,OAAOA,sBAAsB;AAE7B,OAAOC,SAAS;;AAYhB,SAASC,sBAAsB,CAC7BC,aAAqB,EACrBC,OAAiB,EACW;EAC5B,IAAIC,kBAAkB,GACpBD,OAAO,IAAIA,OAAO,CAACE,kBAAkB,IAAI,IAAI,GACzCF,OAAO,CAACE,kBAAkB,GAC1BH,aAAa;EAEnB,IAAIC,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACG,4BAA4B,IAAI,IAAI,EAAE;IACnE,IAAIN,SAAS,CAACO,oBAAoB,CAACL,aAAa,CAAC,EAAE;MACjDE,kBAAkB,GAAGF,aAAa;IACpC,CAAC,MAAM,IACLC,OAAO,CAACG,4BAA4B,IAAI,IAAI,IAC5CN,SAAS,CAACO,oBAAoB,CAACJ,OAAO,CAACG,4BAA4B,CAAC,EACpE;MACAF,kBAAkB,GAAGD,OAAO,CAACG,4BAA4B;IAC3D,CAAC,MAAM;MAAA;MACL,MAAM,IAAIE,KAAK,iDACiCN,aAAa,sCACzDC,OAAO,CAACG,4BAA4B,oCAAI,WAAW,EAEtD;IACH;EACF;;EAMA,OAAQP,sBAAsB,CAC5BK,kBAAkB,CACnB;AACH;AAEA,eAAeH,sBAAsB"},"metadata":{},"sourceType":"module"}