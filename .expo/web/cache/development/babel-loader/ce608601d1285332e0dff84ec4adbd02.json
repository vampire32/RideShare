{"ast":null,"code":"\n\n'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar AnimatedNode = require(\"./AnimatedNode\");\nvar AnimatedWithChildren = require(\"./AnimatedWithChildren\");\nvar NativeAnimatedHelper = require(\"../NativeAnimatedHelper\");\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative(platformConfig);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getAnimatedValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedWithChildren);\nmodule.exports = AnimatedTransform;","map":{"version":3,"names":["AnimatedNode","require","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","transforms","_transforms","platformConfig","forEach","transform","key","value","__makeNative","map","result","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n}\n\nmodule.exports = AnimatedTransform;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}