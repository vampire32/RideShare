{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FlagType, CountryCodeList } from \"./types\";\nimport Fuse from 'fuse.js';\nvar imageJsonUrl = 'https://xcarpentier.github.io/react-native-country-picker-modal/countries/';\nvar localData = {\n  emojiCountries: undefined,\n  imageCountries: undefined\n};\nexport var loadDataAsync = function (data) {\n  return function () {\n    var dataType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : FlagType.EMOJI;\n    return new Promise(function (resolve, reject) {\n      switch (dataType) {\n        case FlagType.FLAT:\n          if (!data.imageCountries) {\n            fetch(imageJsonUrl).then(function (response) {\n              return response.json();\n            }).then(function (remoteData) {\n              data.imageCountries = remoteData;\n              resolve(data.imageCountries);\n            }).catch(reject);\n          } else {\n            resolve(data.imageCountries);\n          }\n          break;\n        default:\n          if (!data.emojiCountries) {\n            data.emojiCountries = require(\"./assets/data/countries-emoji.json\");\n            resolve(data.emojiCountries);\n          } else {\n            resolve(data.emojiCountries);\n          }\n          break;\n      }\n    });\n  };\n}(localData);\nexport var getEmojiFlagAsync = function _callee() {\n  var countryCode,\n    countries,\n    _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          countryCode = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'FR';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n        case 3:\n          countries = _context.sent;\n          if (countries) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error('Unable to find emoji because emojiCountries is undefined');\n        case 6:\n          return _context.abrupt(\"return\", countries[countryCode].flag);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getImageFlagAsync = function _callee2() {\n  var countryCode,\n    countries,\n    _args2 = arguments;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          countryCode = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 'FR';\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync(FlagType.FLAT));\n        case 3:\n          countries = _context2.sent;\n          if (countries) {\n            _context2.next = 6;\n            break;\n          }\n          throw new Error('Unable to find image because imageCountries is undefined');\n        case 6:\n          return _context2.abrupt(\"return\", countries[countryCode].flag);\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryNameAsync = function _callee3() {\n  var countryCode,\n    translation,\n    countries,\n    _args3 = arguments;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          countryCode = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 'FR';\n          translation = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 'common';\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n        case 4:\n          countries = _context3.sent;\n          if (countries) {\n            _context3.next = 7;\n            break;\n          }\n          throw new Error('Unable to find image because imageCountries is undefined');\n        case 7:\n          return _context3.abrupt(\"return\", countries[countryCode].name ? countries[countryCode].name[translation] : countries[countryCode].name['common']);\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCallingCodeAsync = function _callee4(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n        case 2:\n          countries = _context4.sent;\n          if (countries) {\n            _context4.next = 5;\n            break;\n          }\n          throw new Error('Unable to find image because imageCountries is undefined');\n        case 5:\n          return _context4.abrupt(\"return\", countries[countryCode].callingCode[0]);\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCurrencyAsync = function _callee5(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n        case 2:\n          countries = _context5.sent;\n          if (countries) {\n            _context5.next = 5;\n            break;\n          }\n          throw new Error('Unable to find image because imageCountries is undefined');\n        case 5:\n          return _context5.abrupt(\"return\", countries[countryCode].currency[0]);\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nvar isCountryPresent = function isCountryPresent(countries) {\n  return function (countryCode) {\n    return !!countries[countryCode];\n  };\n};\nvar isRegion = function isRegion(region) {\n  return function (country) {\n    return region ? country.region === region : true;\n  };\n};\nvar isSubregion = function isSubregion(subregion) {\n  return function (country) {\n    return subregion ? country.subregion === subregion : true;\n  };\n};\nvar isIncluded = function isIncluded(countryCodes) {\n  return function (country) {\n    return countryCodes && countryCodes.length > 0 ? countryCodes.includes(country.cca2) : true;\n  };\n};\nvar isExcluded = function isExcluded(excludeCountries) {\n  return function (country) {\n    return excludeCountries && excludeCountries.length > 0 ? !excludeCountries.includes(country.cca2) : true;\n  };\n};\nexport var getCountriesAsync = function _callee6(flagType) {\n  var translation,\n    region,\n    subregion,\n    countryCodes,\n    excludeCountries,\n    preferredCountries,\n    withAlphaFilter,\n    countriesRaw,\n    newCountryCodeList,\n    countries,\n    _countries,\n    _args6 = arguments;\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          translation = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'common';\n          region = _args6.length > 2 ? _args6[2] : undefined;\n          subregion = _args6.length > 3 ? _args6[3] : undefined;\n          countryCodes = _args6.length > 4 ? _args6[4] : undefined;\n          excludeCountries = _args6.length > 5 ? _args6[5] : undefined;\n          preferredCountries = _args6.length > 6 ? _args6[6] : undefined;\n          withAlphaFilter = _args6.length > 7 ? _args6[7] : undefined;\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(loadDataAsync(flagType));\n        case 9:\n          countriesRaw = _context6.sent;\n          if (countriesRaw) {\n            _context6.next = 12;\n            break;\n          }\n          return _context6.abrupt(\"return\", []);\n        case 12:\n          if (!(preferredCountries && !withAlphaFilter)) {\n            _context6.next = 18;\n            break;\n          }\n          newCountryCodeList = [].concat(_toConsumableArray(preferredCountries), _toConsumableArray(CountryCodeList.filter(function (code) {\n            return !preferredCountries.includes(code);\n          })));\n          countries = newCountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries));\n          return _context6.abrupt(\"return\", countries);\n        case 18:\n          _countries = CountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries)).sort(function (country1, country2) {\n            return country1.name.localeCompare(country2.name);\n          });\n          return _context6.abrupt(\"return\", _countries);\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nvar DEFAULT_FUSE_OPTION = {\n  shouldSort: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  keys: ['name', 'cca2', 'callingCode']\n};\nvar fuse;\nexport var search = function search() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_FUSE_OPTION;\n  if (data.length === 0) {\n    return [];\n  }\n  if (!fuse) {\n    fuse = new Fuse(data, options);\n  }\n  if (filter && filter !== '') {\n    var result = fuse.search(filter);\n    return result;\n  } else {\n    return data;\n  }\n};\nvar uniq = function uniq(arr) {\n  return Array.from(new Set(arr));\n};\nexport var getLetters = function getLetters(countries) {\n  return uniq(countries.map(function (country) {\n    return country.name.substr(0, 1).toLocaleUpperCase();\n  }).sort(function (l1, l2) {\n    return l1.localeCompare(l2);\n  }));\n};\nexport var getCountryInfoAsync = function _callee7(_ref) {\n  var countryCode, translation, countryName, currency, callingCode;\n  return _regeneratorRuntime.async(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          countryCode = _ref.countryCode, translation = _ref.translation;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(getCountryNameAsync(countryCode, translation || 'common'));\n        case 3:\n          countryName = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(getCountryCurrencyAsync(countryCode));\n        case 6:\n          currency = _context7.sent;\n          _context7.next = 9;\n          return _regeneratorRuntime.awrap(getCountryCallingCodeAsync(countryCode));\n        case 9:\n          callingCode = _context7.sent;\n          return _context7.abrupt(\"return\", {\n            countryName: countryName,\n            currency: currency,\n            callingCode: callingCode\n          });\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"mappings":"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","names":["FlagType","CountryCodeList","Fuse","imageJsonUrl","localData","emojiCountries","undefined","imageCountries","loadDataAsync","data","dataType","EMOJI","Promise","resolve","reject","FLAT","fetch","then","response","json","remoteData","catch","require","getEmojiFlagAsync","countryCode","countries","Error","flag","getImageFlagAsync","getCountryNameAsync","translation","name","getCountryCallingCodeAsync","callingCode","getCountryCurrencyAsync","currency","isCountryPresent","isRegion","region","country","isSubregion","subregion","isIncluded","countryCodes","length","includes","cca2","isExcluded","excludeCountries","getCountriesAsync","flagType","preferredCountries","withAlphaFilter","countriesRaw","newCountryCodeList","filter","code","map","sort","country1","country2","localeCompare","DEFAULT_FUSE_OPTION","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","fuse","search","options","result","uniq","arr","Array","from","Set","getLetters","substr","toLocaleUpperCase","l1","l2","getCountryInfoAsync","countryName"],"sourceRoot":"","sources":["../src/CountryService.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}