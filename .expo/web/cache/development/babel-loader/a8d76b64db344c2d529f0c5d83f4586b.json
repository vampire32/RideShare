{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Batchinator = require(\"../Interaction/Batchinator\");\nvar FillRateHelper = require(\"./FillRateHelper\");\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\nvar RefreshControl = require(\"../Components/RefreshControl/RefreshControl\");\nvar ScrollView = require(\"../Components/ScrollView/ScrollView\");\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\nvar View = require(\"../Components/View/View\");\nvar ViewabilityHelper = require(\"./ViewabilityHelper\");\nvar flattenStyle = require(\"../StyleSheet/flattenStyle\");\nvar infoLog = require(\"../Utilities/infoLog\");\nvar invariant = require('invariant');\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from \"./VirtualizeUtils\";\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nfunction horizontalOrDefault(horizontal) {\n  return horizontal != null ? horizontal : false;\n}\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender != null ? initialNumToRender : 10;\n}\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch != null ? maxToRenderPerBatch : 10;\n}\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold != null ? onEndReachedThreshold : 2;\n}\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle != null ? scrollEventThrottle : 50;\n}\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize != null ? windowSize : 21;\n}\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n  var _super = _createSuper(VirtualizedList);\n  function VirtualizedList(_props) {\n    var _this$props$updateCel;\n    var _this;\n    _classCallCheck(this, VirtualizedList);\n    _this = _super.call(this, _props);\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n      return existingChildData && existingChildData.state;\n    };\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this._isNestedWithSameOrientation()) {\n        return _jsx(View, _objectSpread({}, props));\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) != null ? _props$refreshing : 'undefined') + '`');\n        return _jsx(ScrollView, _objectSpread(_objectSpread({}, props), {}, {\n          refreshControl: props.refreshControl == null ? _jsx(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return _jsx(ScrollView, _objectSpread({}, props));\n      }\n    };\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n      _this.props.onLayout && _this.props.onLayout(e);\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEndReached();\n    };\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        if (_this.props.contentOffset == null) {\n          _this.scrollToIndex({\n            animated: false,\n            index: _this.props.initialScrollIndex\n          });\n        }\n        _this._hasDoneInitialScroll = true;\n      }\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEndReached();\n    };\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this._scrollMetrics.offset;\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n      _this._updateViewableItems(_this.props.data);\n      if (!_this.props) {\n        return;\n      }\n      _this._maybeCallOnEndReached();\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n      _this._computeBlankness();\n      _this._scheduleCellsToRenderUpdate();\n    };\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n      _this._computeBlankness();\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n      _this._scrollMetrics.velocity = 0;\n      _this._computeBlankness();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n    _this._updateCellsToRender = function () {\n      var _this$props = _this.props,\n        data = _this$props.data,\n        getItemCount = _this$props.getItemCount,\n        _onEndReachedThreshold = _this$props.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n      _this._updateViewableItems(data);\n      if (!data) {\n        return;\n      }\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n          contentLength = _this$_scrollMetrics.contentLength,\n          offset = _this$_scrollMetrics.offset,\n          visibleLength = _this$_scrollMetrics.visibleLength;\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props.data, _this.props.getItemCount, maxToRenderPerBatchOrDefault(_this.props.maxToRenderPerBatch), windowSizeOrDefault(_this.props.windowSize), state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(_this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n            if (!childListKeys) {\n              continue;\n            }\n            var someChildHasMore = false;\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n              var childList = _this._nestedChildLists.get(childKey);\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n        return newState;\n      });\n    };\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props2 = _this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this._keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n    _this._getFrameMetrics = function (index) {\n      var _this$props3 = _this.props,\n        data = _this$props3.data,\n        getItem = _this$props3.getItem,\n        getItemCount = _this$props3.getItemCount,\n        getItemLayout = _this$props3.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = item && _this._frames[_this._keyExtractor(item, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    invariant(\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, (_this$props$updateCel = _this.props.updateCellsBatchingPeriod) != null ? _this$props$updateCel : 50);\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props4 = _this.props,\n        onViewableItemsChanged = _this$props4.onViewableItemsChanged,\n        viewabilityConfig = _this$props4.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(_this.props.initialNumToRender)) - 1\n    };\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.getNestedChildState(_this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n    _this.state = initialState;\n    return _this;\n  }\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value:\n    function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      var frame = this._getFrameMetricsApprox(veryLast);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n\n  }, {\n    key: \"scrollToIndex\",\n    value:\n    function scrollToIndex(params) {\n      var _this$props5 = this.props,\n        data = _this$props5.data,\n        horizontal = _this$props5.horizontal,\n        getItemCount = _this$props5.getItemCount,\n        getItemLayout = _this$props5.getItemLayout,\n        onScrollToIndexFailed = _this$props5.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this._getFrameMetricsApprox(index);\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n\n  }, {\n    key: \"scrollToItem\",\n    value:\n    function scrollToItem(params) {\n      var item = params.item;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n\n  }, {\n    key: \"scrollToOffset\",\n    value:\n    function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n\n  }, {\n    key: \"getScrollResponder\",\n    value:\n    function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return ReactNative.findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"_getListKey\",\n    value: function _getListKey() {\n      return this.props.listKey || this._getCellKey();\n    }\n  }, {\n    key: \"_getDebugInfo\",\n    value: function _getDebugInfo() {\n      var _this$context2;\n      return {\n        listKey: this._getListKey(),\n        cellKey: this._getCellKey(),\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n      };\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this._getListKey(),\n          ref: this,\n          parentDebugInfo: this.context.debugInfo\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          key: this._getListKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n      this._updateViewableItems(null);\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n      var _this$props7 = this.props,\n        CellRendererComponent = _this$props7.CellRendererComponent,\n        ItemSeparatorComponent = _this$props7.ItemSeparatorComponent,\n        data = _this$props7.data,\n        getItem = _this$props7.getItem,\n        getItemCount = _this$props7.getItemCount,\n        horizontal = _this$props7.horizontal;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = _this2._keyExtractor(item, ii);\n        _this2._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        cells.push(_jsx(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this2._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this2._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this2._onCellUnmount,\n          parentProps: _this2.props,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          }\n        }, key));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index) {\n      if (this.props.keyExtractor != null) {\n        return this.props.keyExtractor(item, index);\n      }\n      var key = defaultKeyExtractor(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        }\n      }\n      var _this$props8 = this.props,\n        ListEmptyComponent = _this$props8.ListEmptyComponent,\n        ListFooterComponent = _this$props8.ListFooterComponent,\n        ListHeaderComponent = _this$props8.ListHeaderComponent;\n      var _this$props9 = this.props,\n        data = _this$props9.data,\n        horizontal = _this$props9.horizontal;\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : _jsx(ListHeaderComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          children: _jsx(View, {\n            onLayout: this._onLayoutHeader,\n            style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n            children:\n            element\n          })\n        }, \"$header\"));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n        var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(_jsx(View, {\n                  style: _defineProperty({}, spacerKey, leadSpace)\n                }, \"$sticky_lead\"));\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(_jsx(View, {\n                  style: _defineProperty({}, spacerKey, trailSpace)\n                }, \"$sticky_trail\"));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n            cells.push(_jsx(View, {\n              style: _defineProperty({}, spacerKey, firstSpace)\n            }, \"$lead_spacer\"));\n          }\n        }\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n          var endFrame = this._getFrameMetricsApprox(end);\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(_jsx(View, {\n            style: _defineProperty({}, spacerKey, tailSpacerLength)\n          }, \"$tail_spacer\"));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : _jsx(ListEmptyComponent, {});\n        cells.push(React.cloneElement(_element, {\n          key: '$empty',\n          onLayout: function onLayout(event) {\n            _this3._onLayoutEmpty(event);\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : _jsx(ListFooterComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          children: _jsx(View, {\n            onLayout: this._onLayoutFooter,\n            style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n            children:\n            _element2\n          })\n        }, \"$footer\"));\n      }\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n      var innerRet = _jsx(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo()\n        },\n        children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n          ref: this._captureScrollRef\n        }, cells)\n      });\n      var ret = innerRet;\n      if (__DEV__) {\n        ret = _jsx(ScrollView.Context.Consumer, {\n          children: function children(scrollContext) {\n            if (scrollContext != null && !scrollContext.horizontal === !horizontalOrDefault(_this3.props.horizontal) && !_this3._hasWarned.nesting && _this3.context == null) {\n              console.error('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation because it can break windowing and other functionality - use another ' + 'VirtualizedList-backed container instead.');\n              _this3._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }\n        });\n      }\n      if (this.props.debug) {\n        return _jsxs(View, {\n          style: styles.debug,\n          children: [ret, this._renderDebugOverlay()]\n        });\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props10 = this.props,\n        data = _this$props10.data,\n        extraData = _this$props10.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n          var childList = this._nestedChildLists.get(childKey);\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n          var metricsChanged = _this4._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this4._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this4._scrollMetrics.offset = scrollMetrics.offset;\n\n            _this4._cellKeysToChildListKeys.forEach(function (childListKeys) {\n              if (childListKeys) {\n                for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                  var childKey = _step3.value;\n                  var childList = _this4._nestedChildLists.get(childKey);\n                  childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return _jsxs(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        children: [framesInLayout.map(function (f, ii) {\n          return _jsx(View, {\n            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n              top: f.offset * normalize,\n              height: f.length * normalize\n            }]\n          }, 'f' + ii);\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n            top: windowTop * normalize,\n            height: windowLen * normalize\n          }]\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n            top: visTop * normalize,\n            height: visLen * normalize\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props11 = this.props,\n        data = _this$props11.data,\n        getItemCount = _this$props11.getItemCount,\n        onEndReached = _this$props11.onEndReached,\n        onEndReachedThreshold = _this$props11.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      var scrollingThreshold = onEndReachedThreshold * visibleLength / 2;\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this5 = this;\n      var getItemCount = this.props.getItemCount;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, _this5.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch);\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n  return VirtualizedList;\n}(React.PureComponent);\nVirtualizedList.contextType = VirtualizedListContext;\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n  var _super2 = _createSuper(CellRenderer);\n  function CellRenderer() {\n    var _this6;\n    _classCallCheck(this, CellRenderer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this6 = _super2.call.apply(_super2, [this].concat(args));\n    _this6.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this6.props.item\n      }\n    };\n    _this6._separators = {\n      highlight: function highlight() {\n        var _this6$props = _this6.props,\n          cellKey = _this6$props.cellKey,\n          prevCellKey = _this6$props.prevCellKey;\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this6$props2 = _this6.props,\n          cellKey = _this6$props2.cellKey,\n          prevCellKey = _this6$props2.prevCellKey;\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this6$props3 = _this6.props,\n          cellKey = _this6$props3.cellKey,\n          prevCellKey = _this6$props3.prevCellKey;\n        _this6.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this6;\n  }\n  _createClass(CellRenderer, [{\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n      }\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n      invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n        CellRendererComponent = _this$props12.CellRendererComponent,\n        ItemSeparatorComponent = _this$props12.ItemSeparatorComponent,\n        fillRateHelper = _this$props12.fillRateHelper,\n        horizontal = _this$props12.horizontal,\n        item = _this$props12.item,\n        index = _this$props12.index,\n        inversionStyle = _this$props12.inversionStyle,\n        parentProps = _this$props12.parentProps;\n      var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n      var onLayout =\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n      var itemSeparator = ItemSeparatorComponent && _jsx(ItemSeparatorComponent, _objectSpread({}, this.state.separatorProps));\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n      var result = !CellRendererComponent ? _jsxs(View, {\n        style: cellStyle,\n        onLayout: onLayout,\n        children: [element, itemSeparator]\n      }) : _jsxs(CellRendererComponent, _objectSpread(_objectSpread({}, this.props), {}, {\n        style: cellStyle,\n        onLayout: onLayout,\n        children: [element, itemSeparator]\n      }));\n      return _jsx(VirtualizedListCellContextProvider, {\n        cellKey: this.props.cellKey,\n        children: result\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n\n  }]);\n  return CellRenderer;\n}(React.Component);\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"names":["Batchinator","require","FillRateHelper","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","keyExtractor","defaultKeyExtractor","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","props","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","describeNestedLists","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","Map","_frames","_footerLength","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_getFrameMetricsApprox","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","item","_keyExtractor","frame","_getFrameMetrics","getItemLayout","length","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","_getListKey","frames","params","veryLast","scrollTo","warn","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","listKey","_getCellKey","parent","debugInfo","registerAsNestedChild","parentDebugInfo","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","String","type","displayName","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","_getDebugInfo","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","contextType","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","Component","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Lists/VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\nimport {\n  keyExtractor as defaultKeyExtractor,\n  computeWindowedRenderLimits,\n} from './VirtualizeUtils';\n\nimport * as React from 'react';\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n  type ChildListState,\n  type ListDebugInfo,\n} from './VirtualizedListContext.js';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes. Defaults to false.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch?: ?number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod?: ?number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize?: ?number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype State = {\n  first: number,\n  last: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: this.context?.debugInfo,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) +\n            initialNumToRenderOrDefault(this.props.initialNumToRender),\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount} = newProps;\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      newProps.maxToRenderPerBatch,\n    );\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(item: Item, index: number) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, element.props.style),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo(),\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._cellKeysToChildListKeys.forEach(childListKeys => {\n              if (childListKeys) {\n                for (let childKey of childListKeys) {\n                  const childList = this._nestedChildLists.get(childKey);\n                  childList &&\n                    childList.ref &&\n                    childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {data, getItemCount, onEndReached, onEndReachedThreshold} =\n      this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {\n      data,\n      getItemCount,\n      onEndReachedThreshold: _onEndReachedThreshold,\n    } = this.props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      _onEndReachedThreshold,\n    );\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props.data,\n              this.props.getItemCount,\n              maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch),\n              windowSizeOrDefault(this.props.windowSize),\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: this._keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[this._keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n      }\n    }\n    /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.63 was deployed. To see the error\n     * delete this comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<\n    any | {highlighted: boolean, leadingItem: ?Item},\n  >,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n        This comment suppresses an error found when Flow v0.89 was deployed. *\n        To see the error, delete this comment and run Flow. */\n      <View style={cellStyle} onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":";;;;;;;;;;;;;;;AAUA,IAAMA,WAAW,GAAGC,OAAO,8BAA8B;AACzD,IAAMC,cAAc,GAAGD,OAAO,oBAAoB;AAClD,IAAME,WAAW,GAAGF,OAAO,iCAAiC;AAC5D,IAAMG,cAAc,GAAGH,OAAO,+CAA+C;AAC7E,IAAMI,UAAU,GAAGJ,OAAO,uCAAuC;AACjE,IAAMK,UAAU,GAAGL,OAAO,4BAA4B;AACtD,IAAMM,IAAI,GAAGN,OAAO,2BAA2B;AAC/C,IAAMO,iBAAiB,GAAGP,OAAO,uBAAuB;AAExD,IAAMQ,YAAY,GAAGR,OAAO,8BAA8B;AAC1D,IAAMS,OAAO,GAAGT,OAAO,wBAAwB;AAC/C,IAAMU,SAAS,GAAGV,OAAO,CAAC,WAAW,CAAC;AAEtC,SACEW,YAAY,IAAIC,mBAAmB,EACnCC,2BAA2B;AAG7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAQ9B,SACEC,kCAAkC,EAClCC,sBAAsB,EACtBC,8BAA8B;AAGK;AAAA;AAyQrC,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,IAAIC,yBAAiC,GAAG,EAAE;;AAa1C,SAASC,mBAAmB,CAACC,UAAoB,EAAE;EACjD,OAAOA,UAAU,WAAVA,UAAU,GAAI,KAAK;AAC5B;;AAGA,SAASC,2BAA2B,CAACC,kBAA2B,EAAE;EAChE,OAAOA,kBAAkB,WAAlBA,kBAAkB,GAAI,EAAE;AACjC;;AAGA,SAASC,4BAA4B,CAACC,mBAA4B,EAAE;EAClE,OAAOA,mBAAmB,WAAnBA,mBAAmB,GAAI,EAAE;AAClC;;AAGA,SAASC,8BAA8B,CAACC,qBAA8B,EAAE;EACtE,OAAOA,qBAAqB,WAArBA,qBAAqB,GAAI,CAAC;AACnC;;AAGA,SAASC,4BAA4B,CAACC,mBAA4B,EAAE;EAClE,OAAOA,mBAAmB,WAAnBA,mBAAmB,GAAI,EAAE;AAClC;;AAGA,SAASC,mBAAmB,CAACC,UAAmB,EAAE;EAChD,OAAOA,UAAU,WAAVA,UAAU,GAAI,EAAE;AACzB;;AAAC,IA+BKC,eAAe;EAAA;EAAA;EA4SnB,yBAAYC,MAAY,EAAE;IAAA;IAAA;IAAA;IACxB,0BAAMA,MAAK;IAAE,MAvEfC,iBAAiB,GAAG,YAAM;MACxB,OAAO,MAAKC,cAAc;IAC5B,CAAC;IAAA,MAMDC,0BAA0B,GAAG,YAAM;MACjC,IAAI,MAAKC,4BAA4B,EAAE,EAAE;QACvC,OAAO,MAAKC,OAAO,CAACC,yBAAyB,EAAE;MACjD,CAAC,MAAM;QACL;MACF;IACF,CAAC;IAAA,MAEDC,oBAAoB,GAAG,UAACC,GAAW,EAAsB;MACvD,IAAMC,iBAAiB,GAAG,MAAKC,iBAAiB,CAACC,GAAG,CAACH,GAAG,CAAC;MACzD,OAAOC,iBAAiB,IAAIA,iBAAiB,CAACG,KAAK;IACrD,CAAC;IAAA,MAEDC,sBAAsB,GAAG,UAACC,SAMzB,EAAsB;MAErB,IAAMC,gBAAgB,GACpB,MAAKC,wBAAwB,CAACL,GAAG,CAACG,SAAS,CAACG,OAAO,CAAC,IAAI,IAAIC,GAAG,EAAE;MACnEH,gBAAgB,CAACI,GAAG,CAACL,SAAS,CAACN,GAAG,CAAC;MACnC,MAAKQ,wBAAwB,CAACI,GAAG,CAACN,SAAS,CAACG,OAAO,EAAEF,gBAAgB,CAAC;MACtE,IAAMN,iBAAiB,GAAG,MAAKC,iBAAiB,CAACC,GAAG,CAACG,SAAS,CAACN,GAAG,CAAC;MACnE,IAAIC,iBAAiB,IAAIA,iBAAiB,CAACY,GAAG,KAAK,IAAI,EAAE;QACvDC,OAAO,CAACC,KAAK,CACX,0DAA0D,GACxD,sEAAsE,GACtE,qEAAqE,GACrEC,mBAAmB,iCACdV,SAAS;UAGZ1B,UAAU,EAAE,CAAC,CAAC0B,SAAS,CAACO,GAAG,CAACrB,KAAK,CAACZ;QAAU,GAC5C,CACL;MACH;MACA,MAAKsB,iBAAiB,CAACU,GAAG,CAACN,SAAS,CAACN,GAAG,EAAE;QACxCa,GAAG,EAAEP,SAAS,CAACO,GAAG;QAClBT,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,IAAI,MAAKa,cAAc,EAAE;QACvBX,SAAS,CAACO,GAAG,CAACK,iBAAiB,EAAE;MACnC;IACF,CAAC;IAAA,MAEDC,wBAAwB,GAAG,UAACb,SAI3B,EAAW;MACV,MAAKJ,iBAAiB,CAACU,GAAG,CAACN,SAAS,CAACN,GAAG,EAAE;QACxCa,GAAG,EAAE,IAAI;QACTT,KAAK,EAAEE,SAAS,CAACF;MACnB,CAAC,CAAC;IACJ,CAAC;IAAA,MAoKDgB,mBAAmB,GAAG,UAACC,IAAoB,EAAEC,QAAgB,EAAK;MAChED,IAAI,CAACE,OAAO,CAAC,UAAAvB,GAAG,EAAI;QAClB,IAAMa,GAAG,GAAGb,GAAG,IAAI,IAAI,IAAI,MAAKwB,SAAS,CAACxB,GAAG,CAAC;QAC9Ca,GAAG,IAAIA,GAAG,CAACY,oBAAoB,CAACH,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC;IAAA,MAcDI,aAAa,GAAG,UAACC,UAAmB;MAAA,OAClCA,UAAU,GAAG,QAAQ,GAAG,OAAO;IAAA;IAAA,MAmUjCC,kBAAkB,GAAG,CAAC;IAAA,MAEtBpB,wBAAwB,GAA6B,IAAIqB,GAAG,EAAE;IAAA,MAC9DL,SAAS,GAAG,CAAC,CAAC;IAAA,MAEdM,OAAO,GAAG,CAAC,CAAC;IAAA,MACZC,aAAa,GAAG,CAAC;IAAA,MACjBC,qBAAqB,GAAG,KAAK;IAAA,MAC7Bf,cAAc,GAAG,KAAK;IAAA,MACtBgB,QAAQ,GAAG,KAAK;IAAA,MAChBC,UAAU,GAAG,CAAC,CAAC;IAAA,MACfC,aAAa,GAAG,CAAC;IAAA,MACjBC,gBAAgB,GAAY,KAAK;IAAA,MACjCC,0BAA0B,GAAG,CAAC;IAAA,MAC9BC,cAAc,GAAwB,IAAIT,GAAG,EAAE;IAAA,MAC/C3B,iBAAiB,GAOb,IAAI2B,GAAG,EAAE;IAAA,MACbU,gCAAgC,GAAW,CAAC;IAAA,MAC5CC,iBAAiB,GAAW,CAAC;IAAA,MAC7B9C,cAAc,GAAG;MACf+C,aAAa,EAAE,CAAC;MAChBC,OAAO,EAAE,CAAC;MACVC,EAAE,EAAE,EAAE;MACNC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXC,aAAa,EAAE;IACjB,CAAC;IAAA,MACDC,UAAU,GAA2B,IAAI;IAAA,MACzCC,wBAAwB,GAAG,CAAC;IAAA,MAC5BC,gBAAgB,GAAG,CAAC;IAAA,MACpBC,mBAAmB,GAAG,CAAC;IAAA,MAEvBC,kBAAkB,GAA0C,EAAE;IAAA,MAE9DC,iBAAiB,GAAG,UAAAxC,GAAG,EAAI;MACzB,MAAKmC,UAAU,GAAGnC,GAAG;IACvB,CAAC;IAAA,MAUDyC,6BAA6B,GAAG,UAAA9D,KAAK,EAAI;MACvC,IAAM+D,SAAS,GAAG/D,KAAK,CAAC+D,SAAS;MACjC,IAAI,MAAK3D,4BAA4B,EAAE,EAAE;QAEvC,OAAO,KAAC,IAAI,oBAAKJ,KAAK,EAAI;MAC5B,CAAC,MAAM,IAAI+D,SAAS,EAAE;QAAA;QACpBtF,SAAS,CACP,OAAOuB,KAAK,CAACgE,UAAU,KAAK,SAAS,EACrC,mFAAmF,GACjFC,IAAI,CAACC,SAAS,sBAAClE,KAAK,CAACgE,UAAU,gCAAI,WAAW,CAAC,GAC/C,GAAG,CACN;QACD,OAEE,KAAC,UAAU,kCACLhE,KAAK;UACT,cAAc,EACZA,KAAK,CAACmE,cAAc,IAAI,IAAI,GAC1B,KAAC,cAAc;YACb,UAAU,EAAEnE,KAAK,CAACgE,UAAW;YAC7B,SAAS,EAAED,SAAU;YACrB,kBAAkB,EAAE/D,KAAK,CAACoE;UAAmB,EAC7C,GAEFpE,KAAK,CAACmE;QAET,GACD;MAEN,CAAC,MAAM;QAEL,OAAO,KAAC,UAAU,oBAAKnE,KAAK,EAAI;MAClC;IACF,CAAC;IAAA,MAqCDqE,cAAc,GAAG,UAACpD,OAAe,EAAK;MACpC,IAAMqD,IAAI,GAAG,MAAKhC,OAAO,CAACrB,OAAO,CAAC;MAClC,IAAIqD,IAAI,EAAE;QACR,MAAKhC,OAAO,CAACrB,OAAO,CAAC,mCAAOqD,IAAI;UAAEC,QAAQ,EAAE;QAAK,EAAC;MACpD;IACF,CAAC;IAAA,MAwEDC,SAAS,GAAG,UAACC,CAAS,EAAK;MACzB,IAAI,MAAKrE,4BAA4B,EAAE,EAAE;QAGvC,MAAKsE,qCAAqC,EAAE;MAC9C,CAAC,MAAM;QACL,MAAKxE,cAAc,CAACqD,aAAa,GAAG,MAAKoB,aAAa,CACpDF,CAAC,CAACG,WAAW,CAACC,MAAM,CACrB;MACH;MACA,MAAK7E,KAAK,CAAC8E,QAAQ,IAAI,MAAK9E,KAAK,CAAC8E,QAAQ,CAACL,CAAC,CAAC;MAC7C,MAAKM,4BAA4B,EAAE;MACnC,MAAKC,sBAAsB,EAAE;IAC/B,CAAC;IAAA,MAEDC,cAAc,GAAG,UAAAR,CAAC,EAAI;MACpB,MAAKzE,KAAK,CAAC8E,QAAQ,IAAI,MAAK9E,KAAK,CAAC8E,QAAQ,CAACL,CAAC,CAAC;IAC/C,CAAC;IAAA,MAMDS,eAAe,GAAG,UAAAT,CAAC,EAAI;MACrB,MAAKU,oCAAoC,CAAC,MAAKC,iBAAiB,EAAE,CAAC;MACnE,MAAK7C,aAAa,GAAG,MAAKoC,aAAa,CAACF,CAAC,CAACG,WAAW,CAACC,MAAM,CAAC;IAC/D,CAAC;IAAA,MAEDQ,eAAe,GAAG,UAAAZ,CAAC,EAAI;MACrB,MAAK9B,aAAa,GAAG,MAAKgC,aAAa,CAACF,CAAC,CAACG,WAAW,CAACC,MAAM,CAAC;IAC/D,CAAC;IAAA,MA2GDS,oBAAoB,GAAG,UAACC,KAAa,EAAEC,MAAc,EAAK;MACxD,IACED,KAAK,GAAG,CAAC,IACTC,MAAM,GAAG,CAAC,IACV,MAAKxF,KAAK,CAACyF,kBAAkB,IAAI,IAAI,IACrC,MAAKzF,KAAK,CAACyF,kBAAkB,GAAG,CAAC,IACjC,CAAC,MAAKjD,qBAAqB,EAC3B;QACA,IAAI,MAAKxC,KAAK,CAAC0F,aAAa,IAAI,IAAI,EAAE;UACpC,MAAKC,aAAa,CAAC;YACjBC,QAAQ,EAAE,KAAK;YACfC,KAAK,EAAE,MAAK7F,KAAK,CAACyF;UACpB,CAAC,CAAC;QACJ;QACA,MAAKjD,qBAAqB,GAAG,IAAI;MACnC;MACA,IAAI,MAAKxC,KAAK,CAAC8F,mBAAmB,EAAE;QAClC,MAAK9F,KAAK,CAAC8F,mBAAmB,CAACP,KAAK,EAAEC,MAAM,CAAC;MAC/C;MACA,MAAKtF,cAAc,CAAC+C,aAAa,GAAG,MAAK0B,aAAa,CAAC;QAACa,MAAM,EAANA,MAAM;QAAED,KAAK,EAALA;MAAK,CAAC,CAAC;MACvE,MAAKR,4BAA4B,EAAE;MACnC,MAAKC,sBAAsB,EAAE;IAC/B,CAAC;IAAA,MAKDe,2BAA2B,GAAG,UAACC,OAI9B,EAAK;MAEJ,IAAM5C,MAAM,GAAG4C,OAAO,CAAC5C,MAAM,GAAG,MAAKL,gCAAgC;MAErE,IAAMQ,aAAa,GAAGyC,OAAO,CAACzC,aAAa;MAC3C,IAAML,OAAO,GAAGE,MAAM,GAAG,MAAKlD,cAAc,CAACkD,MAAM;MACnD,IAAMH,aAAa,GAAG,MAAK/C,cAAc,CAAC+C,aAAa;MAEvD,OAAO;QACLM,aAAa,EAAbA,aAAa;QACbN,aAAa,EAAbA,aAAa;QACbG,MAAM,EAANA,MAAM;QACNF,OAAO,EAAPA;MACF,CAAC;IACH,CAAC;IAAA,MAED+C,SAAS,GAAG,UAACxB,CAAS,EAAK;MACzB,MAAK/D,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAAC4E,SAAS,CAACxB,CAAC,CAAC;MAC7C,CAAC,CAAC;MACF,IAAI,MAAKzE,KAAK,CAACkG,QAAQ,EAAE;QACvB,MAAKlG,KAAK,CAACkG,QAAQ,CAACzB,CAAC,CAAC;MACxB;MACA,IAAMpB,SAAS,GAAGoB,CAAC,CAAC0B,SAAS;MAC7B,IAAI5C,aAAa,GAAG,MAAKoB,aAAa,CAACF,CAAC,CAACG,WAAW,CAACwB,iBAAiB,CAAC;MACvE,IAAInD,aAAa,GAAG,MAAK0B,aAAa,CAACF,CAAC,CAACG,WAAW,CAACyB,WAAW,CAAC;MACjE,IAAIjD,MAAM,GAAG,MAAKkD,aAAa,CAAC7B,CAAC,CAACG,WAAW,CAACc,aAAa,CAAC;MAC5D,IAAIxC,OAAO,GAAGE,MAAM,GAAG,MAAKlD,cAAc,CAACkD,MAAM;MAEjD,IAAI,MAAKhD,4BAA4B,EAAE,EAAE;QACvC,IAAI,MAAKF,cAAc,CAAC+C,aAAa,KAAK,CAAC,EAAE;UAG3C;QACF;QAAC,4BAEC,MAAK8C,2BAA2B,CAAC;UAC/BxC,aAAa,EAAbA,aAAa;UACbH,MAAM,EAANA;QACF,CAAC,CAAC;QAJFG,aAAa,yBAAbA,aAAa;QAAEN,aAAa,yBAAbA,aAAa;QAAEG,MAAM,yBAANA,MAAM;QAAEF,OAAO,yBAAPA,OAAO;MAKjD;MAEA,IAAMC,EAAE,GAAG,MAAKjD,cAAc,CAACmD,SAAS,GACpCkD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEnD,SAAS,GAAG,MAAKnD,cAAc,CAACmD,SAAS,CAAC,GACtD,CAAC;MACL,IAAMC,QAAQ,GAAGJ,OAAO,GAAGC,EAAE;MAE7B,IACEA,EAAE,GAAG,GAAG,IACR,MAAKjD,cAAc,CAACiD,EAAE,GAAG,GAAG,IAC5BF,aAAa,GAAG,CAAC,GAAGM,aAAa,IACjC,CAAC,MAAKb,UAAU,CAAC+D,IAAI,EACrB;QACAjI,OAAO,CACL,iFAAiF,GAC/E,sFAAsF,GACtF,iDAAiD,EACnD;UAAC2E,EAAE,EAAFA,EAAE;UAAEuD,MAAM,EAAE,MAAKxG,cAAc,CAACiD,EAAE;UAAEF,aAAa,EAAbA;QAAa,CAAC,CACpD;QACD,MAAKP,UAAU,CAAC+D,IAAI,GAAG,IAAI;MAC7B;MACA,MAAKvG,cAAc,GAAG;QACpB+C,aAAa,EAAbA,aAAa;QACbE,EAAE,EAAFA,EAAE;QACFD,OAAO,EAAPA,OAAO;QACPE,MAAM,EAANA,MAAM;QACNC,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACRC,aAAa,EAAbA;MACF,CAAC;MACD,MAAKoD,oBAAoB,CAAC,MAAK3G,KAAK,CAAC4G,IAAI,CAAC;MAC1C,IAAI,CAAC,MAAK5G,KAAK,EAAE;QACf;MACF;MACA,MAAKgF,sBAAsB,EAAE;MAC7B,IAAI1B,QAAQ,KAAK,CAAC,EAAE;QAClB,MAAKuD,eAAe,CAACC,QAAQ,EAAE;MACjC;MACA,MAAKC,iBAAiB,EAAE;MACxB,MAAKhC,4BAA4B,EAAE;IACrC,CAAC;IAAA,MAmDDiC,kBAAkB,GAAG,UAACvC,CAAC,EAAW;MAChC,MAAK/D,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAAC2F,kBAAkB,CAACvC,CAAC,CAAC;MACtD,CAAC,CAAC;MACF,MAAKb,kBAAkB,CAAC7B,OAAO,CAAC,UAAAkF,KAAK,EAAI;QACvCA,KAAK,CAACC,iBAAiB,CAACxF,iBAAiB,EAAE;MAC7C,CAAC,CAAC;MACF,MAAKD,cAAc,GAAG,IAAI;MAC1B,MAAKzB,KAAK,CAACmH,iBAAiB,IAAI,MAAKnH,KAAK,CAACmH,iBAAiB,CAAC1C,CAAC,CAAC;IACjE,CAAC;IAAA,MAED2C,gBAAgB,GAAG,UAAC3C,CAAC,EAAW;MAC9B,MAAK/D,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAAC+F,gBAAgB,CAAC3C,CAAC,CAAC;MACpD,CAAC,CAAC;MACF,IAAOnB,QAAQ,GAAImB,CAAC,CAACG,WAAW,CAAzBtB,QAAQ;MACf,IAAIA,QAAQ,EAAE;QACZ,MAAKpD,cAAc,CAACoD,QAAQ,GAAG,MAAKgD,aAAa,CAAChD,QAAQ,CAAC;MAC7D;MACA,MAAKyD,iBAAiB,EAAE;MACxB,MAAK/G,KAAK,CAACqH,eAAe,IAAI,MAAKrH,KAAK,CAACqH,eAAe,CAAC5C,CAAC,CAAC;IAC7D,CAAC;IAAA,MAED6C,sBAAsB,GAAG,UAAC7C,CAAC,EAAW;MACpC,MAAK/D,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAACiG,sBAAsB,CAAC7C,CAAC,CAAC;MAC1D,CAAC,CAAC;MACF,MAAKzE,KAAK,CAACuH,qBAAqB,IAAI,MAAKvH,KAAK,CAACuH,qBAAqB,CAAC9C,CAAC,CAAC;IACzE,CAAC;IAAA,MAED+C,oBAAoB,GAAG,UAAC/C,CAAC,EAAW;MAClC,MAAK/D,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAACmG,oBAAoB,CAAC/C,CAAC,CAAC;MACxD,CAAC,CAAC;MACF,MAAKvE,cAAc,CAACoD,QAAQ,GAAG,CAAC;MAChC,MAAKyD,iBAAiB,EAAE;MACxB,MAAK/G,KAAK,CAACyH,mBAAmB,IAAI,MAAKzH,KAAK,CAACyH,mBAAmB,CAAChD,CAAC,CAAC;IACrE,CAAC;IAAA,MAEDiD,oBAAoB,GAAG,YAAM;MAC3B,kBAII,MAAK1H,KAAK;QAHZ4G,IAAI,eAAJA,IAAI;QACJe,YAAY,eAAZA,YAAY;QACWC,sBAAsB,eAA7ClI,qBAAqB;MAEvB,IAAMA,qBAAqB,GAAGD,8BAA8B,CAC1DmI,sBAAsB,CACvB;MACD,IAAMC,wBAAwB,GAAG,MAAKC,yBAAyB,EAAE;MACjE,MAAKnB,oBAAoB,CAACC,IAAI,CAAC;MAC/B,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MACA,MAAKmB,QAAQ,CAAC,UAAAnH,KAAK,EAAI;QACrB,IAAIoH,QAAQ;QACZ,2BAA+C,MAAK9H,cAAc;UAA3D+C,aAAa,wBAAbA,aAAa;UAAEG,MAAM,wBAANA,MAAM;UAAEG,aAAa,wBAAbA,aAAa;QAC3C,IAAI,CAACsE,wBAAwB,EAAE;UAK7B,IAAItE,aAAa,GAAG,CAAC,IAAIN,aAAa,GAAG,CAAC,EAAE;YAK1C,IAAI,CAAC,MAAKjD,KAAK,CAACyF,kBAAkB,IAAI,MAAKvF,cAAc,CAACkD,MAAM,EAAE;cAChE4E,QAAQ,GAAGpJ,2BAA2B,CACpC,MAAKoB,KAAK,CAAC4G,IAAI,EACf,MAAK5G,KAAK,CAAC2H,YAAY,EACvBpI,4BAA4B,CAAC,MAAKS,KAAK,CAACR,mBAAmB,CAAC,EAC5DK,mBAAmB,CAAC,MAAKG,KAAK,CAACF,UAAU,CAAC,EAC1Cc,KAAK,EACL,MAAKqH,sBAAsB,EAC3B,MAAK/H,cAAc,CACpB;YACH;UACF;QACF,CAAC,MAAM;UACL,IAAMgI,eAAe,GAAGjF,aAAa,GAAGM,aAAa,GAAGH,MAAM;UAC9D,IAAM+E,WAAW,GACfD,eAAe,GAAGxI,qBAAqB,GAAG6D,aAAa,GACnDhE,4BAA4B,CAAC,MAAKS,KAAK,CAACR,mBAAmB,CAAC,GAC5D,CAAC;UACPwI,QAAQ,GAAG;YACTI,KAAK,EAAE,CAAC;YACRC,IAAI,EAAE9B,IAAI,CAAC+B,GAAG,CAAC1H,KAAK,CAACyH,IAAI,GAAGF,WAAW,EAAER,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC;UACjE,CAAC;QACH;QACA,IAAIoB,QAAQ,IAAI,MAAKtH,iBAAiB,CAAC6H,IAAI,GAAG,CAAC,EAAE;UAC/C,IAAMC,QAAQ,GAAGR,QAAQ,CAACI,KAAK;UAC/B,IAAMK,OAAO,GAAGT,QAAQ,CAACK,IAAI;UAK7B,KAAK,IAAIK,EAAE,GAAGF,QAAQ,EAAEE,EAAE,IAAID,OAAO,EAAEC,EAAE,EAAE,EAAE;YAC3C,IAAMC,eAAe,GAAG,MAAK7F,cAAc,CAACnC,GAAG,CAAC+H,EAAE,CAAC;YACnD,IAAME,aAAa,GACjBD,eAAe,IACf,MAAK3H,wBAAwB,CAACL,GAAG,CAACgI,eAAe,CAAC;YACpD,IAAI,CAACC,aAAa,EAAE;cAClB;YACF;YACA,IAAIC,gBAAgB,GAAG,KAAK;YAE5B,qDAAqBD,aAAa,wCAAE;cAAA,IAA3BE,QAAQ;cACf,IAAMhI,SAAS,GAAG,MAAKJ,iBAAiB,CAACC,GAAG,CAACmI,QAAQ,CAAC;cACtD,IAAIhI,SAAS,IAAIA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAAC0H,OAAO,EAAE,EAAE;gBACzDF,gBAAgB,GAAG,IAAI;gBACvB;cACF;YACF;YACA,IAAIA,gBAAgB,EAAE;cACpBb,QAAQ,CAACK,IAAI,GAAGK,EAAE;cAClB;YACF;UACF;QACF;QACA,IACEV,QAAQ,IAAI,IAAI,IAChBA,QAAQ,CAACI,KAAK,KAAKxH,KAAK,CAACwH,KAAK,IAC9BJ,QAAQ,CAACK,IAAI,KAAKzH,KAAK,CAACyH,IAAI,EAC5B;UACAL,QAAQ,GAAG,IAAI;QACjB;QACA,OAAOA,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC;IAAA,MAEDgB,gBAAgB,GAAG,UAACnD,KAAa,EAAEoD,UAAmB,EAAK;MACzD,mBAAwB,MAAKjJ,KAAK;QAA3B4G,IAAI,gBAAJA,IAAI;QAAEsC,OAAO,gBAAPA,OAAO;MACpB,IAAMC,IAAI,GAAGD,OAAO,CAACtC,IAAI,EAAEf,KAAK,CAAC;MACjC,OAAO;QAACA,KAAK,EAALA,KAAK;QAAEsD,IAAI,EAAJA,IAAI;QAAE3I,GAAG,EAAE,MAAK4I,aAAa,CAACD,IAAI,EAAEtD,KAAK,CAAC;QAAEoD,UAAU,EAAVA;MAAU,CAAC;IACxE,CAAC;IAAA,MAEDhB,sBAAsB,GAAG,UACvBpC,KAAa,EAKV;MACH,IAAMwD,KAAK,GAAG,MAAKC,gBAAgB,CAACzD,KAAK,CAAC;MAC1C,IAAIwD,KAAK,IAAIA,KAAK,CAACxD,KAAK,KAAKA,KAAK,EAAE;QAElC,OAAOwD,KAAK;MACd,CAAC,MAAM;QACL,IAAOE,aAAa,GAAI,MAAKvJ,KAAK,CAA3BuJ,aAAa;QACpB9K,SAAS,CACP,CAAC8K,aAAa,EACd,oFAAoF,CACrF;QACD,OAAO;UACLC,MAAM,EAAE,MAAKpH,kBAAkB;UAC/BgB,MAAM,EAAE,MAAKhB,kBAAkB,GAAGyD;QACpC,CAAC;MACH;IACF,CAAC;IAAA,MAEDyD,gBAAgB,GAAG,UACjBzD,KAAa,EAOV;MACH,mBAAqD,MAAK7F,KAAK;QAAxD4G,IAAI,gBAAJA,IAAI;QAAEsC,OAAO,gBAAPA,OAAO;QAAEvB,YAAY,gBAAZA,YAAY;QAAE4B,aAAa,gBAAbA,aAAa;MACjD9K,SAAS,CACPkJ,YAAY,CAACf,IAAI,CAAC,GAAGf,KAAK,EAC1B,4CAA4C,GAAGA,KAAK,CACrD;MACD,IAAMsD,IAAI,GAAGD,OAAO,CAACtC,IAAI,EAAEf,KAAK,CAAC;MACjC,IAAIwD,KAAK,GAAGF,IAAI,IAAI,MAAK7G,OAAO,CAAC,MAAK8G,aAAa,CAACD,IAAI,EAAEtD,KAAK,CAAC,CAAC;MACjE,IAAI,CAACwD,KAAK,IAAIA,KAAK,CAACxD,KAAK,KAAKA,KAAK,EAAE;QACnC,IAAI0D,aAAa,EAAE;UACjBF,KAAK,GAAGE,aAAa,CAAC3C,IAAI,EAAEf,KAAK,CAAC;QACpC;MACF;MAIA,OAAOwD,KAAK;IACd,CAAC;IAjqCC5K,SAAS;IAEP,CAACuB,MAAK,CAACkG,QAAQ,IAAI,CAAClG,MAAK,CAACkG,QAAQ,CAACuD,UAAU,EAC7C,4FAA4F,GAC1F,wDAAwD,CAC3D;IACDhL,SAAS,CACPoB,mBAAmB,CAACG,MAAK,CAACF,UAAU,CAAC,GAAG,CAAC,EACzC,yFAAyF,CAC1F;IAED,MAAK+G,eAAe,GAAG,IAAI7I,cAAc,CAAC,MAAKsL,gBAAgB,CAAC;IAChE,MAAKI,2BAA2B,GAAG,IAAI5L,WAAW,CAChD,MAAK4J,oBAAoB,2BACzB,MAAK1H,KAAK,CAAC2J,yBAAyB,oCAAI,EAAE,CAC3C;IAED,IAAI,MAAK3J,KAAK,CAAC4J,8BAA8B,EAAE;MAC7C,MAAKhG,kBAAkB,GAAG,MAAK5D,KAAK,CAAC4J,8BAA8B,CAACC,GAAG,CACrE,UAAAC,IAAI;QAAA,OAAK;UACP5C,iBAAiB,EAAE,IAAI5I,iBAAiB,CAACwL,IAAI,CAACC,iBAAiB,CAAC;UAChEC,sBAAsB,EAAEF,IAAI,CAACE;QAC/B,CAAC;MAAA,CAAC,CACH;IACH,CAAC,MAAM;MACL,mBAAoD,MAAKhK,KAAK;QAAvDgK,sBAAsB,gBAAtBA,sBAAsB;QAAED,iBAAiB,gBAAjBA,iBAAiB;MAChD,IAAIC,sBAAsB,EAAE;QAC1B,MAAKpG,kBAAkB,CAACqG,IAAI,CAAC;UAC3B/C,iBAAiB,EAAE,IAAI5I,iBAAiB,CAACyL,iBAAiB,CAAC;UAC3DC,sBAAsB,EAAEA;QAC1B,CAAC,CAAC;MACJ;IACF;IAEA,IAAIE,YAAY,GAAG;MACjB9B,KAAK,EAAE,MAAKpI,KAAK,CAACyF,kBAAkB,IAAI,CAAC;MACzC4C,IAAI,EACF9B,IAAI,CAAC+B,GAAG,CACN,MAAKtI,KAAK,CAAC2H,YAAY,CAAC,MAAK3H,KAAK,CAAC4G,IAAI,CAAC,EACxC,CAAC,MAAK5G,KAAK,CAACyF,kBAAkB,IAAI,CAAC,IACjCpG,2BAA2B,CAAC,MAAKW,KAAK,CAACV,kBAAkB,CAAC,CAC7D,GAAG;IACR,CAAC;IAED,IAAI,MAAKc,4BAA4B,EAAE,EAAE;MACvC,IAAM+J,WAAW,GAAG,MAAK9J,OAAO,CAAC+J,mBAAmB,CAAC,MAAKC,WAAW,EAAE,CAAC;MACxE,IAAIF,WAAW,EAAE;QACfD,YAAY,GAAGC,WAAW;QAC1B,MAAKvJ,KAAK,GAAGuJ,WAAW;QACxB,MAAK7H,OAAO,GAAG6H,WAAW,CAACG,MAAM;MACnC;IACF;IAEA,MAAK1J,KAAK,GAAGsJ,YAAY;IAAC;EAC5B;EAAC;IAAA;IAAA;IAhWD,qBAAYK,MAAoC,EAAE;MAChD,IAAM3E,QAAQ,GAAG2E,MAAM,GAAGA,MAAM,CAAC3E,QAAQ,GAAG,IAAI;MAChD,IAAM4E,QAAQ,GAAG,IAAI,CAACxK,KAAK,CAAC2H,YAAY,CAAC,IAAI,CAAC3H,KAAK,CAAC4G,IAAI,CAAC,GAAG,CAAC;MAC7D,IAAMyC,KAAK,GAAG,IAAI,CAACpB,sBAAsB,CAACuC,QAAQ,CAAC;MACnD,IAAMpH,MAAM,GAAGmD,IAAI,CAACC,GAAG,CACrB,CAAC,EACD6C,KAAK,CAACjG,MAAM,GACViG,KAAK,CAACG,MAAM,GACZ,IAAI,CAACjH,aAAa,GAClB,IAAI,CAACrC,cAAc,CAACqD,aAAa,CACpC;MAED,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,EAAE;QAC3B;MACF;MAEA,IAAI,IAAI,CAACA,UAAU,CAACiH,QAAQ,IAAI,IAAI,EAAE;QACpCnJ,OAAO,CAACoJ,IAAI,CACV,uEAAuE,GACrE,iEAAiE,GACjE,4DAA4D,CAC/D;QACD;MACF;MAEA,IAAI,CAAClH,UAAU,CAACiH,QAAQ,CACtBtL,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,GACtC;QAACuL,CAAC,EAAEvH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,GACrB;QAACgF,CAAC,EAAExH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,CAC1B;IACH;;EAAC;IAAA;IAAA;IAGD,uBAAc2E,MAMb,EAAE;MACD,mBAMI,IAAI,CAACvK,KAAK;QALZ4G,IAAI,gBAAJA,IAAI;QACJxH,UAAU,gBAAVA,UAAU;QACVuI,YAAY,gBAAZA,YAAY;QACZ4B,aAAa,gBAAbA,aAAa;QACbsB,qBAAqB,gBAArBA,qBAAqB;MAEvB,IAAOjF,QAAQ,GAAqC2E,MAAM,CAAnD3E,QAAQ;QAAEC,KAAK,GAA8B0E,MAAM,CAAzC1E,KAAK;QAAEiF,UAAU,GAAkBP,MAAM,CAAlCO,UAAU;QAAEC,YAAY,GAAIR,MAAM,CAAtBQ,YAAY;MAChDtM,SAAS,CACPoH,KAAK,IAAI,CAAC,mDACqCA,KAAK,uBACrD;MACDpH,SAAS,CACPkJ,YAAY,CAACf,IAAI,CAAC,IAAI,CAAC,+CACoBe,YAAY,CACrDf,IAAI,CACL,uBACF;MACDnI,SAAS,CACPoH,KAAK,GAAG8B,YAAY,CAACf,IAAI,CAAC,mDACqBf,KAAK,yBAClD8B,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC,EAEzB;MACD,IAAI,CAAC2C,aAAa,IAAI1D,KAAK,GAAG,IAAI,CAAChD,0BAA0B,EAAE;QAC7DpE,SAAS,CACP,CAAC,CAACoM,qBAAqB,EACvB,2FAA2F,GACzF,yFAAyF,CAC5F;QACDA,qBAAqB,CAAC;UACpBG,iBAAiB,EAAE,IAAI,CAAC5I,kBAAkB;UAC1C6I,yBAAyB,EAAE,IAAI,CAACpI,0BAA0B;UAC1DgD,KAAK,EAALA;QACF,CAAC,CAAC;QACF;MACF;MACA,IAAMwD,KAAK,GAAG,IAAI,CAACpB,sBAAsB,CAACpC,KAAK,CAAC;MAChD,IAAMzC,MAAM,GACVmD,IAAI,CAACC,GAAG,CACN,CAAC,EACD6C,KAAK,CAACjG,MAAM,GACV,CAAC2H,YAAY,IAAI,CAAC,KACf,IAAI,CAAC7K,cAAc,CAACqD,aAAa,GAAG8F,KAAK,CAACG,MAAM,CAAC,CACvD,IAAIsB,UAAU,IAAI,CAAC,CAAC;MAEvB,IAAI,IAAI,CAACtH,UAAU,IAAI,IAAI,EAAE;QAC3B;MACF;MAEA,IAAI,IAAI,CAACA,UAAU,CAACiH,QAAQ,IAAI,IAAI,EAAE;QACpCnJ,OAAO,CAACoJ,IAAI,CACV,uEAAuE,GACrE,iEAAiE,GACjE,4DAA4D,CAC/D;QACD;MACF;MAEA,IAAI,CAAClH,UAAU,CAACiH,QAAQ,CACtBrL,UAAU,GAAG;QAACuL,CAAC,EAAEvH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,GAAG;QAACgF,CAAC,EAAExH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,CAC3D;IACH;;EAAC;IAAA;IAAA;IAID,sBAAa2E,MAKZ,EAAE;MACD,IAAOpB,IAAI,GAAIoB,MAAM,CAAdpB,IAAI;MACX,mBAAsC,IAAI,CAACnJ,KAAK;QAAzC4G,IAAI,gBAAJA,IAAI;QAAEsC,OAAO,gBAAPA,OAAO;QAAEvB,YAAY,gBAAZA,YAAY;MAClC,IAAMuD,SAAS,GAAGvD,YAAY,CAACf,IAAI,CAAC;MACpC,KAAK,IAAIf,MAAK,GAAG,CAAC,EAAEA,MAAK,GAAGqF,SAAS,EAAErF,MAAK,EAAE,EAAE;QAC9C,IAAIqD,OAAO,CAACtC,IAAI,EAAEf,MAAK,CAAC,KAAKsD,IAAI,EAAE;UACjC,IAAI,CAACxD,aAAa,iCAAK4E,MAAM;YAAE1E,KAAK,EAALA;UAAK,GAAE;UACtC;QACF;MACF;IACF;;EAAC;IAAA;IAAA;IAYD,wBAAe0E,MAAkD,EAAE;MACjE,IAAO3E,QAAQ,GAAY2E,MAAM,CAA1B3E,QAAQ;QAAExC,MAAM,GAAImH,MAAM,CAAhBnH,MAAM;MAEvB,IAAI,IAAI,CAACI,UAAU,IAAI,IAAI,EAAE;QAC3B;MACF;MAEA,IAAI,IAAI,CAACA,UAAU,CAACiH,QAAQ,IAAI,IAAI,EAAE;QACpCnJ,OAAO,CAACoJ,IAAI,CACV,uEAAuE,GACrE,iEAAiE,GACjE,4DAA4D,CAC/D;QACD;MACF;MAEA,IAAI,CAAClH,UAAU,CAACiH,QAAQ,CACtBtL,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,GACtC;QAACuL,CAAC,EAAEvH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,GACrB;QAACgF,CAAC,EAAExH,MAAM;QAAEwC,QAAQ,EAARA;MAAQ,CAAC,CAC1B;IACH;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,IAAI,CAAClF,iBAAiB,CAACqB,OAAO,CAAC,UAAAjB,SAAS,EAAI;QAC1CA,SAAS,CAACO,GAAG,IAAIP,SAAS,CAACO,GAAG,CAACK,iBAAiB,EAAE;MACpD,CAAC,CAAC;MACF,IAAI,CAACkC,kBAAkB,CAAC7B,OAAO,CAAC,UAAAoJ,CAAC,EAAI;QACnCA,CAAC,CAACjE,iBAAiB,CAACxF,iBAAiB,EAAE;MACzC,CAAC,CAAC;MACF,IAAI,CAACiF,oBAAoB,CAAC,IAAI,CAAC3G,KAAK,CAAC4G,IAAI,CAAC;IAC5C;EAAC;IAAA;IAAA,OAED,iCAAwB;MACtB,IAAI,IAAI,CAACpD,UAAU,IAAI,IAAI,EAAE;QAC3B;MACF;MAEA,IAAI,CAACA,UAAU,CAAC4H,qBAAqB,EAAE;IACzC;;EAAC;IAAA;IAAA;IAOD,8BAA2C;MACzC,IAAI,IAAI,CAAC5H,UAAU,IAAI,IAAI,CAACA,UAAU,CAAC6H,kBAAkB,EAAE;QACzD,OAAO,IAAI,CAAC7H,UAAU,CAAC6H,kBAAkB,EAAE;MAC7C;IACF;EAAC;IAAA;IAAA,OAED,6BAA6B;MAC3B,IAAI,IAAI,CAAC7H,UAAU,IAAI,IAAI,CAACA,UAAU,CAAC8H,iBAAiB,EAAE;QACxD,OAAO,IAAI,CAAC9H,UAAU,CAAC8H,iBAAiB,EAAE;MAC5C,CAAC,MAAM;QACL,OAAOrN,WAAW,CAACsN,cAAc,CAAC,IAAI,CAAC/H,UAAU,CAAC;MACpD;IACF;EAAC;IAAA;IAAA,OAED,wBAEmC;MACjC,IAAI,IAAI,CAACA,UAAU,IAAI,IAAI,CAACA,UAAU,CAACgI,YAAY,EAAE;QACnD,OAAO,IAAI,CAAChI,UAAU,CAACgI,YAAY,EAAE;MACvC,CAAC,MAAM;QACL,OAAO,IAAI,CAAChI,UAAU;MACxB;IACF;EAAC;IAAA;IAAA,OAED,wBAAexD,KAAa,EAAE;MAC5B,IAAI,IAAI,CAACwD,UAAU,EAAE;QACnB,IAAI,CAACA,UAAU,CAACiI,cAAc,CAACzL,KAAK,CAAC;MACvC;IACF;EAAC;IAAA;IAAA,OAED,uBAAsB;MAAA;MACpB,OAAO,sBAAI,CAACK,OAAO,qBAAZ,cAAcY,OAAO,KAAI,UAAU;IAC5C;EAAC;IAAA;IAAA,OAED,uBAAsB;MACpB,OAAO,IAAI,CAACjB,KAAK,CAAC0L,OAAO,IAAI,IAAI,CAACC,WAAW,EAAE;IACjD;EAAC;IAAA;IAAA,OAED,yBAA+B;MAAA;MAC7B,OAAO;QACLD,OAAO,EAAE,IAAI,CAACrB,WAAW,EAAE;QAC3BpJ,OAAO,EAAE,IAAI,CAAC0K,WAAW,EAAE;QAC3BvM,UAAU,EAAED,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC;QACtDwM,MAAM,oBAAE,IAAI,CAACvL,OAAO,qBAAZ,eAAcwL;MACxB,CAAC;IACH;EAAC;IAAA;IAAA,OAMD,mBAAmB;MACjB,OAAO,IAAI,CAACpJ,QAAQ;IACtB;EAAC;IAAA;IAAA,OA0HD,6BAAoB;MAClB,IAAI,IAAI,CAACrC,4BAA4B,EAAE,EAAE;QACvC,IAAI,CAACC,OAAO,CAACyL,qBAAqB,CAAC;UACjC7K,OAAO,EAAE,IAAI,CAAC0K,WAAW,EAAE;UAC3BnL,GAAG,EAAE,IAAI,CAAC6J,WAAW,EAAE;UACvBhJ,GAAG,EAAE,IAAI;UAKT0K,eAAe,EAAE,IAAI,CAAC1L,OAAO,CAACwL;QAChC,CAAC,CAAC;MACJ;IACF;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAI,IAAI,CAACzL,4BAA4B,EAAE,EAAE;QACvC,IAAI,CAACC,OAAO,CAAC2L,uBAAuB,CAAC;UACnCxL,GAAG,EAAE,IAAI,CAAC6J,WAAW,EAAE;UACvBzJ,KAAK,EAAE;YACLwH,KAAK,EAAE,IAAI,CAACxH,KAAK,CAACwH,KAAK;YACvBC,IAAI,EAAE,IAAI,CAACzH,KAAK,CAACyH,IAAI;YACrBiC,MAAM,EAAE,IAAI,CAAChI;UACf;QACF,CAAC,CAAC;MACJ;MACA,IAAI,CAACqE,oBAAoB,CAAC,IAAI,CAAC;MAC/B,IAAI,CAAC+C,2BAA2B,CAACuC,OAAO,CAAC;QAACC,KAAK,EAAE;MAAI,CAAC,CAAC;MACvD,IAAI,CAACtI,kBAAkB,CAAC7B,OAAO,CAAC,UAAAkF,KAAK,EAAI;QACvCA,KAAK,CAACC,iBAAiB,CAAC+E,OAAO,EAAE;MACnC,CAAC,CAAC;MACF,IAAI,CAACpF,eAAe,CAACsF,kBAAkB,EAAE;IAC3C;EAAC;IAAA;IAAA,OAkBD,oBACEC,KAAoB,EACpBC,mBAAkC,EAClCC,sBAAmC,EACnClE,KAAa,EACbC,IAAY,EACZkE,cAA6B,EAC7B;MAAA;MACA,mBAOI,IAAI,CAACvM,KAAK;QANZwM,qBAAqB,gBAArBA,qBAAqB;QACrBC,sBAAsB,gBAAtBA,sBAAsB;QACtB7F,IAAI,gBAAJA,IAAI;QACJsC,OAAO,gBAAPA,OAAO;QACPvB,YAAY,gBAAZA,YAAY;QACZvI,UAAU,gBAAVA,UAAU;MAEZ,IAAMsN,YAAY,GAAG,IAAI,CAAC1M,KAAK,CAAC2M,mBAAmB,GAAG,CAAC,GAAG,CAAC;MAC3D,IAAMC,GAAG,GAAGjF,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC;MAClC,IAAIiG,WAAW;MACfxE,IAAI,GAAG9B,IAAI,CAAC+B,GAAG,CAACsE,GAAG,EAAEvE,IAAI,CAAC;MAAC,2BAClBK,EAAE;QACT,IAAMS,IAAI,GAAGD,OAAO,CAACtC,IAAI,EAAE8B,EAAE,CAAC;QAC9B,IAAMlI,GAAG,GAAG,MAAI,CAAC4I,aAAa,CAACD,IAAI,EAAET,EAAE,CAAC;QACxC,MAAI,CAAC5F,cAAc,CAAC1B,GAAG,CAACsH,EAAE,EAAElI,GAAG,CAAC;QAChC,IAAI8L,sBAAsB,CAACQ,GAAG,CAACpE,EAAE,GAAGgE,YAAY,CAAC,EAAE;UACjDL,mBAAmB,CAACpC,IAAI,CAACmC,KAAK,CAAC5C,MAAM,CAAC;QACxC;QACA4C,KAAK,CAACnC,IAAI,CACR,KAAC,YAAY;UACX,qBAAqB,EAAEuC,qBAAsB;UAC7C,sBAAsB,EAAE9D,EAAE,GAAGkE,GAAG,GAAGH,sBAAsB,GAAGM,SAAU;UACtE,OAAO,EAAEvM,GAAI;UACb,cAAc,EAAE,MAAI,CAACqG,eAAgB;UACrC,UAAU,EAAEzH,UAAW;UACvB,KAAK,EAAEsJ,EAAG;UACV,cAAc,EAAE6D,cAAe;UAC/B,IAAI,EAAEpD,IAAK;UAEX,WAAW,EAAE0D,WAAY;UACzB,kBAAkB,EAAE,MAAI,CAACjL,mBAAoB;UAC7C,QAAQ,EAAE,kBAAA6C,CAAC;YAAA,OAAI,MAAI,CAACuI,aAAa,CAACvI,CAAC,EAAEjE,GAAG,EAAEkI,EAAE,CAAC;UAAA,CAAC;UAC9C,SAAS,EAAE,MAAI,CAACrE,cAAe;UAC/B,WAAW,EAAE,MAAI,CAACrE,KAAM;UACxB,GAAG,EAAE,aAAAqB,IAAG,EAAI;YACV,MAAI,CAACW,SAAS,CAACxB,GAAG,CAAC,GAAGa,IAAG;UAC3B;QAAE,GARGb,GAAG,CASR,CACH;QACDqM,WAAW,GAAGrM,GAAG;MAAC;MA5BpB,KAAK,IAAIkI,EAAE,GAAGN,KAAK,EAAEM,EAAE,IAAIL,IAAI,EAAEK,EAAE,EAAE,EAAE;QAAA,MAA9BA,EAAE;MA6BX;IACF;EAAC;IAAA;IAAA,OASD,qCAAqC;MACnC,OAAO,IAAI,CAAC1I,KAAK,CAACiN,qBAAqB,IAAI,KAAK;IAClD;EAAC;IAAA;IAAA,OAED,wCAAwC;MACtC,IAAMC,aAAa,GAAG,IAAI,CAAC7M,OAAO;MAClC,OAAO,CAAC,EACN6M,aAAa,IACb,CAAC,CAACA,aAAa,CAAC9N,UAAU,KAAKD,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,CAC1E;IACH;EAAC;IAAA;IAAA,OAKD,uBAAc+J,IAAU,EAAEtD,KAAa,EAAE;MACvC,IAAI,IAAI,CAAC7F,KAAK,CAACtB,YAAY,IAAI,IAAI,EAAE;QACnC,OAAO,IAAI,CAACsB,KAAK,CAACtB,YAAY,CAACyK,IAAI,EAAEtD,KAAK,CAAC;MAC7C;MAEA,IAAMrF,GAAG,GAAG7B,mBAAmB,CAACwK,IAAI,EAAEtD,KAAK,CAAC;MAC5C,IAAIrF,GAAG,KAAK2M,MAAM,CAACtH,KAAK,CAAC,EAAE;QACzB5G,gBAAgB,GAAG,IAAI;QACvB,IAAIkK,IAAI,CAACiE,IAAI,IAAIjE,IAAI,CAACiE,IAAI,CAACC,WAAW,EAAE;UACtCnO,yBAAyB,GAAGiK,IAAI,CAACiE,IAAI,CAACC,WAAW;QACnD;MACF;MACA,OAAO7M,GAAG;IACZ;EAAC;IAAA;IAAA,OAED,kBAAqB;MAAA;MACnB,IAAI8M,OAAO,EAAE;QACX,IAAMC,UAAU,GAAGhP,YAAY,CAAC,IAAI,CAACyB,KAAK,CAACwN,qBAAqB,CAAC;QACjE,IAAID,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACE,QAAQ,KAAK,MAAM,EAAE;UACxDnM,OAAO,CAACoJ,IAAI,CACV,4EAA4E,GAC1E,sDAAsD,CACzD;QACH;MACF;MACA,mBACE,IAAI,CAAC1K,KAAK;QADL0N,kBAAkB,gBAAlBA,kBAAkB;QAAEC,mBAAmB,gBAAnBA,mBAAmB;QAAEhB,mBAAmB,gBAAnBA,mBAAmB;MAEnE,mBAA2B,IAAI,CAAC3M,KAAK;QAA9B4G,IAAI,gBAAJA,IAAI;QAAExH,UAAU,gBAAVA,UAAU;MACvB,IAAMyI,wBAAwB,GAAG,IAAI,CAACC,yBAAyB,EAAE;MACjE,IAAMyE,cAAc,GAAG,IAAI,CAACvM,KAAK,CAAC4N,QAAQ,GACtCzO,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,GACxCyO,MAAM,CAACC,oBAAoB,GAC3BD,MAAM,CAACE,kBAAkB,GAC3B,IAAI;MACR,IAAM3B,KAAK,GAAG,EAAE;MAChB,IAAME,sBAAsB,GAAG,IAAIpL,GAAG,CAAC,IAAI,CAAClB,KAAK,CAACqM,mBAAmB,CAAC;MACtE,IAAMA,mBAAmB,GAAG,EAAE;MAC9B,IAAIM,mBAAmB,EAAE;QACvB,IAAIL,sBAAsB,CAACQ,GAAG,CAAC,CAAC,CAAC,EAAE;UACjCT,mBAAmB,CAACpC,IAAI,CAAC,CAAC,CAAC;QAC7B;QACA,IAAM+D,OAAO,GAAGnP,KAAK,CAACoP,cAAc,CAACtB,mBAAmB,CAAC,GACvDA,mBAAmB,GAInB,KAAC,mBAAmB,KACrB;QACDP,KAAK,CAACnC,IAAI,CACR,KAAC,kCAAkC;UACjC,OAAO,EAAE,IAAI,CAAC0B,WAAW,EAAE,GAAG,SAAU;UAAA,UAExC,KAAC,IAAI;YACH,QAAQ,EAAE,IAAI,CAACtG,eAAgB;YAC/B,KAAK,EAAEjH,UAAU,CAAC8P,OAAO,CACvB3B,cAAc,EACd,IAAI,CAACvM,KAAK,CAACmO,wBAAwB,CACnC;YAAA;YAGAH;UAAO;QAEJ,GAXH,SAAS,CAYsB,CACtC;MACH;MACA,IAAM9C,SAAS,GAAG,IAAI,CAAClL,KAAK,CAAC2H,YAAY,CAACf,IAAI,CAAC;MAC/C,IAAIsE,SAAS,GAAG,CAAC,EAAE;QACjBjM,gBAAgB,GAAG,KAAK;QACxBC,yBAAyB,GAAG,EAAE;QAC9B,IAAMkP,SAAS,GAAG,IAAI,CAAClM,aAAa,CAAC,CAAC9C,UAAU,CAAC;QACjD,IAAMiP,gBAAgB,GAAG,IAAI,CAACrO,KAAK,CAACyF,kBAAkB,GAClD,CAAC,CAAC,GACFpG,2BAA2B,CAAC,IAAI,CAACW,KAAK,CAACV,kBAAkB,CAAC,GAAG,CAAC;QAClE,kBAAsB,IAAI,CAACsB,KAAK;UAAzBwH,KAAK,eAALA,KAAK;UAAEC,IAAI,eAAJA,IAAI;QAClB,IAAI,CAACiG,UAAU,CACblC,KAAK,EACLC,mBAAmB,EACnBC,sBAAsB,EACtB,CAAC,EACD+B,gBAAgB,EAChB9B,cAAc,CACf;QACD,IAAMgC,iBAAiB,GAAGhI,IAAI,CAACC,GAAG,CAAC6H,gBAAgB,GAAG,CAAC,EAAEjG,KAAK,CAAC;QAC/D,IAAI,CAACP,wBAAwB,IAAIO,KAAK,GAAGiG,gBAAgB,GAAG,CAAC,EAAE;UAC7D,IAAIG,oBAAoB,GAAG,KAAK;UAChC,IAAIlC,sBAAsB,CAAC/D,IAAI,GAAG,CAAC,EAAE;YACnC,IAAMmE,YAAY,GAAGC,mBAAmB,GAAG,CAAC,GAAG,CAAC;YAEhD,KAAK,IAAIjE,EAAE,GAAG6F,iBAAiB,GAAG,CAAC,EAAE7F,EAAE,GAAG2F,gBAAgB,EAAE3F,EAAE,EAAE,EAAE;cAChE,IAAI4D,sBAAsB,CAACQ,GAAG,CAACpE,EAAE,GAAGgE,YAAY,CAAC,EAAE;gBACjD,IAAM+B,SAAS,GAAG,IAAI,CAACxG,sBAAsB,CAACoG,gBAAgB,CAAC;gBAC/D,IAAMK,WAAW,GAAG,IAAI,CAACzG,sBAAsB,CAACS,EAAE,CAAC;gBACnD,IAAMiG,SAAS,GACbD,WAAW,CAACtL,MAAM,GAClBqL,SAAS,CAACrL,MAAM,IACf,IAAI,CAACpD,KAAK,CAACyF,kBAAkB,GAAG,CAAC,GAAGgJ,SAAS,CAACjF,MAAM,CAAC;gBACxD4C,KAAK,CAACnC,IAAI,CACR,KAAC,IAAI;kBAAoB,KAAK,sBAAImE,SAAS,EAAGO,SAAS;gBAAE,GAA/C,cAAc,CAAoC,CAC7D;gBACD,IAAI,CAACL,UAAU,CACblC,KAAK,EACLC,mBAAmB,EACnBC,sBAAsB,EACtB5D,EAAE,EACFA,EAAE,EACF6D,cAAc,CACf;gBACD,IAAMqC,UAAU,GACd,IAAI,CAAC3G,sBAAsB,CAACG,KAAK,CAAC,CAAChF,MAAM,IACxCsL,WAAW,CAACtL,MAAM,GAAGsL,WAAW,CAAClF,MAAM,CAAC;gBAC3C4C,KAAK,CAACnC,IAAI,CACR,KAAC,IAAI;kBAAqB,KAAK,sBAAImE,SAAS,EAAGQ,UAAU;gBAAE,GAAjD,eAAe,CAAqC,CAC/D;gBACDJ,oBAAoB,GAAG,IAAI;gBAC3B;cACF;YACF;UACF;UACA,IAAI,CAACA,oBAAoB,EAAE;YACzB,IAAMC,UAAS,GAAG,IAAI,CAACxG,sBAAsB,CAACoG,gBAAgB,CAAC;YAC/D,IAAMQ,UAAU,GACd,IAAI,CAAC5G,sBAAsB,CAACG,KAAK,CAAC,CAAChF,MAAM,IACxCqL,UAAS,CAACrL,MAAM,GAAGqL,UAAS,CAACjF,MAAM,CAAC;YACvC4C,KAAK,CAACnC,IAAI,CACR,KAAC,IAAI;cAAoB,KAAK,sBAAImE,SAAS,EAAGS,UAAU;YAAE,GAAhD,cAAc,CAAqC,CAC9D;UACH;QACF;QACA,IAAI,CAACP,UAAU,CACblC,KAAK,EACLC,mBAAmB,EACnBC,sBAAsB,EACtBiC,iBAAiB,EACjBlG,IAAI,EACJkE,cAAc,CACf;QACD,IAAI,CAAC,IAAI,CAAC7J,UAAU,CAACb,IAAI,IAAI5C,gBAAgB,EAAE;UAC7CqC,OAAO,CAACoJ,IAAI,CACV,6FAA6F,GAC3F,wCAAwC,EAC1CxL,yBAAyB,CAC1B;UACD,IAAI,CAACwD,UAAU,CAACb,IAAI,GAAG,IAAI;QAC7B;QACA,IAAI,CAACgG,wBAAwB,IAAIQ,IAAI,GAAG6C,SAAS,GAAG,CAAC,EAAE;UACrD,IAAM4D,SAAS,GAAG,IAAI,CAAC7G,sBAAsB,CAACI,IAAI,CAAC;UAInD,IAAMuE,GAAG,GAAG,IAAI,CAAC5M,KAAK,CAACuJ,aAAa,GAChC2B,SAAS,GAAG,CAAC,GACb3E,IAAI,CAAC+B,GAAG,CAAC4C,SAAS,GAAG,CAAC,EAAE,IAAI,CAACrI,0BAA0B,CAAC;UAC5D,IAAMkM,QAAQ,GAAG,IAAI,CAAC9G,sBAAsB,CAAC2E,GAAG,CAAC;UACjD,IAAMoC,gBAAgB,GACpBD,QAAQ,CAAC3L,MAAM,GACf2L,QAAQ,CAACvF,MAAM,IACdsF,SAAS,CAAC1L,MAAM,GAAG0L,SAAS,CAACtF,MAAM,CAAC;UACvC4C,KAAK,CAACnC,IAAI,CACR,KAAC,IAAI;YAAoB,KAAK,sBAAImE,SAAS,EAAGY,gBAAgB;UAAE,GAAtD,cAAc,CAA2C,CACpE;QACH;MACF,CAAC,MAAM,IAAItB,kBAAkB,EAAE;QAC7B,IAAMM,QAA2B,GAAKnP,KAAK,CAACoP,cAAc,CACxDP,kBAAkB,CACnB,GACCA,kBAAkB,GAIlB,KAAC,kBAAkB,KACb;QACRtB,KAAK,CAACnC,IAAI,CACRpL,KAAK,CAACoQ,YAAY,CAACjB,QAAO,EAAE;UAC1BxN,GAAG,EAAE,QAAQ;UACbsE,QAAQ,EAAE,kBAAAoK,KAAK,EAAI;YACjB,MAAI,CAACjK,cAAc,CAACiK,KAAK,CAAC;YAC1B,IAAIlB,QAAO,CAAChO,KAAK,CAAC8E,QAAQ,EAAE;cAC1BkJ,QAAO,CAAChO,KAAK,CAAC8E,QAAQ,CAACoK,KAAK,CAAC;YAC/B;UACF,CAAC;UACDC,KAAK,EAAE/Q,UAAU,CAAC8P,OAAO,CAAC3B,cAAc,EAAEyB,QAAO,CAAChO,KAAK,CAACmP,KAAK;QAC/D,CAAC,CAAC,CACH;MACH;MACA,IAAIxB,mBAAmB,EAAE;QACvB,IAAMK,SAAO,GAAGnP,KAAK,CAACoP,cAAc,CAACN,mBAAmB,CAAC,GACvDA,mBAAmB,GAInB,KAAC,mBAAmB,KACrB;QACDvB,KAAK,CAACnC,IAAI,CACR,KAAC,kCAAkC;UACjC,OAAO,EAAE,IAAI,CAAC7E,iBAAiB,EAAG;UAAA,UAElC,KAAC,IAAI;YACH,QAAQ,EAAE,IAAI,CAACF,eAAgB;YAC/B,KAAK,EAAE9G,UAAU,CAAC8P,OAAO,CACvB3B,cAAc,EACd,IAAI,CAACvM,KAAK,CAACoP,wBAAwB,CACnC;YAAA;YAGApB;UAAO;QAEJ,GAXH,SAAS,CAYsB,CACtC;MACH;MACA,IAAMqB,WAAW,mCACZ,IAAI,CAACrP,KAAK;QACb8F,mBAAmB,EAAE,IAAI,CAACR,oBAAoB;QAC9CR,QAAQ,EAAE,IAAI,CAACN,SAAS;QACxB0B,QAAQ,EAAE,IAAI,CAACD,SAAS;QACxBkB,iBAAiB,EAAE,IAAI,CAACH,kBAAkB;QAC1CK,eAAe,EAAE,IAAI,CAACD,gBAAgB;QACtCG,qBAAqB,EAAE,IAAI,CAACD,sBAAsB;QAClDG,mBAAmB,EAAE,IAAI,CAACD,oBAAoB;QAC9C5H,mBAAmB,EAAED,4BAA4B,CAC/C,IAAI,CAACK,KAAK,CAACJ,mBAAmB,CAC/B;QACD0P,mBAAmB,EACjB,IAAI,CAACtP,KAAK,CAACsP,mBAAmB,KAAKvC,SAAS,GACxC,IAAI,CAAC/M,KAAK,CAACsP,mBAAmB,GAC9B,IAAI,CAACtP,KAAK,CAAC4N,QAAQ;QACzBvB,mBAAmB,EAAnBA,mBAAmB;QACnB8C,KAAK,EAAE5C,cAAc,GACjB,CAACA,cAAc,EAAE,IAAI,CAACvM,KAAK,CAACmP,KAAK,CAAC,GAClC,IAAI,CAACnP,KAAK,CAACmP;MAAK,EACrB;MAED,IAAI,CAAC1M,QAAQ,GACX,IAAI,CAAC7B,KAAK,CAACyH,IAAI,GAAG,IAAI,CAACrI,KAAK,CAAC2H,YAAY,CAAC,IAAI,CAAC3H,KAAK,CAAC4G,IAAI,CAAC,GAAG,CAAC;MAEhE,IAAM2I,QAAQ,GACZ,KAAC,8BAA8B;QAC7B,KAAK,EAAE;UACLtO,OAAO,EAAE,IAAI;UACbuO,gBAAgB,EAAE,IAAI,CAACvP,iBAAiB;UACxCb,UAAU,EAAED,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC;UACtDkB,yBAAyB,EAAE,IAAI,CAACH,0BAA0B;UAC1DiK,mBAAmB,EAAE,IAAI,CAAC7J,oBAAoB;UAC9CuL,qBAAqB,EAAE,IAAI,CAACjL,sBAAsB;UAClDmL,uBAAuB,EAAE,IAAI,CAACrK,wBAAwB;UACtDkK,SAAS,EAAE,IAAI,CAAC4D,aAAa;QAC/B,CAAE;QAAA,UACD5Q,KAAK,CAACoQ,YAAY,CACjB,CACE,IAAI,CAACjP,KAAK,CAAC0P,qBAAqB,IAChC,IAAI,CAAC5L,6BAA6B,EAClCuL,WAAW,CAAC,EACd;UACEhO,GAAG,EAAE,IAAI,CAACwC;QACZ,CAAC,EACDuI,KAAK;MACN,EAEJ;MACD,IAAIuD,GAAG,GAAGJ,QAAQ;MAClB,IAAIjC,OAAO,EAAE;QACXqC,GAAG,GACD,KAAC,UAAU,CAAC,OAAO,CAAC,QAAQ;UAAA,UACzB,kBAAAC,aAAa,EAAI;YAChB,IACEA,aAAa,IAAI,IAAI,IACrB,CAACA,aAAa,CAACxQ,UAAU,KACvB,CAACD,mBAAmB,CAAC,MAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,IAC7C,CAAC,MAAI,CAACsD,UAAU,CAACmN,OAAO,IACxB,MAAI,CAACxP,OAAO,IAAI,IAAI,EACpB;cAEAiB,OAAO,CAACC,KAAK,CACX,iFAAiF,GAC/E,mFAAmF,GACnF,2CAA2C,CAC9C;cACD,MAAI,CAACmB,UAAU,CAACmN,OAAO,GAAG,IAAI;YAChC;YACA,OAAON,QAAQ;UACjB;QAAC,EAEJ;MACH;MACA,IAAI,IAAI,CAACvP,KAAK,CAAC8P,KAAK,EAAE;QACpB,OACE,MAAC,IAAI;UAAC,KAAK,EAAEjC,MAAM,CAACiC,KAAM;UAAA,WACvBH,GAAG,EACH,IAAI,CAACI,mBAAmB,EAAE;QAAA,EACtB;MAEX,CAAC,MAAM;QACL,OAAOJ,GAAG;MACZ;IACF;EAAC;IAAA;IAAA,OAED,4BAAmBK,SAAgB,EAAE;MACnC,oBAA0B,IAAI,CAAChQ,KAAK;QAA7B4G,IAAI,iBAAJA,IAAI;QAAEqJ,SAAS,iBAATA,SAAS;MACtB,IAAIrJ,IAAI,KAAKoJ,SAAS,CAACpJ,IAAI,IAAIqJ,SAAS,KAAKD,SAAS,CAACC,SAAS,EAAE;QAGhE,IAAI,CAACrM,kBAAkB,CAAC7B,OAAO,CAAC,UAAAkF,KAAK,EAAI;UACvCA,KAAK,CAACC,iBAAiB,CAACgJ,oBAAoB,EAAE;QAChD,CAAC,CAAC;MACJ;MAOA,IAAMC,eAAe,GAAG,IAAI,CAACvN,gBAAgB;MAC7C,IAAI,CAACmC,4BAA4B,EAAE;MAGnC,IAAIoL,eAAe,EAAE;QACnB,IAAI,CAACvN,gBAAgB,GAAG,KAAK;MAC/B;IACF;EAAC;IAAA;IAAA,OA+CD,6BAAoB;MAClB,IAAI,CAACiE,eAAe,CAACuJ,gBAAgB,CACnC,IAAI,CAACpQ,KAAK,EACV,IAAI,CAACY,KAAK,EACV,IAAI,CAACV,cAAc,CACpB;IACH;EAAC;IAAA;IAAA,OAqCD,uBAAcuE,CAAC,EAAExD,OAAO,EAAE4E,KAAK,EAAE;MAC/B,IAAMhB,MAAM,GAAGJ,CAAC,CAACG,WAAW,CAACC,MAAM;MACnC,IAAMwL,IAAI,GAAG;QACXjN,MAAM,EAAE,IAAI,CAACkD,aAAa,CAACzB,MAAM,CAAC;QAClC2E,MAAM,EAAE,IAAI,CAAC7E,aAAa,CAACE,MAAM,CAAC;QAClCgB,KAAK,EAALA,KAAK;QACLtB,QAAQ,EAAE;MACZ,CAAC;MACD,IAAMD,IAAI,GAAG,IAAI,CAAChC,OAAO,CAACrB,OAAO,CAAC;MAClC,IACE,CAACqD,IAAI,IACL+L,IAAI,CAACjN,MAAM,KAAKkB,IAAI,CAAClB,MAAM,IAC3BiN,IAAI,CAAC7G,MAAM,KAAKlF,IAAI,CAACkF,MAAM,IAC3B3D,KAAK,KAAKvB,IAAI,CAACuB,KAAK,EACpB;QACA,IAAI,CAACnC,gBAAgB,IAAI2M,IAAI,CAAC7G,MAAM,IAAIlF,IAAI,GAAGA,IAAI,CAACkF,MAAM,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAC7F,mBAAmB,IAAIW,IAAI,GAAG,CAAC,GAAG,CAAC;QACxC,IAAI,CAAClC,kBAAkB,GACrB,IAAI,CAACsB,gBAAgB,GAAG,IAAI,CAACC,mBAAmB;QAClD,IAAI,CAACrB,OAAO,CAACrB,OAAO,CAAC,GAAGoP,IAAI;QAC5B,IAAI,CAACxN,0BAA0B,GAAG0D,IAAI,CAACC,GAAG,CACxC,IAAI,CAAC3D,0BAA0B,EAC/BgD,KAAK,CACN;QACD,IAAI,CAACd,4BAA4B,EAAE;MACrC,CAAC,MAAM;QACL,IAAI,CAACzC,OAAO,CAACrB,OAAO,CAAC,CAACsD,QAAQ,GAAG,IAAI;MACvC;MAEA,IAAI,CAACY,oCAAoC,CAAClE,OAAO,CAAC;MAElD,IAAI,CAAC8F,iBAAiB,EAAE;MACxB,IAAI,CAACJ,oBAAoB,CAAC,IAAI,CAAC3G,KAAK,CAAC4G,IAAI,CAAC;IAC5C;EAAC;IAAA;IAAA,OASD,8CAAqC3F,OAAe,EAAQ;MAC1D,IAAM2H,aAAa,GAAG,IAAI,CAAC5H,wBAAwB,CAACL,GAAG,CAACM,OAAO,CAAC;MAChE,IAAI2H,aAAa,EAAE;QACjB,sDAAqBA,aAAa,2CAAE;UAAA,IAA3BE,QAAQ;UACf,IAAMhI,SAAS,GAAG,IAAI,CAACJ,iBAAiB,CAACC,GAAG,CAACmI,QAAQ,CAAC;UACtDhI,SAAS,IACPA,SAAS,CAACO,GAAG,IACbP,SAAS,CAACO,GAAG,CAACqD,qCAAqC,EAAE;QACzD;MACF;IACF;EAAC;IAAA;IAAA,OAED,iDAA8C;MAAA;MAG5C,IAAI;QACF,IAAI,CAAC,IAAI,CAAClB,UAAU,EAAE;UACpB;QACF;QAGA,IAAI,CAACA,UAAU,CAAC8M,aAAa,CAC3B,IAAI,CAACjQ,OAAO,CAACC,yBAAyB,EAAE,CAACkL,YAAY,EAAE,EACvD,UAACb,CAAC,EAAEC,CAAC,EAAErF,KAAK,EAAEC,MAAM,EAAK;UACvB,MAAI,CAACzC,gCAAgC,GAAG,MAAI,CAACuD,aAAa,CAAC;YAACqE,CAAC,EAADA,CAAC;YAAEC,CAAC,EAADA;UAAC,CAAC,CAAC;UAClE,MAAI,CAAC1K,cAAc,CAAC+C,aAAa,GAAG,MAAI,CAAC0B,aAAa,CAAC;YACrDY,KAAK,EAALA,KAAK;YACLC,MAAM,EAANA;UACF,CAAC,CAAC;UACF,IAAM+K,aAAa,GAAG,MAAI,CAACxK,2BAA2B,CACpD,MAAI,CAAC1F,OAAO,CAACmP,gBAAgB,EAAE,CAChC;UAED,IAAMgB,cAAc,GAClB,MAAI,CAACtQ,cAAc,CAACqD,aAAa,KAAKgN,aAAa,CAAChN,aAAa,IACjE,MAAI,CAACrD,cAAc,CAACkD,MAAM,KAAKmN,aAAa,CAACnN,MAAM;UAErD,IAAIoN,cAAc,EAAE;YAClB,MAAI,CAACtQ,cAAc,CAACqD,aAAa,GAAGgN,aAAa,CAAChN,aAAa;YAC/D,MAAI,CAACrD,cAAc,CAACkD,MAAM,GAAGmN,aAAa,CAACnN,MAAM;;YAIjD,MAAI,CAACpC,wBAAwB,CAACe,OAAO,CAAC,UAAA6G,aAAa,EAAI;cACrD,IAAIA,aAAa,EAAE;gBACjB,sDAAqBA,aAAa,2CAAE;kBAAA,IAA3BE,QAAQ;kBACf,IAAMhI,SAAS,GAAG,MAAI,CAACJ,iBAAiB,CAACC,GAAG,CAACmI,QAAQ,CAAC;kBACtDhI,SAAS,IACPA,SAAS,CAACO,GAAG,IACbP,SAAS,CAACO,GAAG,CAACqD,qCAAqC,EAAE;gBACzD;cACF;YACF,CAAC,CAAC;UACJ;QACF,CAAC,EACD,UAAAnD,KAAK,EAAI;UACPD,OAAO,CAACoJ,IAAI,CACV,gEAAgE,GAC9D,8CAA8C,CACjD;QACH,CAAC,CACF;MACH,CAAC,CAAC,OAAOnJ,KAAK,EAAE;QACdD,OAAO,CAACoJ,IAAI,CACV,sDAAsD,EACtDnJ,KAAK,CAACkP,KAAK,CACZ;MACH;IACF;EAAC;IAAA;IAAA,OAqBD,6BAA4B;MAC1B,OAAO,IAAI,CAAC9E,WAAW,EAAE,GAAG,SAAS;IACvC;EAAC;IAAA;IAAA,OAWD,+BAAsB;MACpB,IAAM+E,SAAS,GACb,IAAI,CAACxQ,cAAc,CAACqD,aAAa,IAChC,IAAI,CAACrD,cAAc,CAAC+C,aAAa,IAAI,CAAC,CAAC;MAC1C,IAAM0N,cAAc,GAAG,EAAE;MACzB,IAAMzF,SAAS,GAAG,IAAI,CAAClL,KAAK,CAAC2H,YAAY,CAAC,IAAI,CAAC3H,KAAK,CAAC4G,IAAI,CAAC;MAC1D,KAAK,IAAI8B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGwC,SAAS,EAAExC,EAAE,EAAE,EAAE;QACrC,IAAMW,KAAK,GAAG,IAAI,CAACpB,sBAAsB,CAACS,EAAE,CAAC;QAI7C,IAAIW,KAAK,CAAC9E,QAAQ,EAAE;UAClBoM,cAAc,CAAC1G,IAAI,CAACZ,KAAK,CAAC;QAC5B;MACF;MACA,IAAMuH,SAAS,GAAG,IAAI,CAAC3I,sBAAsB,CAAC,IAAI,CAACrH,KAAK,CAACwH,KAAK,CAAC,CAAChF,MAAM;MACtE,IAAMyN,SAAS,GAAG,IAAI,CAAC5I,sBAAsB,CAAC,IAAI,CAACrH,KAAK,CAACyH,IAAI,CAAC;MAC9D,IAAMyI,SAAS,GAAGD,SAAS,CAACzN,MAAM,GAAGyN,SAAS,CAACrH,MAAM,GAAGoH,SAAS;MACjE,IAAMG,MAAM,GAAG,IAAI,CAAC7Q,cAAc,CAACkD,MAAM;MACzC,IAAM4N,MAAM,GAAG,IAAI,CAAC9Q,cAAc,CAACqD,aAAa;MAEhD,OACE,MAAC,IAAI;QAAC,KAAK,EAAE,CAACsK,MAAM,CAACoD,gBAAgB,EAAEpD,MAAM,CAACqD,YAAY,CAAE;QAAA,WACzDP,cAAc,CAAC9G,GAAG,CAAC,UAACsH,CAAC,EAAEzI,EAAE;UAAA,OACxB,KAAC,IAAI;YAEH,KAAK,EAAE,CACLmF,MAAM,CAACoD,gBAAgB,EACvBpD,MAAM,CAACuD,iBAAiB,EACxB;cACEC,GAAG,EAAEF,CAAC,CAAC/N,MAAM,GAAGsN,SAAS;cACzBlL,MAAM,EAAE2L,CAAC,CAAC3H,MAAM,GAAGkH;YACrB,CAAC;UACD,GARG,GAAG,GAAGhI,EAAE,CASb;QAAA,CACH,CAAC,EACF,KAAC,IAAI;UACH,KAAK,EAAE,CACLmF,MAAM,CAACoD,gBAAgB,EACvBpD,MAAM,CAACyD,qBAAqB,EAC5B;YACED,GAAG,EAAET,SAAS,GAAGF,SAAS;YAC1BlL,MAAM,EAAEsL,SAAS,GAAGJ;UACtB,CAAC;QACD,EACF,EACF,KAAC,IAAI;UACH,KAAK,EAAE,CACL7C,MAAM,CAACoD,gBAAgB,EACvBpD,MAAM,CAAC0D,oBAAoB,EAC3B;YACEF,GAAG,EAAEN,MAAM,GAAGL,SAAS;YACvBlL,MAAM,EAAEwL,MAAM,GAAGN;UACnB,CAAC;QACD,EACF;MAAA,EACG;IAEX;EAAC;IAAA;IAAA,OAED,uBACE1K,OAIE,EACM;MACR,OAAO,CAAC7G,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,GAC9C4G,OAAO,CAACR,MAAM,GACdQ,OAAO,CAACT,KAAK;IACnB;EAAC;IAAA;IAAA,OAED,uBACES,OAIE,EACM;MACR,OAAO,CAAC7G,mBAAmB,CAAC,IAAI,CAACa,KAAK,CAACZ,UAAU,CAAC,GAAG4G,OAAO,CAAC4E,CAAC,GAAG5E,OAAO,CAAC2E,CAAC;IAC5E;EAAC;IAAA;IAAA,OAED,kCAAyB;MACvB,oBACE,IAAI,CAAC3K,KAAK;QADL4G,IAAI,iBAAJA,IAAI;QAAEe,YAAY,iBAAZA,YAAY;QAAE6J,YAAY,iBAAZA,YAAY;QAAE9R,qBAAqB,iBAArBA,qBAAqB;MAE9D,4BAA+C,IAAI,CAACQ,cAAc;QAA3D+C,aAAa,yBAAbA,aAAa;QAAEM,aAAa,yBAAbA,aAAa;QAAEH,MAAM,yBAANA,MAAM;MAC3C,IAAM8E,eAAe,GAAGjF,aAAa,GAAGM,aAAa,GAAGH,MAAM;MAC9D,IAAMqO,SAAS,GACb/R,qBAAqB,IAAI,IAAI,GAAGA,qBAAqB,GAAG6D,aAAa,GAAG,CAAC;MAC3E,IACEiO,YAAY,IACZ,IAAI,CAAC5Q,KAAK,CAACyH,IAAI,KAAKV,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC,IAC1CsB,eAAe,GAAGuJ,SAAS,IAC3B,IAAI,CAACvR,cAAc,CAAC+C,aAAa,KAAK,IAAI,CAACQ,wBAAwB,EACnE;QAEA,IAAI,CAACA,wBAAwB,GAAG,IAAI,CAACvD,cAAc,CAAC+C,aAAa;QACjEuO,YAAY,CAAC;UAACtJ,eAAe,EAAfA;QAAe,CAAC,CAAC;MACjC,CAAC,MAAM,IAAIA,eAAe,GAAGuJ,SAAS,EAAE;QAGtC,IAAI,CAAChO,wBAAwB,GAAG,CAAC;MACnC;IACF;EAAC;IAAA;IAAA,OAmHD,wCAA+B;MAC7B,mBAAsB,IAAI,CAAC7C,KAAK;QAAzBwH,KAAK,gBAALA,KAAK;QAAEC,IAAI,gBAAJA,IAAI;MAClB,4BAA0C,IAAI,CAACnI,cAAc;QAAtDkD,MAAM,yBAANA,MAAM;QAAEG,aAAa,yBAAbA,aAAa;QAAED,QAAQ,yBAARA,QAAQ;MACtC,IAAM4H,SAAS,GAAG,IAAI,CAAClL,KAAK,CAAC2H,YAAY,CAAC,IAAI,CAAC3H,KAAK,CAAC4G,IAAI,CAAC;MAC1D,IAAI8K,KAAK,GAAG,KAAK;MACjB,IAAMhS,qBAAqB,GAAGD,8BAA8B,CAC1D,IAAI,CAACO,KAAK,CAACN,qBAAqB,CACjC;MACD,IAAMiS,kBAAkB,GAAIjS,qBAAqB,GAAG6D,aAAa,GAAI,CAAC;MAGtE,IAAI6E,KAAK,GAAG,CAAC,EAAE;QACb,IAAMwJ,OAAO,GAAGxO,MAAM,GAAG,IAAI,CAAC6E,sBAAsB,CAACG,KAAK,CAAC,CAAChF,MAAM;QAClEsO,KAAK,GACHA,KAAK,IAAIE,OAAO,GAAG,CAAC,IAAKtO,QAAQ,GAAG,CAAC,CAAC,IAAIsO,OAAO,GAAGD,kBAAmB;MAC3E;MAGA,IAAItJ,IAAI,GAAG6C,SAAS,GAAG,CAAC,EAAE;QACxB,IAAM2G,UAAU,GACd,IAAI,CAAC5J,sBAAsB,CAACI,IAAI,CAAC,CAACjF,MAAM,IAAIA,MAAM,GAAGG,aAAa,CAAC;QACrEmO,KAAK,GACHA,KAAK,IACLG,UAAU,GAAG,CAAC,IACbvO,QAAQ,GAAG,CAAC,IAAIuO,UAAU,GAAGF,kBAAmB;MACrD;MAQA,IACED,KAAK,KACJ,IAAI,CAACtP,kBAAkB,IAAI,IAAI,CAACpC,KAAK,CAACuJ,aAAa,CAAC,IACrD,CAAC,IAAI,CAAC3G,gBAAgB,EACtB;QACA,IAAI,CAACA,gBAAgB,GAAG,IAAI;QAG5B,IAAI,CAAC8G,2BAA2B,CAACuC,OAAO,CAAC;UAACC,KAAK,EAAE;QAAI,CAAC,CAAC;QACvD,IAAI,CAACxE,oBAAoB,EAAE;QAC3B;MACF,CAAC,MAAM;QACL,IAAI,CAACgC,2BAA2B,CAACoI,QAAQ,EAAE;MAC7C;IACF;EAAC;IAAA;IAAA,OA6LD,8BAAqBlL,IAAS,EAAE;MAAA;MAC9B,IAAOe,YAAY,GAAI,IAAI,CAAC3H,KAAK,CAA1B2H,YAAY;MAEnB,IAAI,CAAC/D,kBAAkB,CAAC7B,OAAO,CAAC,UAAAkF,KAAK,EAAI;QACvCA,KAAK,CAACC,iBAAiB,CAAC6K,QAAQ,CAC9BpK,YAAY,CAACf,IAAI,CAAC,EAClB,MAAI,CAAC1G,cAAc,CAACkD,MAAM,EAC1B,MAAI,CAAClD,cAAc,CAACqD,aAAa,EACjC,MAAI,CAAC+F,gBAAgB,EACrB,MAAI,CAACN,gBAAgB,EACrB/B,KAAK,CAAC+C,sBAAsB,EAC5B,MAAI,CAACpJ,KAAK,CACX;MACH,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAvlCD,kCAAgCkB,QAAe,EAAEkQ,SAAgB,EAAS;MACxE,IAAOpL,IAAI,GAAkB9E,QAAQ,CAA9B8E,IAAI;QAAEe,YAAY,GAAI7F,QAAQ,CAAxB6F,YAAY;MACzB,IAAMnI,mBAAmB,GAAGD,4BAA4B,CACtDuC,QAAQ,CAACtC,mBAAmB,CAC7B;MAGD,OAAO;QACL4I,KAAK,EAAE7B,IAAI,CAACC,GAAG,CACb,CAAC,EACDD,IAAI,CAAC+B,GAAG,CAAC0J,SAAS,CAAC5J,KAAK,EAAET,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC,GAAGpH,mBAAmB,CAAC,CACxE;QACD6I,IAAI,EAAE9B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC+B,GAAG,CAAC0J,SAAS,CAAC3J,IAAI,EAAEV,YAAY,CAACf,IAAI,CAAC,GAAG,CAAC,CAAC;MACpE,CAAC;IACH;EAAC;EAAA;AAAA,EAtZ2B/H,KAAK,CAACoT,aAAa;AAA3ClS,eAAe,CACZmS,WAAW,GAAkCnT,sBAAsB;AAAA,IA2gDtEoT,YAAY;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,OAIhBvR,KAAK,GAAG;MACNwR,cAAc,EAAE;QACdC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,OAAKtS,KAAK,CAACmJ;MAC1B;IACF,CAAC;IAAA,OAgBDoJ,WAAW,GAAG;MACZC,SAAS,EAAE,qBAAM;QACf,mBAA+B,OAAKxS,KAAK;UAAlCiB,OAAO,gBAAPA,OAAO;UAAE4L,WAAW,gBAAXA,WAAW;QAC3B,OAAK7M,KAAK,CAACyS,kBAAkB,CAAC,CAACxR,OAAO,EAAE4L,WAAW,CAAC,EAAE;UACpDwF,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC;MACDK,WAAW,EAAE,uBAAM;QACjB,oBAA+B,OAAK1S,KAAK;UAAlCiB,OAAO,iBAAPA,OAAO;UAAE4L,WAAW,iBAAXA,WAAW;QAC3B,OAAK7M,KAAK,CAACyS,kBAAkB,CAAC,CAACxR,OAAO,EAAE4L,WAAW,CAAC,EAAE;UACpDwF,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC;MACDM,WAAW,EAAE,qBAACC,MAA8B,EAAE9Q,QAAgB,EAAK;QACjE,oBAA+B,OAAK9B,KAAK;UAAlCiB,OAAO,iBAAPA,OAAO;UAAE4L,WAAW,iBAAXA,WAAW;QAC3B,OAAK7M,KAAK,CAACyS,kBAAkB,CAC3B,CAACG,MAAM,KAAK,SAAS,GAAG/F,WAAW,GAAG5L,OAAO,CAAC,EAC9Ca,QAAQ,CACT;MACH;IACF,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,8BAAqBA,QAAgB,EAAE;MACrC,IAAI,CAACiG,QAAQ,CAAC,UAAAnH,KAAK;QAAA,OAAK;UACtBwR,cAAc,kCAAMxR,KAAK,CAACwR,cAAc,GAAKtQ,QAAQ;QACvD,CAAC;MAAA,CAAC,CAAC;IACL;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAI,CAAC9B,KAAK,CAAC6S,SAAS,CAAC,IAAI,CAAC7S,KAAK,CAACiB,OAAO,CAAC;IAC1C;EAAC;IAAA;IAAA,OAED,wBAAe6R,UAAU,EAAEC,iBAAiB,EAAE5J,IAAI,EAAEtD,KAAK,EAAE;MACzD,IAAIiN,UAAU,IAAIC,iBAAiB,EAAE;QACnCzR,OAAO,CAACoJ,IAAI,CACV,uGAAuG,GACrG,8BAA8B,CACjC;MACH;MAEA,IAAIqI,iBAAiB,EAAE;QAOrB,OAAOlU,KAAK,CAACmU,aAAa,CAACD,iBAAiB,EAAE;UAC5C5J,IAAI,EAAJA,IAAI;UACJtD,KAAK,EAALA,KAAK;UACLoN,UAAU,EAAE,IAAI,CAACV;QACnB,CAAC,CAAC;MACJ;MAEA,IAAIO,UAAU,EAAE;QACd,OAAOA,UAAU,CAAC;UAChB3J,IAAI,EAAJA,IAAI;UACJtD,KAAK,EAALA,KAAK;UACLoN,UAAU,EAAE,IAAI,CAACV;QACnB,CAAC,CAAC;MACJ;MAEA9T,SAAS,CACP,KAAK,EACL,iGAAiG,CAClG;IACH;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,oBASI,IAAI,CAACuB,KAAK;QARZwM,qBAAqB,iBAArBA,qBAAqB;QACrBC,sBAAsB,iBAAtBA,sBAAsB;QACtByG,cAAc,iBAAdA,cAAc;QACd9T,UAAU,iBAAVA,UAAU;QACV+J,IAAI,iBAAJA,IAAI;QACJtD,KAAK,iBAALA,KAAK;QACL0G,cAAc,iBAAdA,cAAc;QACd4G,WAAW,iBAAXA,WAAW;MAEb,IAAOL,UAAU,GAAsCK,WAAW,CAA3DL,UAAU;QAAEvJ,aAAa,GAAuB4J,WAAW,CAA/C5J,aAAa;QAAEwJ,iBAAiB,GAAII,WAAW,CAAhCJ,iBAAiB;MACnD,IAAM/E,OAAO,GAAG,IAAI,CAACoF,cAAc,CACjCN,UAAU,EACVC,iBAAiB,EACjB5J,IAAI,EACJtD,KAAK,CACN;MAED,IAAMf,QAAQ;MAIZyE,aAAa,IAAI,CAAC4J,WAAW,CAACrD,KAAK,IAAI,CAACoD,cAAc,CAACG,OAAO,EAAE,GAC5DtG,SAAS,GACT,IAAI,CAAC/M,KAAK,CAAC8E,QAAQ;MAGzB,IAAMwO,aAAa,GAAG7G,sBAAsB,IAC1C,KAAC,sBAAsB,oBAAK,IAAI,CAAC7L,KAAK,CAACwR,cAAc,EACtD;MACD,IAAMmB,SAAS,GAAGhH,cAAc,GAC5BnN,UAAU,GACR,CAACyO,MAAM,CAAC2F,UAAU,EAAEjH,cAAc,CAAC,GACnC,CAACsB,MAAM,CAAC4F,aAAa,EAAElH,cAAc,CAAC,GACxCnN,UAAU,GACV,CAACyO,MAAM,CAAC6F,GAAG,EAAEnH,cAAc,CAAC,GAC5BA,cAAc;MAClB,IAAMoH,MAAM,GAAG,CAACnH,qBAAqB,GAInC,MAAC,IAAI;QAAC,KAAK,EAAE+G,SAAU;QAAC,QAAQ,EAAEzO,QAAS;QAAA,WACxCkJ,OAAO,EACPsF,aAAa;MAAA,EACT,GAEP,MAAC,qBAAqB,kCAChB,IAAI,CAACtT,KAAK;QACd,KAAK,EAAEuT,SAAU;QACjB,QAAQ,EAAEzO,QAAS;QAAA,WAClBkJ,OAAO,EACPsF,aAAa;MAAA,GAEjB;MAED,OACE,KAAC,kCAAkC;QAAC,OAAO,EAAE,IAAI,CAACtT,KAAK,CAACiB,OAAQ;QAAA,UAC7D0S;MAAM,EAC4B;IAEzC;EAAC;IAAA;IAAA,OA/ID,kCACE3T,KAAwB,EACxBgS,SAA4B,EACR;MACpB,OAAO;QACLI,cAAc,kCACTJ,SAAS,CAACI,cAAc;UAC3BE,WAAW,EAAEtS,KAAK,CAACmJ;QAAI;MAE3B,CAAC;IACH;;EAAC;EAAA;AAAA,EArBwBtK,KAAK,CAAC+U,SAAS;AA6J1C,SAASpS,mBAAmB,CAACV,SAO5B,EAAE;EACD,IAAI+S,KAAK,GACP,0BAA0B,mBACd/S,SAAS,CAAC1B,UAAU,GAAG,YAAY,GAAG,UAAU,WAAM,sBAClD0B,SAAS,CAACN,GAAG,QAAI,sBACjBM,SAAS,CAACG,OAAO,CAAE;EAErC,IAAI4K,SAAS,GAAG/K,SAAS,CAACiL,eAAe;EACzC,OAAOF,SAAS,EAAE;IAChBgI,KAAK,IACH,kBAAehI,SAAS,CAACzM,UAAU,GAAG,YAAY,GAAG,UAAU,gCAC/CyM,SAAS,CAACH,OAAO,QAAI,sBACrBG,SAAS,CAAC5K,OAAO,CAAE;IACrC4K,SAAS,GAAGA,SAAS,CAACD,MAAM;EAC9B;EACA,OAAOiI,KAAK;AACd;AAEA,IAAMhG,MAAM,GAAGzP,UAAU,CAAC0V,MAAM,CAAC;EAC/B/F,kBAAkB,EAAE;IAClBgG,SAAS,EAAE,CAAC;MAACC,MAAM,EAAE,CAAC;IAAC,CAAC;EAC1B,CAAC;EACDlG,oBAAoB,EAAE;IACpBiG,SAAS,EAAE,CAAC;MAACE,MAAM,EAAE,CAAC;IAAC,CAAC;EAC1B,CAAC;EACDP,GAAG,EAAE;IACHQ,aAAa,EAAE;EACjB,CAAC;EACDV,UAAU,EAAE;IACVU,aAAa,EAAE;EACjB,CAAC;EACDT,aAAa,EAAE;IACbS,aAAa,EAAE;EACjB,CAAC;EACDpE,KAAK,EAAE;IACLqE,IAAI,EAAE;EACR,CAAC;EACDlD,gBAAgB,EAAE;IAChBmD,QAAQ,EAAE,UAAU;IACpB/C,GAAG,EAAE,CAAC;IACNgD,KAAK,EAAE;EACT,CAAC;EACDnD,YAAY,EAAE;IACZoD,MAAM,EAAE,CAAC;IACT/O,KAAK,EAAE,EAAE;IACTgP,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE;EACf,CAAC;EACDpD,iBAAiB,EAAE;IACjBqD,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDpD,qBAAqB,EAAE;IACrBmD,IAAI,EAAE,CAAC;IACPF,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE;EACf,CAAC;EACDjD,oBAAoB,EAAE;IACpBkD,IAAI,EAAE,CAAC;IACPF,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAG7U,eAAe"},"metadata":{},"sourceType":"module"}