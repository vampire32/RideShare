{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport ListViewDataSource from \"../ListView/ListViewDataSource\";\n\nvar SwipeableListViewDataSource = function () {\n  function SwipeableListViewDataSource(params) {\n    var _this = this;\n\n    _classCallCheck(this, SwipeableListViewDataSource);\n\n    this._dataSource = new ListViewDataSource({\n      getRowData: params.getRowData,\n      getSectionHeaderData: params.getSectionHeaderData,\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);\n      },\n      sectionHeaderHasChanged: params.sectionHeaderHasChanged\n    });\n  }\n\n  SwipeableListViewDataSource.prototype.cloneWithRowsAndSections = function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);\n    this._dataBlob = dataBlob;\n    this.rowIdentities = this._dataSource.rowIdentities;\n    this.sectionIdentities = this._dataSource.sectionIdentities;\n    return this;\n  };\n\n  SwipeableListViewDataSource.prototype.getDataSource = function getDataSource() {\n    return this._dataSource;\n  };\n\n  SwipeableListViewDataSource.prototype.getOpenRowID = function getOpenRowID() {\n    return this._openRowID;\n  };\n\n  SwipeableListViewDataSource.prototype.getFirstRowID = function getFirstRowID() {\n    if (this.rowIdentities) {\n      return this.rowIdentities[0] && this.rowIdentities[0][0];\n    }\n\n    return Object.keys(this._dataBlob)[0];\n  };\n\n  SwipeableListViewDataSource.prototype.getLastRowID = function getLastRowID() {\n    if (this.rowIdentities && this.rowIdentities.length) {\n      var lastSection = this.rowIdentities[this.rowIdentities.length - 1];\n\n      if (lastSection && lastSection.length) {\n        return lastSection[lastSection.length - 1];\n      }\n    }\n\n    return Object.keys(this._dataBlob)[this._dataBlob.length - 1];\n  };\n\n  SwipeableListViewDataSource.prototype.setOpenRowID = function setOpenRowID(rowID) {\n    this._previousOpenRowID = this._openRowID;\n    this._openRowID = rowID;\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);\n    return this;\n  };\n\n  return SwipeableListViewDataSource;\n}();\n\nexport default SwipeableListViewDataSource;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","ListViewDataSource","SwipeableListViewDataSource","params","_this","_dataSource","getRowData","getSectionHeaderData","rowHasChanged","row1","row2","id","_previousOpenRowID","_openRowID","sectionHeaderHasChanged","prototype","cloneWithRowsAndSections","dataBlob","sectionIdentities","rowIdentities","_dataBlob","getDataSource","getOpenRowID","getFirstRowID","Object","keys","getLastRowID","length","lastSection","setOpenRowID","rowID"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/vendor/react-native/SwipeableListView/SwipeableListViewDataSource.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableListViewDataSource\n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport ListViewDataSource from '../ListView/ListViewDataSource';\n\n/**\n * Data source wrapper around ListViewDataSource to allow for tracking of\n * which row is swiped open and close opened row(s) when another row is swiped\n * open.\n *\n * See https://github.com/facebook/react-native/pull/5602 for why\n * ListViewDataSource is not subclassed.\n */\n\nvar SwipeableListViewDataSource = function () {\n  function SwipeableListViewDataSource(params) {\n    var _this = this;\n\n    _classCallCheck(this, SwipeableListViewDataSource);\n\n    this._dataSource = new ListViewDataSource({\n      getRowData: params.getRowData,\n      getSectionHeaderData: params.getSectionHeaderData,\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        /**\n         * Row needs to be re-rendered if its swiped open/close status is\n         * changed, or its data blob changed.\n         */\n        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);\n      },\n      sectionHeaderHasChanged: params.sectionHeaderHasChanged\n    });\n  }\n\n  SwipeableListViewDataSource.prototype.cloneWithRowsAndSections = function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);\n\n    this._dataBlob = dataBlob;\n    this.rowIdentities = this._dataSource.rowIdentities;\n    this.sectionIdentities = this._dataSource.sectionIdentities;\n\n    return this;\n  };\n\n  // For the actual ListView to use\n\n\n  SwipeableListViewDataSource.prototype.getDataSource = function getDataSource() {\n    return this._dataSource;\n  };\n\n  SwipeableListViewDataSource.prototype.getOpenRowID = function getOpenRowID() {\n    return this._openRowID;\n  };\n\n  SwipeableListViewDataSource.prototype.getFirstRowID = function getFirstRowID() {\n    /**\n     * If rowIdentities is specified, find the first data row from there since\n     * we don't want to attempt to bounce section headers. If unspecified, find\n     * the first data row from _dataBlob.\n     */\n    if (this.rowIdentities) {\n      return this.rowIdentities[0] && this.rowIdentities[0][0];\n    }\n    return Object.keys(this._dataBlob)[0];\n  };\n\n  SwipeableListViewDataSource.prototype.getLastRowID = function getLastRowID() {\n    if (this.rowIdentities && this.rowIdentities.length) {\n      var lastSection = this.rowIdentities[this.rowIdentities.length - 1];\n      if (lastSection && lastSection.length) {\n        return lastSection[lastSection.length - 1];\n      }\n    }\n    return Object.keys(this._dataBlob)[this._dataBlob.length - 1];\n  };\n\n  SwipeableListViewDataSource.prototype.setOpenRowID = function setOpenRowID(rowID) {\n    this._previousOpenRowID = this._openRowID;\n    this._openRowID = rowID;\n\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);\n\n    return this;\n  };\n\n  return SwipeableListViewDataSource;\n}();\n\nexport default SwipeableListViewDataSource;"],"mappings":"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"},"metadata":{},"sourceType":"module"}