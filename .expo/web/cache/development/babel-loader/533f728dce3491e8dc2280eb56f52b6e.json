{"ast":null,"code":"\n\nimport * as React from 'react';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from \"../../Utilities/codegenNativeComponent\";\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeRefreshing']\n});\nexport default codegenNativeComponent('AndroidSwipeRefreshLayout');","map":{"version":3,"names":["React","codegenNativeCommands","codegenNativeComponent","Commands","supportedCommands"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Components/RefreshControl/AndroidSwipeRefreshLayoutNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport * as React from 'react';\n\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\n\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Whether the pull to refresh functionality is enabled.\n   */\n  enabled?: WithDefault<boolean, true>,\n  /**\n   * The colors (at least one) that will be used to draw the refresh indicator.\n   */\n  colors?: ?$ReadOnlyArray<ColorValue>,\n  /**\n   * The background color of the refresh indicator.\n   */\n  progressBackgroundColor?: ?ColorValue,\n  /**\n   * Size of the refresh indicator.\n   */\n  size?: WithDefault<'default' | 'large', 'default'>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidSwipeRefreshLayout',\n): NativeType);\n"],"mappings":";;AAUA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,qBAAqB,MAAM,wDAAwD;AAC1F,OAAOC,sBAAsB;AAuD7B,OAAO,IAAMC,QAAwB,GAAGF,qBAAqB,CAAiB;EAC5EG,iBAAiB,EAAE,CAAC,qBAAqB;AAC3C,CAAC,CAAC;AAEF,eAAgBF,sBAAsB,CACpC,2BAA2B,CAC5B"},"metadata":{},"sourceType":"module"}