{"ast":null,"code":"var _require$default$unst;\n\nvar UIManager = global.RN$Bridgeless === true ? require(\"./DummyUIManager\") : (_require$default$unst = require(\"./UIManagerInjection\").default.unstable_UIManager) != null ? _require$default$unst : require(\"./PaperUIManager\");\nmodule.exports = UIManager;","map":{"version":3,"names":["UIManager","global","RN$Bridgeless","require","default","unstable_UIManager","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/ReactNative/UIManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {Spec} from './NativeUIManager';\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\n\nexport interface UIManagerJSInterface extends Spec {\n  +getViewManagerConfig: (viewManagerName: string) => Object;\n  +hasViewManagerConfig: (viewManagerName: string) => boolean;\n  +createView: (\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => void;\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\n  +manageChildren: (\n    containerTag: ?number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => void;\n}\n\nconst UIManager: UIManagerJSInterface =\n  global.RN$Bridgeless === true\n    ? require('./DummyUIManager')\n    : require('./UIManagerInjection').default.unstable_UIManager ??\n      require('./PaperUIManager');\n\nmodule.exports = UIManager;\n"],"mappings":";;AAiCA,IAAMA,SAA+B,GACnCC,MAAM,CAACC,aAAa,KAAK,IAAI,GACzBC,OAAO,oBAAoB,4BAC3BA,OAAO,wBAAwB,CAACC,OAAO,CAACC,kBAAkB,oCAC1DF,OAAO,oBAAoB;AAEjCG,MAAM,CAACC,OAAO,GAAGP,SAAS"},"metadata":{},"sourceType":"script"}