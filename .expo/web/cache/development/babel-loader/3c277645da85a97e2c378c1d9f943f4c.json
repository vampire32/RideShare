{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport * as Font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      appIsReady = _useState2[0],\n      setAppIsReady = _useState2[1];\n\n  useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Font.loadAsync(Entypo.font));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              }));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 12:\n              _context.prev = 12;\n              setAppIsReady(true);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9, 12, 15]], Promise);\n    }\n\n    prepare();\n  }, []);\n  var onLayoutRootView = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!appIsReady) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [appIsReady]);\n\n  if (!appIsReady) {\n    return null;\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onLayout: onLayoutRootView,\n    children: [_jsx(Text, {\n      children: \"SplashScreen Demo! \\uD83D\\uDC4B\"\n    }), _jsx(Entypo, {\n      name: \"rocket\",\n      size: 30\n    })]\n  });\n}","map":{"version":3,"names":["React","useCallback","useEffect","useState","Entypo","SplashScreen","Font","App","appIsReady","setAppIsReady","prepare","preventAutoHideAsync","loadAsync","font","Promise","resolve","setTimeout","console","warn","onLayoutRootView","hideAsync","flex","alignItems","justifyContent"],"sources":["D:/React/TaxiApp/cabApp/components/SplashScreen.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport Entypo from \"@expo/vector-icons/Entypo\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as Font from \"expo-font\";\r\n\r\nexport default function App() {\r\n\tconst [appIsReady, setAppIsReady] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function prepare() {\r\n\t\t\ttry {\r\n\t\t\t\t// Keep the splash screen visible while we fetch resources\r\n\t\t\t\tawait SplashScreen.preventAutoHideAsync();\r\n\t\t\t\t// Pre-load fonts, make any API calls you need to do here\r\n\t\t\t\tawait Font.loadAsync(Entypo.font);\r\n\t\t\t\t// Artificially delay for two seconds to simulate a slow loading\r\n\t\t\t\t// experience. Please remove this if you copy and paste the code!\r\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 2000));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t} finally {\r\n\t\t\t\t// Tell the application to render\r\n\t\t\t\tsetAppIsReady(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprepare();\r\n\t}, []);\r\n\r\n\tconst onLayoutRootView = useCallback(async () => {\r\n\t\tif (appIsReady) {\r\n\t\t\t// This tells the splash screen to hide immediately! If we call this after\r\n\t\t\t// `setAppIsReady`, then we may see a blank screen while the app is\r\n\t\t\t// loading its initial state and rendering its first pixels. So instead,\r\n\t\t\t// we hide the splash screen once we know the root view has already\r\n\t\t\t// performed layout.\r\n\t\t\tawait SplashScreen.hideAsync();\r\n\t\t}\r\n\t}, [appIsReady]);\r\n\r\n\tif (!appIsReady) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View\r\n\t\t\tstyle={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}\r\n\t\t\tonLayout={onLayoutRootView}\r\n\t\t>\r\n\t\t\t<Text>SplashScreen Demo! ðŸ‘‹</Text>\r\n\t\t\t<Entypo name=\"rocket\" size={30} />\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;;;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC7B,gBAAoCJ,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOK,UAAP;EAAA,IAAmBC,aAAnB;;EAEAP,SAAS,CAAC,YAAM;IACf,SAAeQ,OAAf;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAGQL,YAAY,CAACM,oBAAb,EAHR;;YAAA;cAAA;cAAA,iCAKQL,IAAI,CAACM,SAAL,CAAeR,MAAM,CAACS,IAAtB,CALR;;YAAA;cAAA;cAAA,iCAQQ,IAAIC,OAAJ,CAAY,UAACC,OAAD;gBAAA,OAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAvB;cAAA,CAAZ,CARR;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAUEE,OAAO,CAACC,IAAR;;YAVF;cAAA;cAaET,aAAa,CAAC,IAAD,CAAb;cAbF;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAiBAC,OAAO;EACP,CAnBQ,EAmBN,EAnBM,CAAT;EAqBA,IAAMS,gBAAgB,GAAGlB,WAAW,CAAC;IAAA;MAAA;QAAA;UAAA;YAAA,KAChCO,UADgC;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAO7BH,YAAY,CAACe,SAAb,EAP6B;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EASjC,CAACZ,UAAD,CATiC,CAApC;;EAWA,IAAI,CAACA,UAAL,EAAiB;IAChB,OAAO,IAAP;EACA;;EAED,OACC,MAAC,IAAD;IACC,KAAK,EAAE;MAAEa,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CADR;IAEC,QAAQ,EAAEJ,gBAFX;IAAA,WAIC,KAAC,IAAD;MAAA;IAAA,EAJD,EAKC,KAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,IAAI,EAAE;IAA5B,EALD;EAAA,EADD;AASA"},"metadata":{},"sourceType":"module"}