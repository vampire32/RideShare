{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigation = this.props.navigation;\n      return _jsxs(SafeAreaView, {\n        children: [_jsx(StatusBar, {\n          barStyle: \"light-content\"\n        }), _jsx(KeyboardAvoidingView, {\n          behavior: \"padding\",\n          children: _jsx(TouchableWithoutFeedback, {\n            onPress: Keyboard.dismiss,\n            children: _jsxs(View, {\n              children: [_jsx(View, {\n                children: _jsx(Text, {\n                  children: \"Account Information\"\n                })\n              }), _jsxs(View, {\n                children: [_jsx(TextInput, {\n                  placeholder: \"Enter User name/Email\",\n                  placeholderTextColor: \"rgba(255,255,255,0.8)\",\n                  keyboardType: \"email-address\",\n                  returnKeyType: \"next\",\n                  autoCorrect: false,\n                  onSubmitEditing: function onSubmitEditing() {\n                    return _this.refs.txtPassword.focus();\n                  }\n                }), _jsx(TextInput, {\n                  placeholder: \"Enter Password\",\n                  placeholderTextColor: \"rgba(255,255,255,0.8)\",\n                  returnKeyType: \"go\",\n                  autoCorrect: false,\n                  ref: \"textPassword\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return navigation.navigate(\"Dashboard\");\n                  },\n                  children: _jsx(Text, {\n                    children: \"SIGN IN\"\n                  })\n                })]\n              })]\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","LoginScreen","navigation","props","Keyboard","dismiss","refs","txtPassword","focus","navigate"],"sources":["D:/React/TaxiApp/cabApp/components/LoginScreen.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n  TextInput,\r\n  SafeAreaView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,AppRegistry\r\n} from \"react-native\";\r\n\r\nclass LoginScreen extends Component {\r\n  render() {\r\n    const { navigation } = this.props;\r\n\r\n    return (\r\n\t\t\t<SafeAreaView>\r\n\t\t\t\t<StatusBar barStyle=\"light-content\" />\r\n\t\t\t\t<KeyboardAvoidingView behavior=\"padding\">\r\n\t\t\t\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<Text>Account Information</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter User name/Email\"\r\n\t\t\t\t\t\t\t\t\tplaceholderTextColor=\"rgba(255,255,255,0.8)\"\r\n\t\t\t\t\t\t\t\t\tkeyboardType=\"email-address\"\r\n\t\t\t\t\t\t\t\t\treturnKeyType=\"next\"\r\n\t\t\t\t\t\t\t\t\tautoCorrect={false}\r\n\t\t\t\t\t\t\t\t\tonSubmitEditing={() => this.refs.txtPassword.focus()}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t\t\t\tplaceholderTextColor=\"rgba(255,255,255,0.8)\"\r\n\t\t\t\t\t\t\t\t\treturnKeyType=\"go\"\r\n\t\t\t\t\t\t\t\t\tautoCorrect={false}\r\n\t\t\t\t\t\t\t\t\tref={\"textPassword\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\t\t\t\tonPress={() => navigation.navigate(\"Dashboard\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Text>SIGN IN</Text>\r\n\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t\t</KeyboardAvoidingView>\r\n\t\t\t</SafeAreaView>\r\n\t\t);\r\n  }\r\n}\r\nexport default LoginScreen;"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;;;;;;IAeMC,W;;;;;;;;;;;;;WACJ,kBAAS;MAAA;;MACP,IAAQC,UAAR,GAAuB,KAAKC,KAA5B,CAAQD,UAAR;MAEA,OACD,MAAC,YAAD;QAAA,WACC,KAAC,SAAD;UAAW,QAAQ,EAAC;QAApB,EADD,EAEC,KAAC,oBAAD;UAAsB,QAAQ,EAAC,SAA/B;UAAA,UACC,KAAC,wBAAD;YAA0B,OAAO,EAAEE,QAAQ,CAACC,OAA5C;YAAA,UACC,MAAC,IAAD;cAAA,WACC,KAAC,IAAD;gBAAA,UACC,KAAC,IAAD;kBAAA;gBAAA;cADD,EADD,EAKC,MAAC,IAAD;gBAAA,WACC,KAAC,SAAD;kBACC,WAAW,EAAC,uBADb;kBAEC,oBAAoB,EAAC,uBAFtB;kBAGC,YAAY,EAAC,eAHd;kBAIC,aAAa,EAAC,MAJf;kBAKC,WAAW,EAAE,KALd;kBAMC,eAAe,EAAE;oBAAA,OAAM,KAAI,CAACC,IAAL,CAAUC,WAAV,CAAsBC,KAAtB,EAAN;kBAAA;gBANlB,EADD,EAUC,KAAC,SAAD;kBACC,WAAW,EAAC,gBADb;kBAEC,oBAAoB,EAAC,uBAFtB;kBAGC,aAAa,EAAC,IAHf;kBAIC,WAAW,EAAE,KAJd;kBAKC,GAAG,EAAE;gBALN,EAVD,EAkBC,KAAC,gBAAD;kBACC,OAAO,EAAE;oBAAA,OAAMN,UAAU,CAACO,QAAX,CAAoB,WAApB,CAAN;kBAAA,CADV;kBAAA,UAGC,KAAC,IAAD;oBAAA;kBAAA;gBAHD,EAlBD;cAAA,EALD;YAAA;UADD;QADD,EAFD;MAAA,EADC;IAuCD;;;;EA3CuBT,S;;AA6C1B,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}