{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"activeUnderlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport InputLabel from \"./Label/InputLabel\";\nimport TextInputAdornment from \"./Adornment/TextInputAdornment\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, FLAT_INPUT_OFFSET } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding } from \"./helpers\";\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./Adornment/enums\";\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    selectionColor = _ref.selectionColor,\n    underlineColor = _ref.underlineColor,\n    activeUnderlineColor = _ref.activeUnderlineColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(NativeTextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isAndroid = Platform.OS === 'android';\n  var colors = theme.colors,\n    fonts = theme.fonts;\n  var font = fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _ref3 = StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref3.fontSize,\n    fontWeight = _ref3.fontWeight,\n    height = _ref3.height,\n    paddingHorizontal = _ref3.paddingHorizontal,\n    textAlign = _ref3.textAlign,\n    viewStyle = _objectWithoutProperties(_ref3, _excluded2);\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var _calculateFlatInputHo = calculateFlatInputHorizontalPadding({\n      adornmentConfig: adornmentConfig\n    }),\n    paddingLeft = _calculateFlatInputHo.paddingLeft,\n    paddingRight = _calculateFlatInputHo.paddingRight;\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: InputMode.Flat\n  });\n  var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n  if (disabled) {\n    inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n    placeholderColor = colors.disabled;\n    underlineColorCustom = 'transparent';\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    errorColor = colors.error;\n    underlineColorCustom = underlineColor || colors.disabled;\n  }\n  var containerStyle = {\n    backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingOffset: {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    },\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(Underline, {\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor\n  }), React.createElement(View, {\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && !!label &&\n  React.createElement(View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps\n  }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: 'text-input-flat'\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput]\n  }))), React.createElement(TextInputAdornment, adornmentProps));\n};\nexport default TextInputFlat;\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n    error = _ref2.error,\n    colors = _ref2.colors,\n    activeColor = _ref2.activeColor,\n    underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"mappings":"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","names":["React","color","InputLabel","TextInputAdornment","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","_ref","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","NativeTextInput","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","paddingOffset","maxFontSizeMultiplier","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","View","Underline","labelContainer","testID","pointerEvents","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","textAlignVertical","outline","_ref2","Animated","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n    });\n\n  let inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor;\n\n  if (disabled) {\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    underlineColorCustom = 'transparent';\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    errorColor = colors.error;\n    underlineColorCustom = underlineColor || colors.disabled;\n  }\n\n  const containerStyle = {\n    backgroundColor: theme.dark\n      ? color(colors.background).lighten(0.24).rgb().string()\n      : color(colors.background).darken(0.06).rgb().string(),\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: { paddingLeft, paddingRight },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: 'text-input-flat',\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}