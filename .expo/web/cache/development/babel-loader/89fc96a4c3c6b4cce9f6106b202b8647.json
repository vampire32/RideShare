{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"textStyle\", \"linkStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nexport default function FirebaseRecaptchaBanner(props) {\n  var textStyle = props.textStyle,\n    linkStyle = props.linkStyle,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  return React.createElement(View, _objectSpread({}, otherProps), React.createElement(Text, {\n    style: [styles.text, textStyle]\n  }, \"This app is protected by reCAPTCHA and the Google\", React.createElement(Text, {\n    style: [styles.link, linkStyle],\n    onPress: function onPress() {\n      return Linking.openURL('https://policies.google.com/privacy');\n    }\n  }, \"\\xA0Privacy Policy\\xA0\"), \"and\", React.createElement(Text, {\n    style: [styles.link, linkStyle],\n    onPress: function onPress() {\n      return Linking.openURL('https://policies.google.com/terms');\n    }\n  }, \"\\xA0Terms of Service\\xA0\"), \"apply.\"));\n}\nvar styles = StyleSheet.create({\n  content: _objectSpread({}, StyleSheet.absoluteFillObject),\n  text: {\n    fontSize: 13,\n    opacity: 0.5\n  },\n  link: {\n    color: 'blue'\n  }\n});","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAQ/B,eAAc,SAAUC,uBAAuB,CAACC,KAAY;EAC1D,IAAQC,SAAS,GAA+BD,KAAK,CAA7CC,SAAS;IAAEC,SAAS,GAAoBF,KAAK,CAAlCE,SAAS;IAAKC,UAAU,4BAAKH,KAAK;EACrD,OACEF,oBAACM,IAAI,oBAAKD,UAAU,GAClBL,oBAACO,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,IAAI,EAAEP,SAAS;EAAC,wDAEnCH,oBAACO,IAAI;IACHC,KAAK,EAAE,CAACC,MAAM,CAACE,IAAI,EAAEP,SAAS,CAAC;IAC/BQ,OAAO,EAAE;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,qCAAqC,CAAC;IAAA;EAAA,4BAEhE,SAEPd,oBAACO,IAAI;IACHC,KAAK,EAAE,CAACC,MAAM,CAACE,IAAI,EAAEP,SAAS,CAAC;IAC/BQ,OAAO,EAAE;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,mCAAmC,CAAC;IAAA;EAAA,8BAE9D,WAEF,CACF;AAEX;AAEA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BC,OAAO,oBACFF,UAAU,CAACG,kBAAkB,CACjC;EACDR,IAAI,EAAE;IACJS,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;GACV;EACDT,IAAI,EAAE;IACJU,KAAK,EAAE;;CAEV,CAAC","names":["React","FirebaseRecaptchaBanner","props","textStyle","linkStyle","otherProps","View","Text","style","styles","text","link","onPress","Linking","openURL","StyleSheet","create","content","absoluteFillObject","fontSize","opacity","color"],"sourceRoot":"","sources":["../src/FirebaseRecaptchaBanner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text, Linking, TextStyle, StyleProp, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  linkStyle?: StyleProp<TextStyle>;\n}\n\nexport default function FirebaseRecaptchaBanner(props: Props) {\n  const { textStyle, linkStyle, ...otherProps } = props;\n  return (\n    <View {...otherProps}>\n      <Text style={[styles.text, textStyle]}>\n        This app is protected by reCAPTCHA and the Google\n        <Text\n          style={[styles.link, linkStyle]}\n          onPress={() => Linking.openURL('https://policies.google.com/privacy')}>\n          &nbsp;Privacy Policy&nbsp;\n        </Text>\n        and\n        <Text\n          style={[styles.link, linkStyle]}\n          onPress={() => Linking.openURL('https://policies.google.com/terms')}>\n          &nbsp;Terms of Service&nbsp;\n        </Text>\n        apply.\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  text: {\n    fontSize: 13,\n    opacity: 0.5,\n  },\n  link: {\n    color: 'blue',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}