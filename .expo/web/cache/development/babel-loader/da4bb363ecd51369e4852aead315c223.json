{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onBlur\", \"onFocus\"];\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Pressability from \"../../Pressability/Pressability\";\nimport { PressabilityDebugView } from \"../../Pressability/PressabilityDebug\";\nimport View from \"../../Components/View/View\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PASSTHROUGH_PROPS = ['accessibilityActions', 'accessibilityElementsHidden', 'accessibilityHint', 'accessibilityIgnoresInvertColors', 'accessibilityLabel', 'accessibilityLiveRegion', 'accessibilityRole', 'accessibilityValue', 'accessibilityViewIsModal', 'hitSlop', 'importantForAccessibility', 'nativeID', 'onAccessibilityAction', 'onBlur', 'onFocus', 'onLayout', 'testID'];\nvar TouchableWithoutFeedback = function (_React$Component) {\n  _inherits(TouchableWithoutFeedback, _React$Component);\n  var _super = _createSuper(TouchableWithoutFeedback);\n  function TouchableWithoutFeedback() {\n    var _this;\n    _classCallCheck(this, TouchableWithoutFeedback);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pressability: new Pressability(createPressabilityConfig(_this.props))\n    };\n    return _this;\n  }\n  _createClass(TouchableWithoutFeedback, [{\n    key: \"render\",\n    value: function render() {\n      var element = React.Children.only(this.props.children);\n      var children = [element.props.children];\n      if (__DEV__) {\n        if (element.type === View) {\n          children.push(_jsx(PressabilityDebugView, {\n            color: \"red\",\n            hitSlop: this.props.hitSlop\n          }));\n        }\n      }\n\n      var _this$state$pressabil = this.state.pressability.getEventHandlers(),\n        onBlur = _this$state$pressabil.onBlur,\n        onFocus = _this$state$pressabil.onFocus,\n        eventHandlersWithoutBlurAndFocus = _objectWithoutProperties(_this$state$pressabil, _excluded);\n      var elementProps = _objectSpread(_objectSpread({}, eventHandlersWithoutBlurAndFocus), {}, {\n        accessible: this.props.accessible !== false,\n        accessibilityState: this.props.disabled != null ? _objectSpread(_objectSpread({}, this.props.accessibilityState), {}, {\n          disabled: this.props.disabled\n        }) : this.props.accessibilityState,\n        focusable: this.props.focusable !== false && this.props.onPress !== undefined\n      });\n      for (var _iterator = _createForOfIteratorHelperLoose(PASSTHROUGH_PROPS), _step; !(_step = _iterator()).done;) {\n        var prop = _step.value;\n        if (this.props[prop] !== undefined) {\n          elementProps[prop] = this.props[prop];\n        }\n      }\n      return React.cloneElement.apply(React, [element, elementProps].concat(children));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.state.pressability.configure(createPressabilityConfig(this.props));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.pressability.reset();\n    }\n  }]);\n  return TouchableWithoutFeedback;\n}(React.Component);\nfunction createPressabilityConfig(props) {\n  var _props$accessibilityS;\n  return {\n    cancelable: !props.rejectResponderTermination,\n    disabled: props.disabled !== null ? props.disabled : (_props$accessibilityS = props.accessibilityState) == null ? void 0 : _props$accessibilityS.disabled,\n    hitSlop: props.hitSlop,\n    delayLongPress: props.delayLongPress,\n    delayPressIn: props.delayPressIn,\n    delayPressOut: props.delayPressOut,\n    minPressDuration: 0,\n    pressRectOffset: props.pressRetentionOffset,\n    android_disableSound: props.touchSoundDisabled,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onLongPress: props.onLongPress,\n    onPress: props.onPress,\n    onPressIn: props.onPressIn,\n    onPressOut: props.onPressOut\n  };\n}\nTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nmodule.exports = TouchableWithoutFeedback;","map":{"version":3,"names":["Pressability","PressabilityDebugView","View","React","PASSTHROUGH_PROPS","TouchableWithoutFeedback","state","pressability","createPressabilityConfig","props","element","Children","only","children","__DEV__","type","push","hitSlop","getEventHandlers","onBlur","onFocus","eventHandlersWithoutBlurAndFocus","elementProps","accessible","accessibilityState","disabled","focusable","onPress","undefined","prop","cloneElement","configure","reset","Component","cancelable","rejectResponderTermination","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onLongPress","onPressIn","onPressOut","displayName","module","exports"],"sources":["D:/React/TaxiApp/cabApp/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../../Components/View/ViewAccessibility';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  LayoutEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport View from '../../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  accessibilityViewIsModal?: ?boolean,\n  accessible?: ?boolean,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  focusable?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  nativeID?: ?string,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n  onBlur?: ?(event: BlurEvent) => mixed,\n  onFocus?: ?(event: FocusEvent) => mixed,\n  onLayout?: ?(event: LayoutEvent) => mixed,\n  onLongPress?: ?(event: PressEvent) => mixed,\n  onPress?: ?(event: PressEvent) => mixed,\n  onPressIn?: ?(event: PressEvent) => mixed,\n  onPressOut?: ?(event: PressEvent) => mixed,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n  touchSoundDisabled?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nconst PASSTHROUGH_PROPS = [\n  'accessibilityActions',\n  'accessibilityElementsHidden',\n  'accessibilityHint',\n  'accessibilityIgnoresInvertColors',\n  'accessibilityLabel',\n  'accessibilityLiveRegion',\n  'accessibilityRole',\n  'accessibilityValue',\n  'accessibilityViewIsModal',\n  'hitSlop',\n  'importantForAccessibility',\n  'nativeID',\n  'onAccessibilityAction',\n  'onBlur',\n  'onFocus',\n  'onLayout',\n  'testID',\n];\n\nclass TouchableWithoutFeedback extends React.Component<Props, State> {\n  state: State = {\n    pressability: new Pressability(createPressabilityConfig(this.props)),\n  };\n\n  render(): React.Node {\n    const element = React.Children.only(this.props.children);\n    const children = [element.props.children];\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"red\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    const elementProps: {[string]: mixed, ...} = {\n      ...eventHandlersWithoutBlurAndFocus,\n      accessible: this.props.accessible !== false,\n      accessibilityState:\n        this.props.disabled != null\n          ? {\n              ...this.props.accessibilityState,\n              disabled: this.props.disabled,\n            }\n          : this.props.accessibilityState,\n      focusable:\n        this.props.focusable !== false && this.props.onPress !== undefined,\n    };\n    for (const prop of PASSTHROUGH_PROPS) {\n      if (this.props[prop] !== undefined) {\n        elementProps[prop] = this.props[prop];\n      }\n    }\n\n    return React.cloneElement(element, elementProps, ...children);\n  }\n\n  componentDidUpdate(): void {\n    this.state.pressability.configure(createPressabilityConfig(this.props));\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nfunction createPressabilityConfig(props: Props): PressabilityConfig {\n  return {\n    cancelable: !props.rejectResponderTermination,\n    disabled:\n      props.disabled !== null\n        ? props.disabled\n        : props.accessibilityState?.disabled,\n    hitSlop: props.hitSlop,\n    delayLongPress: props.delayLongPress,\n    delayPressIn: props.delayPressIn,\n    delayPressOut: props.delayPressOut,\n    minPressDuration: 0,\n    pressRectOffset: props.pressRetentionOffset,\n    android_disableSound: props.touchSoundDisabled,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onLongPress: props.onLongPress,\n    onPress: props.onPress,\n    onPressIn: props.onPressIn,\n    onPressOut: props.onPressOut,\n  };\n}\n\nTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\n\nmodule.exports = TouchableWithoutFeedback;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}